<?xml version="1.0" encoding="UTF-8"?>
<con:soapui-project id="2b16cb93-f520-4601-bd1b-ccae16446e35" activeEnvironment="Default" name="tianqi" resourceRoot="" soapui-version="5.1.2" xmlns:con="http://eviware.com/soapui/config"><con:settings/><con:interface xsi:type="con:RestService" id="4454782c-6c82-4575-9910-5c7f19c46cba" wadlVersion="http://wadl.dev.java.net/2009/02" name="http://apis.baidu.com" type="rest" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart=""/><con:endpoints><con:endpoint>http://apis.baidu.com</con:endpoint></con:endpoints><con:resource name="Citylist" path="/apistore/weatherservice/citylist" id="5f6c1d85-5bcd-42af-87c7-66ee1dbabcc7"><con:settings/><con:parameters><con:parameter><con:name>cityname</con:name><con:value/><con:style>QUERY</con:style><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>apikey</con:name><con:value/><con:style>QUERY</con:style><con:default/><con:description xsi:nil="true"/></con:parameter></con:parameters><con:method name="Citylist" id="fc01f55a-8a15-4f1c-a209-706ab16339d1" method="GET"><con:settings/><con:parameters/><con:representation type="RESPONSE"><con:mediaType>text/plain</con:mediaType><con:status>200</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>text/html; charset=GBK</con:mediaType><con:status>200</con:status><con:params/><con:element>html</con:element></con:representation><con:request name="Request 1" id="1d5df631-456d-4f00-9bb2-afb5c061f4df" mediaType="application/json"><con:settings/><con:endpoint>http://apis.baidu.com</con:endpoint><con:request/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder><con:entry>cityname</con:entry></con:parameterOrder></con:request></con:method></con:resource></con:interface><con:testSuite id="80c43508-1f76-47fc-a185-56ba5e8d664d" name="common_testsuite"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase id="7e0e32d1-e5e8-4a07-82ba-3e287b079bd2" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="cookie" searchProperties="true"><con:settings/><con:testStep type="properties" name="user_cookie" id="3e2411ee-0f32-463c-8706-448f3e4ed19c"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>teardown</con:name><con:value/></con:property><con:property><con:name>user001</con:name><con:value>DedeUserID=15663561;DedeUserID__ckMd5=215d9245b74d109f;SESSDATA=f7ae1726%2C1447838173%2C75dfa3b4;_dfcaptcha=a5f6f6425d29132b63dfad61bd91f584;sid=d4lo0f8a	;</con:value></con:property><con:property><con:name>user000</con:name><con:value>DedeUserID=4780461; DedeUserID__ckMd5=13d78097a9671f45; SESSDATA=a2836ab9%2C1448509481%2C25efe99e;_dfcaptcha=80f4f821119131079e8d059b830990ba;sid=d5u4wahs;</con:value></con:property><con:property><con:name>user005</con:name><con:value>DedeUserID=17191256; DedeUserID__ckMd5=3584ad65e4e5417e; SESSDATA=dfee6279%2C1447147750%2Cadbe8899;_dfcaptcha=8d62da0cb8dce674cd0717e0489a184d;sid=an0mgthy;</con:value></con:property><con:property><con:name>user006</con:name><con:value>DedeUserID=17668003;DedeUserID__ckMd5=8aa32229517ebaac;SESSDATA=58b5abf5%2C1452141534%2C4f4ae21a;_dfcaptcha=94fc8e898cbb0edba612f52de8d85071;sid=jr4g236n;</con:value></con:property><con:property><con:name>access000</con:name><con:value>access_key=d0de30d533bd8aed1254f4d87774204a</con:value></con:property><con:property><con:name>baiduapi</con:name><con:value>apikey=f250ae187f9cb2af27a3d9c37a5a143e</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="properties" name="access_key" id="092f2cd2-9477-4c7e-ac8c-44fa6835492f"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>lentillll</con:name><con:value>access_key=d0de30d533bd8aed1254f4d87774204a</con:value></con:property><con:property><con:name>nsirone</con:name><con:value>access_key=703cadab42425d62a10096c28fe31909</con:value></con:property><con:property><con:name>gege</con:name><con:value>access_key=4499e3af2f03e85440982c518a7359c2</con:value></con:property></con:properties></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase id="13c50548-e854-4153-969b-481f5c1ba824" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="aaa" searchProperties="true"><con:settings/><con:testStep type="properties" name="testdata" id="cb1b894e-bfd1-438a-9497-42ae66ae395c"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>cityname</con:name><con:value/></con:property></con:properties></con:config></con:testStep><con:testStep type="transfer" name="Property Transfer" id="7528f273-03ba-42ac-8d8c-983b52635571"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>cityname</con:name><con:sourceType>cityname</con:sourceType><con:sourceStep>testdata</con:sourceStep><con:targetType>cityname</con:targetType><con:targetStep>aaa</con:targetStep><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="aaa" id="fd9fe0ec-d3c9-497d-8a52-4aa1639257f6"><con:settings/><con:config service="http://apis.baidu.com" resourcePath="/apistore/weatherservice/citylist" methodName="Citylist" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="aaa" id="1d5df631-456d-4f00-9bb2-afb5c061f4df" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Cookie" value="" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>http://apis.baidu.com</con:endpoint><con:request/><con:originalUri>http://apis.baidu.com/apistore/weatherservice/citylist</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="cityname" value="朝阳" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>cityname</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:properties/><con:reportParameters/></con:testSuite><con:testSuite id="6afa4da4-c733-45c5-8292-9f25c0ae2053" name="1312"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase id="3399dec7-0040-4c0a-8fd5-686a0887f97e" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TestCase 1" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Groovy Script" id="40c50490-9ccf-4796-b812-3205677e6417"><con:settings/><con:config><script>import com.eviware.soapui.support.types.StringToObjectMap
import groovy.json.JsonSlurper
import com.eviware.soapui.impl.wsdl.support.http.HttpClientSupport
import org.apache.http.impl.cookie.BasicClientCookie
import com.eviware.soapui.support.types.StringToStringMap


//根据案例修改待传入的参数
def params_list =  ['cityname=朝阳']


//待跑用例名称
def testcase_name = 'aaa'
def teststep_name = 'aaa'

Cookie(testcase_name,teststep_name,'baiduapi')

//执行用例
def re = getContentOut(testcase_name,teststep_name,params_list)
//校验点
//assert(re.errNum == 0)
log.info re

//getContentOut 模拟请求
def getContentOut(String testcase_name,String teststep_name,List request_params){
	def testproject = testRunner.testCase.testSuite.project
	def testcase = testproject.testSuites['common_testsuite'].testCases[testcase_name]

	for(i in request_params){
		testcase.testSteps['testdata'].setPropertyValue(i.split('=')[0],i.split('=')[1])
		log.info i.split('=')[0]
		log.info i.split('=')[1]
		}

	def contextMap = new StringToObjectMap(context)
	def runner = testcase.run(contextMap,false)
	//获取测试的请求
	def testcase_stepcount = testcase.getTestStepCount() 

	def response_content = runner.getResults()[testcase_stepcount-1].getResponseContent()
	log.info response_content
     //还原设置参数
	tearDownInput(testcase_name,request_params)

	//还原cookie设置
	setCookies(testcase_name, teststep_name,'teardown')

     //把测试结果json化后传出去
	def slurper = new JsonSlurper()
	def re = slurper.parseText(response_content)
	
	return re
}

//tearDownInput 还原参数设置
def tearDownInput(String testcase_name,List request_params){
	for(i in request_params){
		testRunner.testCase.testSuite.project.testSuites['common_testsuite'].testCases[testcase_name].testSteps['testdata'].setPropertyValue(i.split('=')[0],'')
		}
}

//setCookies 设置cookies
def setCookies(String testcase_name,String teststep_name,String userid){
	//按用户名读取预置的cookie值
	def testproject = testRunner.testCase.testSuite.project
	def cookies_str = testproject.testSuites['common_testsuite'].testCases['cookie'].testSteps['user_cookie'].getPropertyValue(userid)
	def reqheaders = new StringToStringMap()
	reqheaders.put('Cookie',cookies_str)
	testproject.testSuites['common_testsuite'].getTestCaseByName(testcase_name).getTestStepByName(teststep_name).testRequest.setRequestHeaders(reqheaders)	
}

def Cookie(String testcase_name,String teststep_name,String userid){
	//按用户名读取预置的cookie值
	def testproject = testRunner.testCase.testSuite.project
	def cookies_str = testproject.testSuites['common_testsuite'].testCases['cookie'].testSteps['user_cookie'].getPropertyValue(userid)
	def reqheaders = new StringToStringMap()
//	reqheaders.put('Cookie',cookies_str)
	reqheaders.put(cookies_str.split('=')[0],cookies_str.split('=')[1])
	testproject.testSuites['common_testsuite'].getTestCaseByName(testcase_name).getTestStepByName(teststep_name).testRequest.setRequestHeaders(reqheaders)	
}

//getCaptcha 设置Captcha
def setaptcha(String userid,List prams_list){
	//按用户名读取预置的cookie值
	def testproject = testRunner.testCase.testSuite.project
	def cookies_str = testproject.testSuites['common_testsuite'].testCases['cookie'].testSteps['user_cookie'].getPropertyValue(userid)
	
	def values = cookies_str.split(';')
	
	for(i in (0..(values.size()-1))){
		if(values[i].split('=')[0] == '_dfcaptcha') {
			prams_list.add('captcha=' + values[i].split('=')[1])
			return prams_list
		}
	}
	
}</script></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:properties/><con:reportParameters/></con:testSuite><con:requirements/><con:properties/><con:wssContainer/><con:databaseConnectionContainer/><con:oAuth2ProfileContainer/><con:reporting><con:reportTemplates/><con:xmlTemplates/><con:parameters/></con:reporting></con:soapui-project>