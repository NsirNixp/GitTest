<?xml version="1.0" encoding="UTF-8"?>
<con:soapui-project id="084604aa-b42e-453b-8da4-4bdf73ab2aa2" activeEnvironment="Default" name="播放历史的一些东西" resourceRoot="" soapui-version="5.1.2" xmlns:con="http://eviware.com/soapui/config"><con:settings/><con:interface xsi:type="con:RestService" id="60252c62-8220-4da7-ba03-3c5d0c763793" wadlVersion="http://wadl.dev.java.net/2009/02" name="http://172.16.33.56:6081" type="rest" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart=""/><con:endpoints><con:endpoint>http://172.16.0.26:6081</con:endpoint></con:endpoints><con:resource name="archive-cache设置降级比例" path="/x/v2/archive/memcache/ratio" id="27b695f8-a1d3-46a5-b34e-655bc561eb24"><con:settings/><con:parameters><con:parameter><con:name>appkey</con:name><con:value/><con:style>QUERY</con:style><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>appsecret</con:name><con:value/><con:style>QUERY</con:style><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>ts</con:name><con:value/><con:style>QUERY</con:style><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>sign</con:name><con:value/><con:style>QUERY</con:style><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>seed</con:name><con:value/><con:style>QUERY</con:style><con:default/><con:description xsi:nil="true"/></con:parameter></con:parameters><con:method name="cache/set" id="6833e357-cd94-4865-811f-b192ef535bdf" method="POST"><con:settings/><con:parameters/><con:representation type="RESPONSE"><con:mediaType>application/json;charset=utf-8</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:rat="http://172.16.0.26/x/archive/cache/ratio">rat:Response</con:element></con:representation><con:representation type="REQUEST"><con:mediaType>application/x-www-form-urlencoded</con:mediaType><con:params/></con:representation><con:representation type="REQUEST"><con:mediaType>multipart/form-data</con:mediaType><con:params/></con:representation><con:representation type="REQUEST"><con:mediaType>multipart/mixed</con:mediaType><con:params/></con:representation><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:request name="Request 1" id="25ba2bc0-14b0-4bdf-95fa-f60c50e14ef9" mediaType="application/x-www-form-urlencoded" postQueryString="true"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://172.16.33.56:6081</con:endpoint><con:request/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder><con:entry>appkey</con:entry><con:entry>appsecret</con:entry><con:entry>ts</con:entry><con:entry>sign</con:entry><con:entry>seed</con:entry></con:parameterOrder></con:request></con:method></con:resource><con:resource name="archive-cache获取降级比例" path="/x/v2/archive/memcache/ratio/get" id="712fab25-075a-49bb-9d4b-9fef6ede80b3"><con:settings/><con:parameters><con:parameter><con:name>appkey</con:name><con:value/><con:style>QUERY</con:style><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>appsecret</con:name><con:value/><con:style>QUERY</con:style><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>ts</con:name><con:value/><con:style>QUERY</con:style><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>sign</con:name><con:value/><con:style>QUERY</con:style><con:default/><con:description xsi:nil="true"/></con:parameter></con:parameters><con:method name="cache/get" id="fcb984a4-e928-4cf0-803d-4baf25e08098" method="GET"><con:settings/><con:parameters/><con:representation type="RESPONSE"><con:mediaType>application/json;charset=utf-8</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:get="http://172.16.0.26/x/archive/cache/ratio/get">get:Response</con:element></con:representation><con:request name="Request 1" id="22665937-0bce-4c94-9e73-537aa99239b8" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://172.16.33.56:6081</con:endpoint><con:request/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder><con:entry>appkey</con:entry><con:entry>appsecret</con:entry><con:entry>ts</con:entry><con:entry>sign</con:entry></con:parameterOrder></con:request></con:method></con:resource><con:resource name="archive-mysql设置降级比例" path="/x/v2/archive/mysql/ratio" id="97b38ddc-976c-4a6b-8c4e-0058030933c3"><con:settings/><con:parameters><con:parameter><con:name>appkey</con:name><con:value/><con:style>QUERY</con:style><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>appsecret</con:name><con:value/><con:style>QUERY</con:style><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>ts</con:name><con:value/><con:style>QUERY</con:style><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>sign</con:name><con:value/><con:style>QUERY</con:style><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>seed</con:name><con:value/><con:style>QUERY</con:style><con:default/><con:description xsi:nil="true"/></con:parameter></con:parameters><con:method name="mysql/ratio" id="37046337-767d-4a63-8df3-27994e1c8e4a" method="POST"><con:settings/><con:parameters/><con:representation type="RESPONSE"><con:mediaType>application/json;charset=utf-8</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:rat="http://172.16.0.26/x/archive/mysql/ratio">rat:Response</con:element></con:representation><con:representation type="REQUEST"><con:mediaType>application/x-www-form-urlencoded</con:mediaType><con:params/></con:representation><con:request name="Request 1" id="feedf376-41d8-410e-8fe2-0374635329eb" mediaType="application/x-www-form-urlencoded" postQueryString="true"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://172.16.33.56:6081</con:endpoint><con:request/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder><con:entry>appkey</con:entry><con:entry>appsecret</con:entry><con:entry>ts</con:entry><con:entry>sign</con:entry><con:entry>seed</con:entry></con:parameterOrder></con:request></con:method></con:resource><con:resource name="archive-mysql获取降级比例" path="/x/v2/archive/mysql/ratio/get" id="f42e3e79-b7a1-4ae5-a2ac-bfca60f8bd72"><con:settings/><con:parameters><con:parameter><con:name>appkey</con:name><con:value/><con:style>QUERY</con:style><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>appsecret</con:name><con:value/><con:style>QUERY</con:style><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>ts</con:name><con:value/><con:style>QUERY</con:style><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>sign</con:name><con:value/><con:style>QUERY</con:style><con:default/><con:description xsi:nil="true"/></con:parameter></con:parameters><con:method name="mysql/ratio/get" id="af20e915-f543-48fd-9a54-6facbdec2082" method="GET"><con:settings/><con:parameters/><con:request name="Request 1" id="7ddfab43-27a4-4747-8e82-1925a487e7af" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://172.16.33.56:6081</con:endpoint><con:request/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder><con:entry>appkey</con:entry><con:entry>appsecret</con:entry><con:entry>ts</con:entry><con:entry>sign</con:entry></con:parameterOrder></con:request></con:method></con:resource><con:resource name="archive_hbase设置降级比例" path="/x/v2/archive/hbase/ratio" id="ee58055e-9fa6-4905-9fad-5c219a1f5000"><con:settings/><con:parameters><con:parameter><con:name>appkey</con:name><con:value/><con:style>QUERY</con:style><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>appsecret</con:name><con:value/><con:style>QUERY</con:style><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>ts</con:name><con:value/><con:style>QUERY</con:style><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>sign</con:name><con:value/><con:style>QUERY</con:style><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>seed</con:name><con:value/><con:style>QUERY</con:style><con:default/><con:description xsi:nil="true"/></con:parameter></con:parameters><con:method name="archive/hbase/ratio" id="32158985-c499-40ee-a302-62ad72fbb040" method="POST"><con:settings/><con:parameters/><con:representation type="RESPONSE"><con:mediaType>application/json;charset=utf-8</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:rat="http://172.16.0.26/x/archive/hbase/ratio">rat:Response</con:element></con:representation><con:representation type="REQUEST"><con:mediaType>application/x-www-form-urlencoded</con:mediaType><con:params/></con:representation><con:request name="Request 1" id="7fe4d8be-0ad7-407e-be38-7eca24bbce75" mediaType="application/x-www-form-urlencoded" postQueryString="true"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://172.16.33.56:6081</con:endpoint><con:request/><con:originalUri>http://172.16.0.26/x/archive/hbase/ratio</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder><con:entry>appkey</con:entry><con:entry>appsecret</con:entry><con:entry>ts</con:entry><con:entry>sign</con:entry><con:entry>seed</con:entry></con:parameterOrder></con:request></con:method></con:resource><con:resource name="archive_hbase获取降级比例" path="/x/v2/archive/hbase/ratio/get" id="6bb45473-1b0c-4e83-b6b1-12177851e304"><con:settings/><con:parameters><con:parameter><con:name>appkey</con:name><con:value/><con:style>QUERY</con:style><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>appsecret</con:name><con:value/><con:style>QUERY</con:style><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>ts</con:name><con:value/><con:style>QUERY</con:style><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>sign</con:name><con:value/><con:style>QUERY</con:style><con:default/><con:description xsi:nil="true"/></con:parameter></con:parameters><con:method name="archive/hbase/get" id="82be78a9-bcf1-407a-a1f5-5a6670ff8a74" method="GET"><con:settings/><con:parameters/><con:request name="Request 1" id="990ca146-e491-4d4a-b6b6-d0844e5750ab" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://172.16.33.56:6081</con:endpoint><con:request/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder><con:entry>appkey</con:entry><con:entry>appsecret</con:entry><con:entry>ts</con:entry><con:entry>sign</con:entry></con:parameterOrder></con:request></con:method></con:resource><con:resource name="获取单个稿件信息" path="/x/v2/archive" id="c2cbf96d-4809-4578-983d-2127b0323948"><con:settings/><con:parameters><con:parameter><con:name>appkey</con:name><con:value/><con:style>QUERY</con:style><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>appsecret</con:name><con:value/><con:style>QUERY</con:style><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>sign</con:name><con:value/><con:style>QUERY</con:style><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>ts</con:name><con:value/><con:style>QUERY</con:style><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>aid</con:name><con:value/><con:style>QUERY</con:style><con:default/><con:description xsi:nil="true"/></con:parameter></con:parameters><con:method name="/x/archive" id="e22e4622-15fe-4ba2-8f8d-9ae723d1d4f5" method="GET"><con:settings/><con:parameters/><con:representation type="RESPONSE"><con:mediaType>application/json;charset=utf-8</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:arc="http://172.16.0.26/x/archive">arc:Response</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:request name="Request 1" id="dfef0c19-08fd-45c9-ba75-dfd4ef7c1154" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://172.16.33.56:6081</con:endpoint><con:request/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder><con:entry>appkey</con:entry><con:entry>appsecret</con:entry><con:entry>sign</con:entry><con:entry>ts</con:entry><con:entry>aid</con:entry></con:parameterOrder></con:request></con:method></con:resource><con:resource name="获取多个稿件信息" path="/x/v2/archive/archives" id="868d7400-3765-44b4-b1a2-c27f9c6689e7"><con:settings/><con:parameters><con:parameter><con:name>appkey</con:name><con:value/><con:style>QUERY</con:style><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>appsecret</con:name><con:value/><con:style>QUERY</con:style><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>sign</con:name><con:value/><con:style>QUERY</con:style><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>ts</con:name><con:value/><con:style>QUERY</con:style><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>aids</con:name><con:value/><con:style>QUERY</con:style><con:default/><con:description xsi:nil="true"/></con:parameter></con:parameters><con:method name="/x/archive/archives" id="0f519def-d8dd-4a8b-8b4a-312bcd71dd6a" method="GET"><con:settings/><con:parameters/><con:representation type="RESPONSE"><con:mediaType>application/json;charset=utf-8</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:arc="http://172.16.0.26/x/archive/archives">arc:Response</con:element></con:representation><con:request name="Request 1" id="147446fb-c354-48c3-be05-b3e5774809e3" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://172.16.33.56:6081</con:endpoint><con:request/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder><con:entry>appkey</con:entry><con:entry>appsecret</con:entry><con:entry>sign</con:entry><con:entry>ts</con:entry><con:entry>aids</con:entry></con:parameterOrder></con:request></con:method></con:resource><con:resource name="删除稿件缓存信息" path="/x/v2/archive/cache/del" id="358a376b-1059-4191-8484-93f50f25c086"><con:settings/><con:parameters><con:parameter><con:name>appkey</con:name><con:value/><con:style>QUERY</con:style><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>appsecret</con:name><con:value/><con:style>QUERY</con:style><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>sign</con:name><con:value/><con:style>QUERY</con:style><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>ts</con:name><con:value/><con:style>QUERY</con:style><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>aid</con:name><con:value/><con:style>QUERY</con:style><con:default/><con:description xsi:nil="true"/></con:parameter></con:parameters><con:method name="/x/archive/cache/del" id="d6818552-7a6c-480d-be4b-186ffa608f37" method="POST"><con:settings/><con:parameters/><con:representation type="RESPONSE"><con:mediaType>application/json;charset=utf-8</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:del="http://172.16.0.26/x/archive/cache/del">del:Response</con:element></con:representation><con:representation type="REQUEST"><con:mediaType>application/x-www-form-urlencoded</con:mediaType><con:params/></con:representation><con:request name="Request 1" id="3ac03eb8-5ded-4b94-bd55-2af5c93047a9" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://172.16.33.56:6081</con:endpoint><con:request/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder><con:entry>appkey</con:entry><con:entry>appsecret</con:entry><con:entry>sign</con:entry><con:entry>ts</con:entry><con:entry>aid</con:entry></con:parameterOrder></con:request></con:method></con:resource><con:resource name="相关视频信息" path="/x/v2/archive/relation" id="a8a9034b-7c37-4a48-9857-2a50deb90ae9"><con:settings/><con:parameters><con:parameter><con:name>appkey</con:name><con:value/><con:style>QUERY</con:style><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>appsecret</con:name><con:value/><con:style>QUERY</con:style><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>sign</con:name><con:value/><con:style>QUERY</con:style><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>ts</con:name><con:value/><con:style>QUERY</con:style><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>aid</con:name><con:value/><con:style>QUERY</con:style><con:default/><con:description xsi:nil="true"/></con:parameter></con:parameters><con:method name="/x/v2/relation" id="ee69e5d5-08a9-4d5a-8d80-da54729e2839" method="GET"><con:settings/><con:parameters/><con:representation type="FAULT"><con:mediaType>text/plain; charset=utf-8</con:mediaType><con:status>404</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json;charset=utf-8</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:rel="http://172.16.0.26/x/v2/relation">rel:Response</con:element></con:representation><con:request name="Request 1" id="0612018a-d852-403b-8dfd-2c087d042675" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://172.16.33.56:6081</con:endpoint><con:request/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder><con:entry>appkey</con:entry><con:entry>appsecret</con:entry><con:entry>sign</con:entry><con:entry>ts</con:entry><con:entry>aid</con:entry></con:parameterOrder></con:request></con:method></con:resource><con:resource name="archive-redis设置降级比例" path="/x/v2/archive/redis/ratio" id="6cee9def-0d3d-4c70-8d4f-cf0c267b3f24"><con:settings/><con:parameters><con:parameter><con:name>appkey</con:name><con:value/><con:style>QUERY</con:style><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>appsecret</con:name><con:value/><con:style>QUERY</con:style><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>ts</con:name><con:value/><con:style>QUERY</con:style><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>sign</con:name><con:value/><con:style>QUERY</con:style><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>seed</con:name><con:value/><con:style>QUERY</con:style><con:default/><con:description xsi:nil="true"/></con:parameter></con:parameters><con:method name="Method 1" id="2dc6b55f-801b-492e-a5cb-ef45e135b5b2" method="POST"><con:settings/><con:parameters/><con:request name="Request 1" id="059004db-632e-46e9-9137-c99257d79bd9" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://172.16.33.56:6081</con:endpoint><con:request/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder><con:entry>appkey</con:entry><con:entry>appsecret</con:entry><con:entry>ts</con:entry><con:entry>sign</con:entry><con:entry>seed</con:entry></con:parameterOrder></con:request></con:method></con:resource><con:resource name="archive-redis获取降级比例" path="/x/v2/archive/redis/ratio/get" id="52a265e6-e488-4587-8927-9f1b479808f5"><con:settings/><con:parameters><con:parameter><con:name>appkey</con:name><con:value/><con:style>QUERY</con:style><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>appsecret</con:name><con:value/><con:style>QUERY</con:style><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>ts</con:name><con:value/><con:style>QUERY</con:style><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>sign</con:name><con:value/><con:style>QUERY</con:style><con:default/><con:description xsi:nil="true"/></con:parameter></con:parameters><con:method name="Method 1" id="002f89c6-953c-4793-9313-eabbeea5a699" method="GET"><con:settings/><con:parameters/><con:request name="Request 1" id="6b3664e7-1fda-4c2f-a363-fe798f13da62" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://172.16.33.56:6081</con:endpoint><con:request/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder><con:entry>appkey</con:entry><con:entry>appsecret</con:entry><con:entry>ts</con:entry><con:entry>sign</con:entry></con:parameterOrder></con:request></con:method></con:resource><con:resource name="获取用户推荐视频信息" path="/x/v2/archive/recommend626" id="d3b84d40-be48-4ed6-b33a-a0c65750dc9f"><con:settings/><con:parameters><con:parameter><con:name>appkey</con:name><con:value/><con:style>QUERY</con:style><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>appsecret</con:name><con:value/><con:style>QUERY</con:style><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>sign</con:name><con:value/><con:style>QUERY</con:style><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>ts</con:name><con:value/><con:style>QUERY</con:style><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>mid</con:name><con:value/><con:style>QUERY</con:style><con:default/><con:description xsi:nil="true"/></con:parameter></con:parameters><con:method name="Method 1" id="b4eb2d62-00ce-4952-b0b2-505a80492f04" method="GET"><con:settings/><con:parameters/><con:representation type="FAULT"><con:mediaType>text/plain; charset=utf-8</con:mediaType><con:status>404</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json;charset=utf-8</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:rec="http://172.16.0.26/x/v2/archive/recommend626">rec:Response</con:element></con:representation><con:request name="Request 1" id="a9cdb6a0-5a34-4554-9e0b-97a6faaa13d7" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://172.16.0.26:6081</con:endpoint><con:request/><con:originalUri>http://172.16.0.26/x/v2/archive/recommend626</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder><con:entry>appkey</con:entry><con:entry>appsecret</con:entry><con:entry>sign</con:entry><con:entry>ts</con:entry><con:entry>mid</con:entry></con:parameterOrder></con:request></con:method></con:resource><con:resource name="添加videoshot" path="/x/v2/archive/videoshot/add" id="99fd597a-f88c-4e3e-957b-2899ca770a8d"><con:settings/><con:parameters><con:parameter><con:name>appkey</con:name><con:value/><con:style>QUERY</con:style><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>appsecret</con:name><con:value/><con:style>QUERY</con:style><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>sign</con:name><con:value/><con:style>QUERY</con:style><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>ts</con:name><con:value/><con:style>QUERY</con:style><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>cid</con:name><con:value/><con:style>QUERY</con:style><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>count</con:name><con:value/><con:style>QUERY</con:style><con:default/><con:description xsi:nil="true"/></con:parameter></con:parameters><con:method name="Method 1" id="bb247e4d-f96d-4e39-b128-12c73d26db28" method="POST"><con:settings/><con:parameters/><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json;charset=utf-8</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:add="http://172.16.0.26/x/v2/archive/videoshot/add">add:Response</con:element></con:representation><con:request name="Request 1" id="4b92a77b-f539-4900-b796-70a23e24fd17" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://172.16.0.26:6081</con:endpoint><con:request/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder><con:entry>appkey</con:entry><con:entry>appsecret</con:entry><con:entry>sign</con:entry><con:entry>ts</con:entry><con:entry>cid</con:entry><con:entry>count</con:entry></con:parameterOrder></con:request></con:method></con:resource><con:resource name="获取videoshot" path="/x/v2/archive/videoshot" id="4b6d3f84-d402-46b1-94ba-3b50d3dfaf1a"><con:settings/><con:parameters><con:parameter><con:name>appkey</con:name><con:value/><con:style>QUERY</con:style><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>appsecret</con:name><con:value/><con:style>QUERY</con:style><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>sign</con:name><con:value/><con:style>QUERY</con:style><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>ts</con:name><con:value/><con:style>QUERY</con:style><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>cid</con:name><con:value/><con:style>QUERY</con:style><con:default/><con:description xsi:nil="true"/></con:parameter></con:parameters><con:method name="Method 1" id="4a123436-9871-4b29-a0d3-c5441af25d67" method="GET"><con:settings/><con:parameters/><con:representation type="RESPONSE"><con:mediaType>application/json;charset=utf-8</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:vid="http://172.16.0.26/x/v2/archive/videoshot">vid:Response</con:element></con:representation><con:request name="Request 1" id="cc83719d-d6b5-4dc4-b7fb-2feb40f45966" mediaType="application/json"><con:settings/><con:endpoint>http://172.16.0.26:6081</con:endpoint><con:request/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder><con:entry>appkey</con:entry><con:entry>appsecret</con:entry><con:entry>sign</con:entry><con:entry>ts</con:entry><con:entry>cid</con:entry></con:parameterOrder></con:request></con:method></con:resource><con:resource name="获取视频针对IP的权限值" path="/x/v2/archive/zlimit" id="6e382802-ea76-477f-a4e5-58abd07a2902"><con:settings/><con:parameters><con:parameter><con:name>appkey</con:name><con:value/><con:style>QUERY</con:style><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>appsecret</con:name><con:value/><con:style>QUERY</con:style><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>sign</con:name><con:value/><con:style>QUERY</con:style><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>ts</con:name><con:value/><con:style>QUERY</con:style><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>aid</con:name><con:value/><con:style>QUERY</con:style><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>ip</con:name><con:value/><con:style>QUERY</con:style><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>cdnip</con:name><con:value/><con:style>QUERY</con:style><con:default/><con:description xsi:nil="true"/></con:parameter></con:parameters><con:method name="Method 1" id="a7212728-2726-49ff-afb1-ca573c2a952c" method="POST"><con:settings/><con:parameters/><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:representation type="FAULT"><con:mediaType>text/plain; charset=utf-8</con:mediaType><con:status>404</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json;charset=utf-8</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:zlim="http://172.16.0.26/x/v2/archive/zlimit">zlim:Response</con:element></con:representation><con:representation type="REQUEST"><con:mediaType>application/x-www-form-urlencoded</con:mediaType><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:request name="Request 1" id="73b585f6-518d-4a2c-bc4d-ce1dfb95bbd2" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://172.16.0.26:6081</con:endpoint><con:request/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder><con:entry>appkey</con:entry><con:entry>appsecret</con:entry><con:entry>sign</con:entry><con:entry>ts</con:entry><con:entry>aid</con:entry><con:entry>ip</con:entry><con:entry>cdnip</con:entry></con:parameterOrder></con:request></con:method></con:resource><con:resource name="获取up主视频动态" path="/x/v2/archive/moment/reply" id="8ea41c44-36d4-421b-838b-d45e03a227bb"><con:settings/><con:parameters><con:parameter><con:name>appkey</con:name><con:value/><con:style>QUERY</con:style><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>appsecret</con:name><con:value/><con:style>QUERY</con:style><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>sign</con:name><con:value/><con:style>QUERY</con:style><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>ts</con:name><con:value/><con:style>QUERY</con:style><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>mid</con:name><con:value/><con:style>QUERY</con:style><con:default/><con:description xsi:nil="true"/></con:parameter></con:parameters><con:method name="Method 1" id="c9912812-a2e5-4bb6-a9a6-fd6de735912e" method="GET"><con:settings/><con:parameters/><con:representation type="RESPONSE"><con:mediaType>application/json;charset=utf-8</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:rep="http://172.16.33.56/x/v2/archive/moment/reply">rep:Response</con:element></con:representation><con:request name="Request 1" id="56914a5e-30b2-484f-8bfb-f1e45c4f0804" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://172.16.33.56:6081</con:endpoint><con:request/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder><con:entry>appkey</con:entry><con:entry>appsecret</con:entry><con:entry>sign</con:entry><con:entry>ts</con:entry><con:entry>mid</con:entry></con:parameterOrder></con:request></con:method></con:resource></con:interface><con:interface xsi:type="con:RestService" id="ff49f1a4-cada-452d-aaaf-4b5f983a0716" wadlVersion="http://wadl.dev.java.net/2009/02" name="http://172.16.33.56:6071" type="rest" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart=""/><con:endpoints><con:endpoint>http://172.16.0.26:6071</con:endpoint></con:endpoints><con:resource name="memcache设置降级比例" path="/x/account/memcache/ratio" id="194c1757-9dea-4254-9ad5-dce5661f8d55"><con:settings/><con:parameters><con:parameter required="true"><con:name>appkey</con:name><con:value/><con:style>QUERY</con:style><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>appsecret</con:name><con:value/><con:style>QUERY</con:style><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>ts</con:name><con:value/><con:style>QUERY</con:style><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>sign</con:name><con:value/><con:style>QUERY</con:style><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter required="false"><con:name>seed</con:name><con:value/><con:style>QUERY</con:style><con:default/><con:description xsi:nil="true"/></con:parameter></con:parameters><con:method name="cache/set" id="0cb5da5c-bae7-498b-a51f-065574dc99b9" method="POST"><con:settings/><con:parameters/><con:representation type="RESPONSE"><con:mediaType>application/json;charset=utf-8</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:rat="http://172.16.0.26/x/account/cache/ratio">rat:Response</con:element></con:representation><con:representation type="REQUEST"><con:mediaType>application/x-www-form-urlencoded</con:mediaType><con:params/></con:representation><con:representation type="REQUEST"><con:mediaType>multipart/form-data</con:mediaType><con:params/></con:representation><con:representation type="FAULT"><con:mediaType>text/plain; charset=utf-8</con:mediaType><con:status>404</con:status><con:params/><con:element>data</con:element></con:representation><con:request name="Request 1" id="71a6df3d-e6b6-42cb-8b4e-48691ccb8e1b" mediaType="multipart/form-data" postQueryString="true"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="RecordRequestRepresentations">true</con:setting><con:setting id="com.eviware.soapui.support.editor.views.xml.form2.FormEditorView@ViewType">All</con:setting></con:settings><con:endpoint>http://172.16.33.56:6071</con:endpoint><con:request/><con:originalUri>http://172.16.0.26/x/account/cache/ratio</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="sign" value="13132"/>
  <con:entry key="ts" value="132123    "/>
  <con:entry key="seed" value="13213"/>
  <con:entry key="appsecret" value="123123"/>
  <con:entry key="appkey" value="1232"/>
</con:parameters><con:parameterOrder><con:entry>appkey</con:entry><con:entry>appsecret</con:entry><con:entry>ts</con:entry><con:entry>sign</con:entry><con:entry>seed</con:entry></con:parameterOrder></con:request></con:method></con:resource><con:resource name="memcache获取降级比例" path="/x/account/memcache/ratio/get" id="d27d7a93-f40c-4a4d-ba61-06d439b45ed7"><con:settings/><con:parameters><con:parameter><con:name>appkey</con:name><con:value/><con:style>QUERY</con:style><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>appsecret</con:name><con:value/><con:style>QUERY</con:style><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>ts</con:name><con:value/><con:style>QUERY</con:style><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>sign</con:name><con:value/><con:style>QUERY</con:style><con:default/><con:description xsi:nil="true"/></con:parameter></con:parameters><con:method name="cache/get" id="4e2c8db2-b4dd-4b1f-86d7-a64d92843f77" method="GET"><con:settings/><con:parameters/><con:request name="Request 1" id="9067f6a8-b232-4a56-a550-cc6cc5218dcf" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://172.16.33.56:6071</con:endpoint><con:request/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder><con:entry>appkey</con:entry><con:entry>appsecret</con:entry><con:entry>ts</con:entry><con:entry>sign</con:entry></con:parameterOrder></con:request></con:method></con:resource><con:resource name="accountapi设置降级比例" path="/x/account/api/ratio" id="ffeb47a1-6552-47af-87d1-538a4164626e"><con:settings/><con:parameters><con:parameter><con:name>appkey</con:name><con:value/><con:style>QUERY</con:style><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>appsecret</con:name><con:value/><con:style>QUERY</con:style><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>ts</con:name><con:value/><con:style>QUERY</con:style><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>sign</con:name><con:value/><con:style>QUERY</con:style><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>seed</con:name><con:value/><con:style>QUERY</con:style><con:default/><con:description xsi:nil="true"/></con:parameter></con:parameters><con:method name="mysql/set" id="34b1f249-00fb-4c39-8c22-fe068bfccfc5" method="POST"><con:settings/><con:parameters/><con:request name="Request 1" id="1ae52ff9-c00e-493d-aea0-bf19754df013" mediaType="application/x-www-form-urlencoded" postQueryString="true"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://172.16.33.56:6071</con:endpoint><con:request/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder><con:entry>appkey</con:entry><con:entry>appsecret</con:entry><con:entry>ts</con:entry><con:entry>sign</con:entry><con:entry>seed</con:entry></con:parameterOrder></con:request></con:method></con:resource><con:resource name="accountapi获取降级比例" path="/x/account/api/ratio/get" id="4d84cffd-c2e6-4aad-9cef-f4acd733deae"><con:settings/><con:parameters><con:parameter><con:name>appkey</con:name><con:value/><con:style>QUERY</con:style><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>appsecret</con:name><con:value/><con:style>QUERY</con:style><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>ts</con:name><con:value/><con:style>QUERY</con:style><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>sign</con:name><con:value/><con:style>QUERY</con:style><con:default/><con:description xsi:nil="true"/></con:parameter></con:parameters><con:method name="mysql/get" id="2f4e98c5-a545-4e6f-85b8-f827ea9b8310" method="GET"><con:settings/><con:parameters/><con:request name="Request 1" id="bc9e5274-db84-4a59-ae8b-b1b9b7de3013" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://172.16.33.56:6071</con:endpoint><con:request/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder><con:entry>appkey</con:entry><con:entry>appsecret</con:entry><con:entry>ts</con:entry><con:entry>sign</con:entry></con:parameterOrder></con:request></con:method></con:resource><con:resource name="删除账号缓存" path="/x/account/cache/del" id="052c4f89-d304-4b50-96af-3f35837f7c80"><con:settings/><con:parameters><con:parameter><con:name>appkey</con:name><con:value/><con:style>QUERY</con:style><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>appsecret</con:name><con:value/><con:style>QUERY</con:style><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>sign</con:name><con:value/><con:style>QUERY</con:style><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>ts</con:name><con:value/><con:style>QUERY</con:style><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>mid</con:name><con:value/><con:style>QUERY</con:style><con:default/><con:description xsi:nil="true"/></con:parameter></con:parameters><con:method name="/x/account/cache/del" id="49b962ac-1bc7-4eed-a68b-f9b261e9df3c" method="POST"><con:settings/><con:parameters/><con:representation type="REQUEST"><con:mediaType>application/x-www-form-urlencoded</con:mediaType><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:request name="Request 1" id="6a230578-e144-4403-9607-9234146e5266" mediaType="application/x-www-form-urlencoded" postQueryString="true"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://172.16.33.56:6071</con:endpoint><con:request/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder><con:entry>appkey</con:entry><con:entry>appsecret</con:entry><con:entry>sign</con:entry><con:entry>ts</con:entry><con:entry>mid</con:entry></con:parameterOrder></con:request></con:method></con:resource><con:resource name="accountredis设置降级比例" path="/x/account/redis/ratio" id="2f0a2ddd-ce27-463b-a2cd-d6725b772143"><con:settings/><con:parameters><con:parameter><con:name>appkey</con:name><con:value/><con:style>QUERY</con:style><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>appsecret</con:name><con:value/><con:style>QUERY</con:style><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>ts</con:name><con:value/><con:style>QUERY</con:style><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>sign</con:name><con:value/><con:style>QUERY</con:style><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>seed</con:name><con:value/><con:style>QUERY</con:style><con:default/><con:description xsi:nil="true"/></con:parameter></con:parameters><con:method name="Method 1" id="fafebea3-e1f6-4964-82e4-57f5d035d8a4" method="POST"><con:settings/><con:parameters/><con:request name="Request 1" id="b20cdaea-3deb-4903-8170-b65599403366" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://172.16.33.56:6071</con:endpoint><con:request/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder><con:entry>appkey</con:entry><con:entry>appsecret</con:entry><con:entry>ts</con:entry><con:entry>sign</con:entry><con:entry>seed</con:entry></con:parameterOrder></con:request></con:method></con:resource><con:resource name="accountredis获取降级比例" path="/x/account/redis/ratio/get" id="ee35f14f-80a1-4cbb-864e-4db428491c3b"><con:settings/><con:parameters><con:parameter><con:name>appkey</con:name><con:value/><con:style>QUERY</con:style><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>appsecret</con:name><con:value/><con:style>QUERY</con:style><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>ts</con:name><con:value/><con:style>QUERY</con:style><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>sign</con:name><con:value/><con:style>QUERY</con:style><con:default/><con:description xsi:nil="true"/></con:parameter></con:parameters><con:method name="Method 1" id="0e269ea2-7c35-43a9-8761-32d3f4dba1be" method="GET"><con:settings/><con:parameters/><con:request name="Request 1" id="cea14f29-4124-4d66-ac50-6ef1f111ba23" mediaType="application/json"><con:settings/><con:endpoint>http://172.16.33.56:6071</con:endpoint><con:request/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder><con:entry>appkey</con:entry><con:entry>appsecret</con:entry><con:entry>ts</con:entry><con:entry>sign</con:entry></con:parameterOrder></con:request></con:method></con:resource></con:interface><con:interface xsi:type="con:RestService" id="c06ec1c2-0bb2-484e-b983-919ea74bc6b8" wadlVersion="http://wadl.dev.java.net/2009/02" name="http://api.bilibili.com" type="rest" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart=""/><con:endpoints><con:endpoint>http://api.bilibili.com</con:endpoint></con:endpoints><con:resource name="get" path="/x/v2/history" id="2b579600-14b7-4322-adf0-b1e377b9b4f6"><con:settings/><con:parameters><con:parameter><con:name>pn</con:name><con:value/><con:style>QUERY</con:style><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>ps</con:name><con:value/><con:style>QUERY</con:style><con:default/><con:description xsi:nil="true"/></con:parameter></con:parameters><con:method name="get" id="623ee5dc-e9d3-4240-8325-ee06bf375291" method="GET"><con:settings/><con:parameters/><con:representation type="RESPONSE"><con:mediaType>application/json;charset=utf-8</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:his="http://api.bilibili.com/x/v2/history">his:Response</con:element></con:representation><con:request name="Request 1" id="72f5344a-ebc4-4d4e-adaf-8ca153473d14" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://api.bilibili.com</con:endpoint><con:request/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder><con:entry>pn</con:entry><con:entry>ps</con:entry></con:parameterOrder></con:request></con:method></con:resource><con:resource name="del" path="/x/v2/history/del" id="053fa150-d9ab-45d7-af1a-4c11276971f1"><con:settings/><con:parameters><con:parameter><con:name>aid</con:name><con:value/><con:style>QUERY</con:style><con:default/><con:description xsi:nil="true"/></con:parameter></con:parameters><con:method name="del" id="538f95fb-3f19-4c11-88b6-29f6dfd016d1" method="POST"><con:settings/><con:parameters/><con:request name="Request 1" id="ce5d3dc4-8843-4434-a975-d07777061d2d" mediaType="application/x-www-form-urlencoded" postQueryString="true"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://api.bilibili.com</con:endpoint><con:request/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder><con:entry>aid</con:entry></con:parameterOrder></con:request></con:method></con:resource><con:resource name="clear" path="/x/v2/history/clear" id="205867dc-ff9f-4cee-91ec-438608dc890e"><con:settings/><con:parameters/><con:method name="clear" id="704e001f-dba3-4d56-b41d-4837b9088075" method="POST"><con:settings/><con:parameters/><con:request name="Request 1" id="67635d6b-9861-48e5-b774-dd5e03eeb4c2" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://api.bilibili.com</con:endpoint><con:request/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:resource name="add" path="/x/v2/history/add" id="04423fd3-8f5e-4cf0-8471-fd0ef7d4814c"><con:settings/><con:parameters><con:parameter><con:name>aid</con:name><con:value/><con:style>QUERY</con:style><con:default/><con:description xsi:nil="true"/></con:parameter></con:parameters><con:method name="add" id="dfc86394-f23b-451e-abb9-2567a595ecc7" method="POST"><con:settings/><con:parameters/><con:request name="Request 1" id="b179218b-49d0-45e9-b016-a5c4f238d69c" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://api.bilibili.com</con:endpoint><con:request/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder><con:entry>aid</con:entry></con:parameterOrder></con:request></con:method></con:resource></con:interface><con:testSuite id="18a29495-b321-4a0b-81c1-a22f46489716" name="common_testsuite"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase id="45628a9b-c247-4f3b-8827-8708baadab76" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="cookie" searchProperties="true"><con:settings/><con:testStep type="properties" name="user_cookie" id="0d5a91de-69cd-4902-8046-56c3c72ce80e"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>user001</con:name><con:value>DedeUserID=15663561;DedeUserID__ckMd5=215d9245b74d109f;SESSDATA=f7ae1726%2C1447228006%2C2ae7d08c;_dfcaptcha=f7d457380fc124c54c63b213da5274ef;sid=le4i1bqk;</con:value></con:property><con:property><con:name>user002</con:name><con:value/></con:property><con:property><con:name>user_super001</con:name><con:value>DedeUserID=5746800; DedeUserID__ckMd5=7ee132bc92fc7305; SESSDATA=c0dcae73%2C1445863602%2C60b6d178;</con:value></con:property><con:property><con:name>teardown</con:name><con:value/></con:property><con:property><con:name>user005</con:name><con:value>DedeUserID=17191256; DedeUserID__ckMd5=3584ad65e4e5417e; SESSDATA=dfee6279%2C1447147750%2Cadbe8899;_dfcaptcha=8d62da0cb8dce674cd0717e0489a184d;sid=an0mgthy;</con:value></con:property><con:property><con:name>user000</con:name><con:value>DedeUserID=4780461; DedeUserID__ckMd5=13d78097a9671f45; SESSDATA=bc1f02ec%2C1460440119%2C01a0da55;_dfcaptcha=fd193bf522249100552f1f3f17ae172a;sid=7zm9i1qf;</con:value></con:property><con:property><con:name>usernixp</con:name><con:value>DedeUserID=17668003;DedeUserID__ckMd5=8aa32229517ebaac;SESSDATA=7bf20cf0%2C1464264469%2C9c4bba7a;_dfcaptcha=528f3ca0aea9b76739ab3d2d8d040869;sid=65x6gqm9;</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="properties" name="access_key" id="bceab128-4667-4f55-b22b-08d4da4c0fa1"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>access000</con:name><con:value>access_key=d3ac48906b9ffafa4524a9cdee9e7455</con:value></con:property></con:properties></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase id="07ebf1c2-bbed-4613-a4cf-9981338f4bf1" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="/x/v2/archive/memcache/ratio" searchProperties="true"><con:settings/><con:testStep type="groovy" name="tssign" id="80ea878a-e31a-4e97-9512-94a4d54de772"><con:settings/><con:config><script>import java.util.*
import java.security.MessageDigest
import java.net.URLEncoder

//计算时间戳
Date date = new Date()
def st_string = date.getTime()
st_string = st_string.toString()
st_string = st_string.substring(0,10)


//===========================需要手工参与的地方=======================================
//1.设置data_list
//设置预读取的testdata里除sign以外的参数名字，用于计算md5
def data_list = ['appkey','appsecret','seed','ts']
//测试专用的appkey
def appkey_str = '7d9f6f6fe2a898e8'
//测试专用appkey对应的appsecret
def appsecret_str = '4de2ccdbd9db69be0c2c6437bfe6eb69'
//====================================================================================

//修改list按字母排序
data_list = data_list.sort()
log.info data_list

testRunner.testCase.testSteps["testdata"].setPropertyValue('ts',st_string)
testRunner.testCase.testSteps["testdata"].setPropertyValue('appkey',appkey_str)
testRunner.testCase.testSteps["testdata"].setPropertyValue('appsecret',appsecret_str)
def n = 0
def sg_orgin_string = ''
def sg_md5_string = ''

while (n&lt;data_list.size()){
	def getLocalPropValue = ''
	if(data_list[n] == 'appkey'){
		sg_orgin_string = sg_orgin_string + data_list[n] + '=' + java.net.URLEncoder.encode(appkey_str,'UTF-8') + '&amp;' 
	}else{
		if( testRunner.testCase.testSteps["testdata"].getPropertyValue(data_list[n]) == ''){
			log.info('null')
		}else{
			getLocalPropValue = testRunner.testCase.testSteps["testdata"].getPropertyValue(data_list[n])
			sg_orgin_string = sg_orgin_string + data_list[n] + '=' + java.net.URLEncoder.encode(getLocalPropValue,'UTF-8') + '&amp;'
		}
	}
	n = n + 1
}

def orgin_len = sg_orgin_string.size()
sg_orgin_string = sg_orgin_string[0..(orgin_len-2)]

//还原空格设置
sg_orgin_string = sg_orgin_string.replace('^',' ')

sg_orgin_string =  sg_orgin_string + appsecret_str
sg_md5_string = getMD5(sg_orgin_string)

log.info sg_orgin_string
log.info sg_md5_string

testRunner.testCase.testSteps["testdata"].setPropertyValue('sign',sg_md5_string)


//get md5
//=============================
def getMD5(String source){
	MessageDigest md5 = MessageDigest.getInstance("MD5")
	md5.update(source.getBytes())
	byte[] digest = md5.digest()
	StringBuffer sb = new StringBuffer()
	digest.eachByte {
		 sb.append(String.format("%02x", it &amp; 0xff)) 
	}
	return sb.toString()
}
</script></con:config></con:testStep><con:testStep type="properties" name="testdata" id="90066085-31a2-42f5-911c-324eee8f4dc2"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>appkey</con:name><con:value>7d9f6f6fe2a898e8</con:value></con:property><con:property><con:name>appsecret</con:name><con:value>4de2ccdbd9db69be0c2c6437bfe6eb69</con:value></con:property><con:property><con:name>ts</con:name><con:value>1463645339</con:value></con:property><con:property><con:name>sign</con:name><con:value>124557733dae47b16879eacf4d3fc165</con:value></con:property><con:property><con:name>seed</con:name><con:value/></con:property></con:properties></con:config></con:testStep><con:testStep type="transfer" name="Property Transfer" id="a4a4c519-0f9f-4431-b7c4-bb94abbb9276"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>appkey</con:name><con:sourceType>appkey</con:sourceType><con:sourceStep>testdata</con:sourceStep><con:targetType>appkey</con:targetType><con:targetStep>/x/v2/archive/memcache/ratio</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>appsecret</con:name><con:sourceType>appsecret</con:sourceType><con:sourceStep>testdata</con:sourceStep><con:targetType>appsecret</con:targetType><con:targetStep>/x/v2/archive/memcache/ratio</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>ts</con:name><con:sourceType>ts</con:sourceType><con:sourceStep>testdata</con:sourceStep><con:targetType>ts</con:targetType><con:targetStep>/x/v2/archive/memcache/ratio</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>sign</con:name><con:sourceType>sign</con:sourceType><con:sourceStep>testdata</con:sourceStep><con:targetType>sign</con:targetType><con:targetStep>/x/v2/archive/memcache/ratio</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>seed</con:name><con:sourceType>seed</con:sourceType><con:sourceStep>testdata</con:sourceStep><con:targetType>seed</con:targetType><con:targetStep>/x/v2/archive/memcache/ratio</con:targetStep><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="/x/v2/archive/memcache/ratio" id="770373d9-62e1-4615-877a-51b4c18eaba7"><con:settings/><con:config service="http://172.16.33.56:6081" resourcePath="/x/v2/archive/memcache/ratio" methodName="cache/set" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="/x/v2/archive/memcache/ratio" id="25ba2bc0-14b0-4bdf-95fa-f60c50e14ef9" mediaType="multipart/form-data" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Cookie" value="" xmlns="http://eviware.com/soapui/config"/></con:setting><con:setting id="com.eviware.soapui.support.editor.views.xml.form2.FormEditorView@ViewType">All</con:setting></con:settings><con:endpoint>http://172.16.33.56:6081</con:endpoint><con:request/><con:originalUri>http://172.16.0.26/x/archive/cache/ratio</con:originalUri><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="sign" value="124557733dae47b16879eacf4d3fc165"/>
  <con:entry key="ts" value="1463645339"/>
  <con:entry key="seed" value="0"/>
  <con:entry key="appkey" value="7d9f6f6fe2a898e8"/>
  <con:entry key="appsecret" value="4de2ccdbd9db69be0c2c6437bfe6eb69"/>
</con:parameters><con:parameterOrder><con:entry>appkey</con:entry><con:entry>appsecret</con:entry><con:entry>ts</con:entry><con:entry>sign</con:entry><con:entry>seed</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/><con:breakPoints><con:testStepId>80ea878a-e31a-4e97-9512-94a4d54de772</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase id="0c1b5cf1-5437-40a4-9f3f-95eeed4413b7" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="/x/v2/archive/memcache/ratio/get" searchProperties="true"><con:settings/><con:testStep type="groovy" name="tssign" id="a0c1503d-9b6c-4731-9bd3-427cb483b11c"><con:settings/><con:config><script>import java.util.*
import java.security.MessageDigest
import java.net.URLEncoder

//计算时间戳
Date date = new Date()
def st_string = date.getTime()
st_string = st_string.toString()
st_string = st_string.substring(0,10)


//===========================需要手工参与的地方=======================================
//1.设置data_list
//设置预读取的testdata里除sign以外的参数名字，用于计算md5
def data_list = ['appkey','appsecret','ts']
//测试专用的appkey
def appkey_str = '7d9f6f6fe2a898e8'
//测试专用appkey对应的appsecret
def appsecret_str = '4de2ccdbd9db69be0c2c6437bfe6eb69'
//====================================================================================

//修改list按字母排序
data_list = data_list.sort()
log.info data_list

testRunner.testCase.testSteps["testdata"].setPropertyValue('ts',st_string)
testRunner.testCase.testSteps["testdata"].setPropertyValue('appkey',appkey_str)
testRunner.testCase.testSteps["testdata"].setPropertyValue('appsecret',appsecret_str)
def n = 0
def sg_orgin_string = ''
def sg_md5_string = ''

while (n&lt;data_list.size()){
	def getLocalPropValue = ''
	if(data_list[n] == 'appkey'){
		sg_orgin_string = sg_orgin_string + data_list[n] + '=' + java.net.URLEncoder.encode(appkey_str,'UTF-8') + '&amp;' 
	}else{
		if( testRunner.testCase.testSteps["testdata"].getPropertyValue(data_list[n]) == ''){
			log.info('null')
		}else{
			getLocalPropValue = testRunner.testCase.testSteps["testdata"].getPropertyValue(data_list[n])
			sg_orgin_string = sg_orgin_string + data_list[n] + '=' + java.net.URLEncoder.encode(getLocalPropValue,'UTF-8') + '&amp;'
		}
	}
	n = n + 1
}

def orgin_len = sg_orgin_string.size()
sg_orgin_string = sg_orgin_string[0..(orgin_len-2)]

//还原空格设置
sg_orgin_string = sg_orgin_string.replace('^',' ')

sg_orgin_string =  sg_orgin_string + appsecret_str
sg_md5_string = getMD5(sg_orgin_string)

log.info sg_orgin_string
log.info sg_md5_string

testRunner.testCase.testSteps["testdata"].setPropertyValue('sign',sg_md5_string)

//get md5
//=============================
def getMD5(String source){
	MessageDigest md5 = MessageDigest.getInstance("MD5")
	md5.update(source.getBytes())
	byte[] digest = md5.digest()
	StringBuffer sb = new StringBuffer()
	digest.eachByte {
		 sb.append(String.format("%02x", it &amp; 0xff)) 
	}
	return sb.toString()
}
</script></con:config></con:testStep><con:testStep type="properties" name="testdata" id="d7ec23aa-b089-4ea0-978d-d57c6cdd0656"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>appkey</con:name><con:value>7d9f6f6fe2a898e8</con:value></con:property><con:property><con:name>appsecret</con:name><con:value>4de2ccdbd9db69be0c2c6437bfe6eb69</con:value></con:property><con:property><con:name>ts</con:name><con:value>1463118635</con:value></con:property><con:property><con:name>sign</con:name><con:value>145319146f2a477579e821c7c359f600</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="transfer" name="Property Transfer" id="c02e189a-14b8-41e0-8696-51c82965d42a"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>appkey</con:name><con:sourceType>appkey</con:sourceType><con:sourceStep>testdata</con:sourceStep><con:targetType>appkey</con:targetType><con:targetStep>/x/v2/archive/memcache/ratio/get</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>appsecret</con:name><con:sourceType>appsecret</con:sourceType><con:sourceStep>testdata</con:sourceStep><con:targetType>appsecret</con:targetType><con:targetStep>/x/v2/archive/memcache/ratio/get</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>ts</con:name><con:sourceType>ts</con:sourceType><con:sourceStep>testdata</con:sourceStep><con:targetType>ts</con:targetType><con:targetStep>/x/v2/archive/memcache/ratio/get</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>sign</con:name><con:sourceType>sign</con:sourceType><con:sourceStep>testdata</con:sourceStep><con:targetType>sign</con:targetType><con:targetStep>/x/v2/archive/memcache/ratio/get</con:targetStep><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="/x/v2/archive/memcache/ratio/get" id="5b0493f8-2194-4b2d-9270-bb979052fd05"><con:settings/><con:config service="http://172.16.33.56:6081" resourcePath="/x/v2/archive/memcache/ratio/get" methodName="cache/get" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="/x/v2/archive/memcache/ratio/get" id="22665937-0bce-4c94-9e73-537aa99239b8" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Cookie" value="" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>http://172.16.33.56:6081</con:endpoint><con:request/><con:originalUri>http://172.16.0.26/x/archive/cache/ratio/get</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="sign" value="145319146f2a477579e821c7c359f600"/>
  <con:entry key="ts" value="1463118635"/>
  <con:entry key="appsecret" value="4de2ccdbd9db69be0c2c6437bfe6eb69"/>
  <con:entry key="appkey" value="7d9f6f6fe2a898e8"/>
</con:parameters><con:parameterOrder><con:entry>appkey</con:entry><con:entry>appsecret</con:entry><con:entry>ts</con:entry><con:entry>sign</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/><con:breakPoints><con:testStepId>a0c1503d-9b6c-4731-9bd3-427cb483b11c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase id="c821487c-29f7-432f-bc7b-bac971c08cff" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="/x/v2/archive/hbase/ratio" searchProperties="true"><con:settings/><con:testStep type="groovy" name="tssign" id="8f23c7da-1845-4fe3-a9e1-2fa3197ea119"><con:settings/><con:config><script>import java.util.*
import java.security.MessageDigest
import java.net.URLEncoder

//计算时间戳
Date date = new Date()
def st_string = date.getTime()
st_string = st_string.toString()
st_string = st_string.substring(0,10)


//===========================需要手工参与的地方=======================================
//1.设置data_list
//设置预读取的testdata里除sign以外的参数名字，用于计算md5
def data_list = ['appkey','appsecret','seed','ts']
//测试专用的appkey
def appkey_str = '7d9f6f6fe2a898e8'
//测试专用appkey对应的appsecret
def appsecret_str = '4de2ccdbd9db69be0c2c6437bfe6eb69'
//====================================================================================

//修改list按字母排序
data_list = data_list.sort()
log.info data_list

testRunner.testCase.testSteps["testdata"].setPropertyValue('ts',st_string)
testRunner.testCase.testSteps["testdata"].setPropertyValue('appkey',appkey_str)
testRunner.testCase.testSteps["testdata"].setPropertyValue('appsecret',appsecret_str)
def n = 0
def sg_orgin_string = ''
def sg_md5_string = ''

while (n&lt;data_list.size()){
	def getLocalPropValue = ''
	if(data_list[n] == 'appkey'){
		sg_orgin_string = sg_orgin_string + data_list[n] + '=' + java.net.URLEncoder.encode(appkey_str,'UTF-8') + '&amp;' 
	}else{
		if( testRunner.testCase.testSteps["testdata"].getPropertyValue(data_list[n]) == ''){
			log.info('null')
		}else{
			getLocalPropValue = testRunner.testCase.testSteps["testdata"].getPropertyValue(data_list[n])
			sg_orgin_string = sg_orgin_string + data_list[n] + '=' + java.net.URLEncoder.encode(getLocalPropValue,'UTF-8') + '&amp;'
		}
	}
	n = n + 1
}

def orgin_len = sg_orgin_string.size()
sg_orgin_string = sg_orgin_string[0..(orgin_len-2)]

//还原空格设置
sg_orgin_string = sg_orgin_string.replace('^',' ')

sg_orgin_string =  sg_orgin_string + appsecret_str
sg_md5_string = getMD5(sg_orgin_string)

log.info sg_orgin_string
log.info sg_md5_string

testRunner.testCase.testSteps["testdata"].setPropertyValue('sign',sg_md5_string)


//get md5
//=============================
def getMD5(String source){
	MessageDigest md5 = MessageDigest.getInstance("MD5")
	md5.update(source.getBytes())
	byte[] digest = md5.digest()
	StringBuffer sb = new StringBuffer()
	digest.eachByte {
		 sb.append(String.format("%02x", it &amp; 0xff)) 
	}
	return sb.toString()
}
</script></con:config></con:testStep><con:testStep type="properties" name="testdata" id="94a49b3e-582a-4f30-b6a1-5e57ab73d24a"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>appkey</con:name><con:value>7d9f6f6fe2a898e8</con:value></con:property><con:property><con:name>appsecret</con:name><con:value>4de2ccdbd9db69be0c2c6437bfe6eb69</con:value></con:property><con:property><con:name>ts</con:name><con:value>1463645347</con:value></con:property><con:property><con:name>sign</con:name><con:value>d7061b889cef3d1c11da2e979b5b7736</con:value></con:property><con:property><con:name>seed</con:name><con:value/></con:property></con:properties></con:config></con:testStep><con:testStep type="transfer" name="Property Transfer" id="ab00eb2b-d1c1-4463-a091-c65ec09cc6d5"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>appkey</con:name><con:sourceType>appkey</con:sourceType><con:sourceStep>testdata</con:sourceStep><con:targetType>appkey</con:targetType><con:targetStep>/x/v2/archive/hbase/ratio</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>appsecret</con:name><con:sourceType>appsecret</con:sourceType><con:sourceStep>testdata</con:sourceStep><con:targetType>appsecret</con:targetType><con:targetStep>/x/v2/archive/hbase/ratio</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>ts</con:name><con:sourceType>ts</con:sourceType><con:sourceStep>testdata</con:sourceStep><con:targetType>ts</con:targetType><con:targetStep>/x/v2/archive/hbase/ratio</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>sign</con:name><con:sourceType>sign</con:sourceType><con:sourceStep>testdata</con:sourceStep><con:targetType>sign</con:targetType><con:targetStep>/x/v2/archive/hbase/ratio</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>seed</con:name><con:sourceType>seed</con:sourceType><con:sourceStep>testdata</con:sourceStep><con:targetType>seed</con:targetType><con:targetStep>/x/v2/archive/hbase/ratio</con:targetStep><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="/x/v2/archive/hbase/ratio" id="8fdf39c8-19fa-4fa8-a507-5e60ae347993"><con:settings/><con:config service="http://172.16.33.56:6081" resourcePath="/x/v2/archive/hbase/ratio" methodName="archive/hbase/ratio" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="/x/v2/archive/hbase/ratio" id="7fe4d8be-0ad7-407e-be38-7eca24bbce75" mediaType="application/x-www-form-urlencoded" postQueryString="true"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Cookie" value="" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>http://172.16.33.56:6081</con:endpoint><con:request/><con:originalUri>http://172.16.0.26/x/archive/hbase/ratio</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="sign" value="d7061b889cef3d1c11da2e979b5b7736"/>
  <con:entry key="ts" value="1463645347"/>
  <con:entry key="seed" value="0"/>
  <con:entry key="appsecret" value="4de2ccdbd9db69be0c2c6437bfe6eb69"/>
  <con:entry key="appkey" value="7d9f6f6fe2a898e8"/>
</con:parameters><con:parameterOrder><con:entry>appkey</con:entry><con:entry>appsecret</con:entry><con:entry>ts</con:entry><con:entry>sign</con:entry><con:entry>seed</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase id="d55c2cfc-2493-4889-bced-1a385f0fc1f1" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="/x/v2/archive/hbase/ratio/get" searchProperties="true"><con:settings/><con:testStep type="groovy" name="tssign" id="edf1a63e-f65a-424f-8066-84bffb4fa3c7"><con:settings/><con:config><script>import java.util.*
import java.security.MessageDigest
import java.net.URLEncoder

//计算时间戳
Date date = new Date()
def st_string = date.getTime()
st_string = st_string.toString()
st_string = st_string.substring(0,10)


//===========================需要手工参与的地方=======================================
//1.设置data_list
//设置预读取的testdata里除sign以外的参数名字，用于计算md5
def data_list = ['appkey','appsecret','ts']
//测试专用的appkey
def appkey_str = '7d9f6f6fe2a898e8'
//测试专用appkey对应的appsecret
def appsecret_str = '4de2ccdbd9db69be0c2c6437bfe6eb69'
//====================================================================================

//修改list按字母排序
data_list = data_list.sort()
log.info data_list

testRunner.testCase.testSteps["testdata"].setPropertyValue('ts',st_string)
testRunner.testCase.testSteps["testdata"].setPropertyValue('appkey',appkey_str)
testRunner.testCase.testSteps["testdata"].setPropertyValue('appsecret',appsecret_str)
def n = 0
def sg_orgin_string = ''
def sg_md5_string = ''

while (n&lt;data_list.size()){
	def getLocalPropValue = ''
	if(data_list[n] == 'appkey'){
		sg_orgin_string = sg_orgin_string + data_list[n] + '=' + java.net.URLEncoder.encode(appkey_str,'UTF-8') + '&amp;' 
	}else{
		if( testRunner.testCase.testSteps["testdata"].getPropertyValue(data_list[n]) == ''){
			log.info('null')
		}else{
			getLocalPropValue = testRunner.testCase.testSteps["testdata"].getPropertyValue(data_list[n])
			sg_orgin_string = sg_orgin_string + data_list[n] + '=' + java.net.URLEncoder.encode(getLocalPropValue,'UTF-8') + '&amp;'
		}
	}
	n = n + 1
}

def orgin_len = sg_orgin_string.size()
sg_orgin_string = sg_orgin_string[0..(orgin_len-2)]

//还原空格设置
sg_orgin_string = sg_orgin_string.replace('^',' ')

sg_orgin_string =  sg_orgin_string + appsecret_str
sg_md5_string = getMD5(sg_orgin_string)

log.info sg_orgin_string
log.info sg_md5_string

testRunner.testCase.testSteps["testdata"].setPropertyValue('sign',sg_md5_string)

//get md5
//=============================
def getMD5(String source){
	MessageDigest md5 = MessageDigest.getInstance("MD5")
	md5.update(source.getBytes())
	byte[] digest = md5.digest()
	StringBuffer sb = new StringBuffer()
	digest.eachByte {
		 sb.append(String.format("%02x", it &amp; 0xff)) 
	}
	return sb.toString()
}
</script></con:config></con:testStep><con:testStep type="properties" name="testdata" id="e4584274-a390-4baa-bbdc-85cb266a54e0"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>appkey</con:name><con:value>7d9f6f6fe2a898e8</con:value></con:property><con:property><con:name>appsecret</con:name><con:value>4de2ccdbd9db69be0c2c6437bfe6eb69</con:value></con:property><con:property><con:name>ts</con:name><con:value>1463118747</con:value></con:property><con:property><con:name>sign</con:name><con:value>910cd57dbbe00eb62ad7d24e799b68be</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="transfer" name="Property Transfer" id="1c6c148f-921d-4945-b5b9-6aa3bd823a9a"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>sign</con:name><con:sourceType>sign</con:sourceType><con:sourceStep>testdata</con:sourceStep><con:targetType>sign</con:targetType><con:targetStep>/x/v2/archive/hbase/ratio/get</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>ts</con:name><con:sourceType>ts</con:sourceType><con:sourceStep>testdata</con:sourceStep><con:targetType>ts</con:targetType><con:targetStep>/x/v2/archive/hbase/ratio/get</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>appsecret</con:name><con:sourceType>appsecret</con:sourceType><con:sourceStep>testdata</con:sourceStep><con:targetType>appsecret</con:targetType><con:targetStep>/x/v2/archive/hbase/ratio/get</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>appkey</con:name><con:sourceType>appkey</con:sourceType><con:sourceStep>testdata</con:sourceStep><con:targetType>appkey</con:targetType><con:targetStep>/x/v2/archive/hbase/ratio/get</con:targetStep><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="/x/v2/archive/hbase/ratio/get" id="4259b818-d2f6-4b99-8b92-6cf674ff11b6"><con:settings/><con:config service="http://172.16.33.56:6081" resourcePath="/x/v2/archive/hbase/ratio/get" methodName="archive/hbase/get" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="/x/v2/archive/hbase/ratio/get" id="990ca146-e491-4d4a-b6b6-d0844e5750ab" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Cookie" value="" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>http://172.16.33.56:6081</con:endpoint><con:request/><con:originalUri>http://172.16.0.26/x/archive/hbase/ratio/get</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="sign" value="910cd57dbbe00eb62ad7d24e799b68be"/>
  <con:entry key="ts" value="1463118747"/>
  <con:entry key="appsecret" value="4de2ccdbd9db69be0c2c6437bfe6eb69"/>
  <con:entry key="appkey" value="7d9f6f6fe2a898e8"/>
</con:parameters><con:parameterOrder><con:entry>appkey</con:entry><con:entry>appsecret</con:entry><con:entry>ts</con:entry><con:entry>sign</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase id="626e10ec-ed05-4529-9532-612bf3bee2b1" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="/x/v2/archive/mysql/ratio" searchProperties="true"><con:settings/><con:testStep type="groovy" name="tssign" id="f040107e-c608-42d4-96ec-ec3e241184d8"><con:settings/><con:config><script>import java.util.*
import java.security.MessageDigest
import java.net.URLEncoder

//计算时间戳
Date date = new Date()
def st_string = date.getTime()
st_string = st_string.toString()
st_string = st_string.substring(0,10)


//===========================需要手工参与的地方=======================================
//1.设置data_list
//设置预读取的testdata里除sign以外的参数名字，用于计算md5
def data_list = ['appkey','appsecret','ts','seed']
//测试专用的appkey
def appkey_str = '7d9f6f6fe2a898e8'
//测试专用appkey对应的appsecret
def appsecret_str = '4de2ccdbd9db69be0c2c6437bfe6eb69'
//====================================================================================

//修改list按字母排序
data_list = data_list.sort()
log.info data_list

testRunner.testCase.testSteps["testdata"].setPropertyValue('ts',st_string)
testRunner.testCase.testSteps["testdata"].setPropertyValue('appkey',appkey_str)
testRunner.testCase.testSteps["testdata"].setPropertyValue('appsecret',appsecret_str)
def n = 0
def sg_orgin_string = ''
def sg_md5_string = ''

while (n&lt;data_list.size()){
	def getLocalPropValue = ''
	if(data_list[n] == 'appkey'){
		sg_orgin_string = sg_orgin_string + data_list[n] + '=' + java.net.URLEncoder.encode(appkey_str,'UTF-8') + '&amp;' 
	}else{
		if( testRunner.testCase.testSteps["testdata"].getPropertyValue(data_list[n]) == ''){
			log.info('null')
		}else{
			getLocalPropValue = testRunner.testCase.testSteps["testdata"].getPropertyValue(data_list[n])
			sg_orgin_string = sg_orgin_string + data_list[n] + '=' + java.net.URLEncoder.encode(getLocalPropValue,'UTF-8') + '&amp;'
		}
	}
	n = n + 1
}

def orgin_len = sg_orgin_string.size()
sg_orgin_string = sg_orgin_string[0..(orgin_len-2)]

//还原空格设置
sg_orgin_string = sg_orgin_string.replace('^',' ')

sg_orgin_string =  sg_orgin_string + appsecret_str
sg_md5_string = getMD5(sg_orgin_string)

log.info sg_orgin_string
log.info sg_md5_string

testRunner.testCase.testSteps["testdata"].setPropertyValue('sign',sg_md5_string)

//get md5
//=============================
def getMD5(String source){
	MessageDigest md5 = MessageDigest.getInstance("MD5")
	md5.update(source.getBytes())
	byte[] digest = md5.digest()
	StringBuffer sb = new StringBuffer()
	digest.eachByte {
		 sb.append(String.format("%02x", it &amp; 0xff)) 
	}
	return sb.toString()
}
</script></con:config></con:testStep><con:testStep type="properties" name="testdata" id="72fd3ce1-7dc8-4998-9bac-a8b72069090f"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>appkey</con:name><con:value>7d9f6f6fe2a898e8</con:value></con:property><con:property><con:name>appsecret</con:name><con:value>4de2ccdbd9db69be0c2c6437bfe6eb69</con:value></con:property><con:property><con:name>ts</con:name><con:value>1463645344</con:value></con:property><con:property><con:name>sign</con:name><con:value>3646f771e02b44728813530bae1fb3e7</con:value></con:property><con:property><con:name>seed</con:name><con:value/></con:property></con:properties></con:config></con:testStep><con:testStep type="transfer" name="Property Transfer" id="d3b8862c-a201-43c6-a9dd-1e478f8e5743"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>appkey</con:name><con:sourceType>appkey</con:sourceType><con:sourceStep>testdata</con:sourceStep><con:targetType>appkey</con:targetType><con:targetStep>/x/v2/archive/mysql/ratio</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>appsecret</con:name><con:sourceType>appsecret</con:sourceType><con:sourceStep>testdata</con:sourceStep><con:targetType>appsecret</con:targetType><con:targetStep>/x/v2/archive/mysql/ratio</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>ts</con:name><con:sourceType>ts</con:sourceType><con:sourceStep>testdata</con:sourceStep><con:targetType>ts</con:targetType><con:targetStep>/x/v2/archive/mysql/ratio</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>sign</con:name><con:sourceType>sign</con:sourceType><con:sourceStep>testdata</con:sourceStep><con:targetType>sign</con:targetType><con:targetStep>/x/v2/archive/mysql/ratio</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>seed</con:name><con:sourceType>seed</con:sourceType><con:sourceStep>testdata</con:sourceStep><con:targetType>seed</con:targetType><con:targetStep>/x/v2/archive/mysql/ratio</con:targetStep><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="/x/v2/archive/mysql/ratio" id="0dfe4efd-e0d2-4217-9c89-9311dfe306f2"><con:settings/><con:config service="http://172.16.33.56:6081" resourcePath="/x/v2/archive/mysql/ratio" methodName="mysql/ratio" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="/x/v2/archive/mysql/ratio" id="feedf376-41d8-410e-8fe2-0374635329eb" mediaType="application/x-www-form-urlencoded" postQueryString="true"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Cookie" value="" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>http://172.16.33.56:6081</con:endpoint><con:request/><con:originalUri>http://172.16.0.26/x/archive/mysql/ratio</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="sign" value="3646f771e02b44728813530bae1fb3e7"/>
  <con:entry key="ts" value="1463645344"/>
  <con:entry key="seed" value="0"/>
  <con:entry key="appsecret" value="4de2ccdbd9db69be0c2c6437bfe6eb69"/>
  <con:entry key="appkey" value="7d9f6f6fe2a898e8"/>
</con:parameters><con:parameterOrder><con:entry>appkey</con:entry><con:entry>appsecret</con:entry><con:entry>ts</con:entry><con:entry>sign</con:entry><con:entry>seed</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/><con:breakPoints><con:testStepId>f040107e-c608-42d4-96ec-ec3e241184d8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase id="eed0f204-0d82-4464-bdaa-880fe5e98d48" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="/x/v2/archive/mysql/ratio/get" searchProperties="true"><con:settings/><con:testStep type="groovy" name="tssign" id="b03f1ad4-5313-4415-a9a4-35d73acfe101"><con:settings/><con:config><script>import java.util.*
import java.security.MessageDigest
import java.net.URLEncoder

//计算时间戳
Date date = new Date()
def st_string = date.getTime()
st_string = st_string.toString()
st_string = st_string.substring(0,10)


//===========================需要手工参与的地方=======================================
//1.设置data_list
//设置预读取的testdata里除sign以外的参数名字，用于计算md5
def data_list = ['appkey','appsecret','ts']
//测试专用的appkey
def appkey_str = '7d9f6f6fe2a898e8'
//测试专用appkey对应的appsecret
def appsecret_str = '4de2ccdbd9db69be0c2c6437bfe6eb69'
//====================================================================================

//修改list按字母排序
data_list = data_list.sort()
log.info data_list

testRunner.testCase.testSteps["testdata"].setPropertyValue('ts',st_string)
testRunner.testCase.testSteps["testdata"].setPropertyValue('appkey',appkey_str)
testRunner.testCase.testSteps["testdata"].setPropertyValue('appsecret',appsecret_str)
def n = 0
def sg_orgin_string = ''
def sg_md5_string = ''

while (n&lt;data_list.size()){
	def getLocalPropValue = ''
	if(data_list[n] == 'appkey'){
		sg_orgin_string = sg_orgin_string + data_list[n] + '=' + java.net.URLEncoder.encode(appkey_str,'UTF-8') + '&amp;' 
	}else{
		if( testRunner.testCase.testSteps["testdata"].getPropertyValue(data_list[n]) == ''){
			log.info('null')
		}else{
			getLocalPropValue = testRunner.testCase.testSteps["testdata"].getPropertyValue(data_list[n])
			sg_orgin_string = sg_orgin_string + data_list[n] + '=' + java.net.URLEncoder.encode(getLocalPropValue,'UTF-8') + '&amp;'
		}
	}
	n = n + 1
}

def orgin_len = sg_orgin_string.size()
sg_orgin_string = sg_orgin_string[0..(orgin_len-2)]

//还原空格设置
sg_orgin_string = sg_orgin_string.replace('^',' ')

sg_orgin_string =  sg_orgin_string + appsecret_str
sg_md5_string = getMD5(sg_orgin_string)

log.info sg_orgin_string
log.info sg_md5_string

testRunner.testCase.testSteps["testdata"].setPropertyValue('sign',sg_md5_string)

//get md5
//=============================
def getMD5(String source){
	MessageDigest md5 = MessageDigest.getInstance("MD5")
	md5.update(source.getBytes())
	byte[] digest = md5.digest()
	StringBuffer sb = new StringBuffer()
	digest.eachByte {
		 sb.append(String.format("%02x", it &amp; 0xff)) 
	}
	return sb.toString()
}
</script></con:config></con:testStep><con:testStep type="properties" name="testdata" id="239e47f9-4625-4569-a607-b14924357af9"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>appkey</con:name><con:value>7d9f6f6fe2a898e8</con:value></con:property><con:property><con:name>appsecret</con:name><con:value>4de2ccdbd9db69be0c2c6437bfe6eb69</con:value></con:property><con:property><con:name>ts</con:name><con:value>1463118723</con:value></con:property><con:property><con:name>sign</con:name><con:value>b1505cb51e2596215b1054341c1a543e</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="transfer" name="Property Transfer" id="ccbd75d0-3dbf-40c0-b3f1-86e8811f36b9"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>sign</con:name><con:sourceType>sign</con:sourceType><con:sourceStep>testdata</con:sourceStep><con:targetType>sign</con:targetType><con:targetStep>/x/v2/archive/mysql/ratio/get</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>ts</con:name><con:sourceType>ts</con:sourceType><con:sourceStep>testdata</con:sourceStep><con:targetType>ts</con:targetType><con:targetStep>/x/v2/archive/mysql/ratio/get</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>appsecret</con:name><con:sourceType>appsecret</con:sourceType><con:sourceStep>testdata</con:sourceStep><con:targetType>appsecret</con:targetType><con:targetStep>/x/v2/archive/mysql/ratio/get</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>appkey</con:name><con:sourceType>appkey</con:sourceType><con:sourceStep>testdata</con:sourceStep><con:targetType>appkey</con:targetType><con:targetStep>/x/v2/archive/mysql/ratio/get</con:targetStep><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="/x/v2/archive/mysql/ratio/get" id="be3dc930-070c-4271-9855-df5c4b344480"><con:settings/><con:config service="http://172.16.33.56:6081" resourcePath="/x/v2/archive/mysql/ratio/get" methodName="mysql/ratio/get" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="/x/v2/archive/mysql/ratio/get" id="7ddfab43-27a4-4747-8e82-1925a487e7af" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Cookie" value="" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>http://172.16.33.56:6081</con:endpoint><con:request/><con:originalUri>http://172.16.0.26/x/archive/mysql/ratio/get</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="sign" value="b1505cb51e2596215b1054341c1a543e"/>
  <con:entry key="ts" value="1463118723"/>
  <con:entry key="appsecret" value="4de2ccdbd9db69be0c2c6437bfe6eb69"/>
  <con:entry key="appkey" value="7d9f6f6fe2a898e8"/>
</con:parameters><con:parameterOrder><con:entry>appkey</con:entry><con:entry>appsecret</con:entry><con:entry>ts</con:entry><con:entry>sign</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/><con:breakPoints><con:testStepId>ccbd75d0-3dbf-40c0-b3f1-86e8811f36b9</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>b03f1ad4-5313-4415-a9a4-35d73acfe101</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase id="3b55ce0a-2bf8-4770-ba76-c097316e1b1e" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="/x/v2/archive/redis/ratio" searchProperties="true"><con:settings/><con:testStep type="groovy" name="tssign" id="8f7b1eea-e338-4669-b34e-7251a8929914"><con:settings/><con:config><script>import java.util.*
import java.security.MessageDigest
import java.net.URLEncoder

//计算时间戳
Date date = new Date()
def st_string = date.getTime()
st_string = st_string.toString()
st_string = st_string.substring(0,10)


//===========================需要手工参与的地方=======================================
//1.设置data_list
//设置预读取的testdata里除sign以外的参数名字，用于计算md5
def data_list = ['appkey','appsecret','seed','ts']
//测试专用的appkey
def appkey_str = '7d9f6f6fe2a898e8'
//测试专用appkey对应的appsecret
def appsecret_str = '4de2ccdbd9db69be0c2c6437bfe6eb69'
//====================================================================================

//修改list按字母排序
data_list = data_list.sort()
log.info data_list

testRunner.testCase.testSteps["testdata"].setPropertyValue('ts',st_string)
testRunner.testCase.testSteps["testdata"].setPropertyValue('appkey',appkey_str)
testRunner.testCase.testSteps["testdata"].setPropertyValue('appsecret',appsecret_str)
def n = 0
def sg_orgin_string = ''
def sg_md5_string = ''

while (n&lt;data_list.size()){
	def getLocalPropValue = ''
	if(data_list[n] == 'appkey'){
		sg_orgin_string = sg_orgin_string + data_list[n] + '=' + java.net.URLEncoder.encode(appkey_str,'UTF-8') + '&amp;' 
	}else{
		if( testRunner.testCase.testSteps["testdata"].getPropertyValue(data_list[n]) == ''){
			log.info('null')
		}else{
			getLocalPropValue = testRunner.testCase.testSteps["testdata"].getPropertyValue(data_list[n])
			sg_orgin_string = sg_orgin_string + data_list[n] + '=' + java.net.URLEncoder.encode(getLocalPropValue,'UTF-8') + '&amp;'
		}
	}
	n = n + 1
}

def orgin_len = sg_orgin_string.size()
sg_orgin_string = sg_orgin_string[0..(orgin_len-2)]

//还原空格设置
sg_orgin_string = sg_orgin_string.replace('^',' ')

sg_orgin_string =  sg_orgin_string + appsecret_str
sg_md5_string = getMD5(sg_orgin_string)

log.info sg_orgin_string
log.info sg_md5_string

testRunner.testCase.testSteps["testdata"].setPropertyValue('sign',sg_md5_string)


//get md5
//=============================
def getMD5(String source){
	MessageDigest md5 = MessageDigest.getInstance("MD5")
	md5.update(source.getBytes())
	byte[] digest = md5.digest()
	StringBuffer sb = new StringBuffer()
	digest.eachByte {
		 sb.append(String.format("%02x", it &amp; 0xff)) 
	}
	return sb.toString()
}
</script></con:config></con:testStep><con:testStep type="properties" name="testdata" id="66cee6ba-516d-4c1d-8b2a-1e100cdbc6a4"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>appkey</con:name><con:value>7d9f6f6fe2a898e8</con:value></con:property><con:property><con:name>appsecret</con:name><con:value>4de2ccdbd9db69be0c2c6437bfe6eb69</con:value></con:property><con:property><con:name>ts</con:name><con:value>1463645327</con:value></con:property><con:property><con:name>sign</con:name><con:value>3e44a70691bd5de558f9806a6ded8aa2</con:value></con:property><con:property><con:name>seed</con:name><con:value/></con:property></con:properties></con:config></con:testStep><con:testStep type="transfer" name="Property Transfer" id="79b43109-9c5e-4f98-be5d-74c9440f2b24"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>appkey</con:name><con:sourceType>appkey</con:sourceType><con:sourceStep>testdata</con:sourceStep><con:targetType>appkey</con:targetType><con:targetStep>/x/v2/archive/redis/ratio</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>appsecret</con:name><con:sourceType>appsecret</con:sourceType><con:sourceStep>testdata</con:sourceStep><con:targetType>appsecret</con:targetType><con:targetStep>/x/v2/archive/redis/ratio</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>ts</con:name><con:sourceType>ts</con:sourceType><con:sourceStep>testdata</con:sourceStep><con:targetType>ts</con:targetType><con:targetStep>/x/v2/archive/redis/ratio</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>sign</con:name><con:sourceType>sign</con:sourceType><con:sourceStep>testdata</con:sourceStep><con:targetType>sign</con:targetType><con:targetStep>/x/v2/archive/redis/ratio</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>seed</con:name><con:sourceType>seed</con:sourceType><con:sourceStep>testdata</con:sourceStep><con:targetType>seed</con:targetType><con:targetStep>/x/v2/archive/redis/ratio</con:targetStep><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="/x/v2/archive/redis/ratio" id="5db6bbb6-5c35-41ad-80a9-4b0147bd86da"><con:settings/><con:config service="http://172.16.33.56:6081" resourcePath="/x/v2/archive/redis/ratio" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="/x/v2/archive/redis/ratio" id="059004db-632e-46e9-9137-c99257d79bd9" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Cookie" value="" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>http://172.16.33.56:6081</con:endpoint><con:request/><con:originalUri>http://172.16.33.56/x/v2/archive/redis/ratio</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="sign" value="3e44a70691bd5de558f9806a6ded8aa2"/>
  <con:entry key="ts" value="1463645327"/>
  <con:entry key="seed" value="0"/>
  <con:entry key="appsecret" value="4de2ccdbd9db69be0c2c6437bfe6eb69"/>
  <con:entry key="appkey" value="7d9f6f6fe2a898e8"/>
</con:parameters><con:parameterOrder><con:entry>appkey</con:entry><con:entry>appsecret</con:entry><con:entry>ts</con:entry><con:entry>sign</con:entry><con:entry>seed</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/><con:breakPoints><con:testStepId>80ea878a-e31a-4e97-9512-94a4d54de772</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase id="90b5d84b-7e70-4d26-940e-2579b85b9355" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="/x/v2/archive/redis/ratio/get" searchProperties="true"><con:settings/><con:testStep type="groovy" name="tssign" id="aafdbc6f-e5b4-4562-8768-978ca7413d2a"><con:settings/><con:config><script>import java.util.*
import java.security.MessageDigest
import java.net.URLEncoder

//计算时间戳
Date date = new Date()
def st_string = date.getTime()
st_string = st_string.toString()
st_string = st_string.substring(0,10)


//===========================需要手工参与的地方=======================================
//1.设置data_list
//设置预读取的testdata里除sign以外的参数名字，用于计算md5
def data_list = ['appkey','appsecret','ts']
//测试专用的appkey
def appkey_str = '7d9f6f6fe2a898e8'
//测试专用appkey对应的appsecret
def appsecret_str = '4de2ccdbd9db69be0c2c6437bfe6eb69'
//====================================================================================

//修改list按字母排序
data_list = data_list.sort()
log.info data_list

testRunner.testCase.testSteps["testdata"].setPropertyValue('ts',st_string)
testRunner.testCase.testSteps["testdata"].setPropertyValue('appkey',appkey_str)
testRunner.testCase.testSteps["testdata"].setPropertyValue('appsecret',appsecret_str)
def n = 0
def sg_orgin_string = ''
def sg_md5_string = ''

while (n&lt;data_list.size()){
	def getLocalPropValue = ''
	if(data_list[n] == 'appkey'){
		sg_orgin_string = sg_orgin_string + data_list[n] + '=' + java.net.URLEncoder.encode(appkey_str,'UTF-8') + '&amp;' 
	}else{
		if( testRunner.testCase.testSteps["testdata"].getPropertyValue(data_list[n]) == ''){
			log.info('null')
		}else{
			getLocalPropValue = testRunner.testCase.testSteps["testdata"].getPropertyValue(data_list[n])
			sg_orgin_string = sg_orgin_string + data_list[n] + '=' + java.net.URLEncoder.encode(getLocalPropValue,'UTF-8') + '&amp;'
		}
	}
	n = n + 1
}

def orgin_len = sg_orgin_string.size()
sg_orgin_string = sg_orgin_string[0..(orgin_len-2)]

//还原空格设置
sg_orgin_string = sg_orgin_string.replace('^',' ')

sg_orgin_string =  sg_orgin_string + appsecret_str
sg_md5_string = getMD5(sg_orgin_string)

log.info sg_orgin_string
log.info sg_md5_string

testRunner.testCase.testSteps["testdata"].setPropertyValue('sign',sg_md5_string)


//get md5
//=============================
def getMD5(String source){
	MessageDigest md5 = MessageDigest.getInstance("MD5")
	md5.update(source.getBytes())
	byte[] digest = md5.digest()
	StringBuffer sb = new StringBuffer()
	digest.eachByte {
		 sb.append(String.format("%02x", it &amp; 0xff)) 
	}
	return sb.toString()
}
</script></con:config></con:testStep><con:testStep type="properties" name="testdata" id="508e2a17-1f7c-4fa9-8ef3-e4ccbc4da234"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>appkey</con:name><con:value>7d9f6f6fe2a898e8</con:value></con:property><con:property><con:name>appsecret</con:name><con:value>4de2ccdbd9db69be0c2c6437bfe6eb69</con:value></con:property><con:property><con:name>ts</con:name><con:value>1463645316</con:value></con:property><con:property><con:name>sign</con:name><con:value>1ce712ad74fa90ae1ba5b022a0858abb</con:value></con:property><con:property><con:name>seed</con:name><con:value/></con:property></con:properties></con:config></con:testStep><con:testStep type="transfer" name="Property Transfer" id="d86a4051-2262-4fa1-a1e8-d3d0f83aea7f"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>appkey</con:name><con:sourceType>appkey</con:sourceType><con:sourceStep>testdata</con:sourceStep><con:targetType>appkey</con:targetType><con:targetStep>/x/v2/archive/redis/ratio/get</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>appsecret</con:name><con:sourceType>appsecret</con:sourceType><con:sourceStep>testdata</con:sourceStep><con:targetType>appsecret</con:targetType><con:targetStep>/x/v2/archive/redis/ratio/get</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>ts</con:name><con:sourceType>ts</con:sourceType><con:sourceStep>testdata</con:sourceStep><con:targetType>ts</con:targetType><con:targetStep>/x/v2/archive/redis/ratio/get</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>sign</con:name><con:sourceType>sign</con:sourceType><con:sourceStep>testdata</con:sourceStep><con:targetType>sign</con:targetType><con:targetStep>/x/v2/archive/redis/ratio/get</con:targetStep><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="/x/v2/archive/redis/ratio/get" id="08d4e286-15c6-4e88-bfe6-fb76b20ab46b"><con:settings/><con:config service="http://172.16.33.56:6081" resourcePath="/x/v2/archive/redis/ratio/get" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="/x/v2/archive/redis/ratio/get" id="6b3664e7-1fda-4c2f-a363-fe798f13da62" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Cookie" value="" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>http://172.16.33.56:6081</con:endpoint><con:request/><con:originalUri>http://172.16.33.56/x/v2/archive/redis/ratio/get</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="sign" value="1ce712ad74fa90ae1ba5b022a0858abb"/>
  <con:entry key="ts" value="1463645316"/>
  <con:entry key="appsecret" value="4de2ccdbd9db69be0c2c6437bfe6eb69"/>
  <con:entry key="appkey" value="7d9f6f6fe2a898e8"/>
</con:parameters><con:parameterOrder><con:entry>appkey</con:entry><con:entry>appsecret</con:entry><con:entry>ts</con:entry><con:entry>sign</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/><con:breakPoints><con:testStepId>80ea878a-e31a-4e97-9512-94a4d54de772</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase id="12fbca79-02e3-4bb1-9d37-36c50810d922" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="/x/v2/archive" searchProperties="true"><con:settings/><con:testStep type="groovy" name="tssign" id="1915cda0-6e39-450e-93ad-520140626577"><con:settings/><con:config><script>import java.util.*
import java.security.MessageDigest
import java.net.URLEncoder

//计算时间戳
Date date = new Date()
def st_string = date.getTime()
st_string = st_string.toString()
st_string = st_string.substring(0,10)


//===========================需要手工参与的地方=======================================
//1.设置data_list
//设置预读取的testdata里除sign以外的参数名字，用于计算md5
def data_list = ['appkey','appsecret','ts','aid']
//测试专用的appkey
def appkey_str = '7d9f6f6fe2a898e8'
//测试专用appkey对应的appsecret
def appsecret_str = '4de2ccdbd9db69be0c2c6437bfe6eb69'
//====================================================================================

//修改list按字母排序
data_list = data_list.sort()
log.info data_list

testRunner.testCase.testSteps["testdata"].setPropertyValue('ts',st_string)
testRunner.testCase.testSteps["testdata"].setPropertyValue('appkey',appkey_str)
testRunner.testCase.testSteps["testdata"].setPropertyValue('appsecret',appsecret_str)
def n = 0
def sg_orgin_string = ''
def sg_md5_string = ''

while (n&lt;data_list.size()){
	def getLocalPropValue = ''
	if(data_list[n] == 'appkey'){
		sg_orgin_string = sg_orgin_string + data_list[n] + '=' + java.net.URLEncoder.encode(appkey_str,'UTF-8') + '&amp;' 
	}else{
		if( testRunner.testCase.testSteps["testdata"].getPropertyValue(data_list[n]) == ''){
			log.info('null')
		}else{
			getLocalPropValue = testRunner.testCase.testSteps["testdata"].getPropertyValue(data_list[n])
			sg_orgin_string = sg_orgin_string + data_list[n] + '=' + java.net.URLEncoder.encode(getLocalPropValue,'UTF-8') + '&amp;'
		}
	}
	n = n + 1
}

def orgin_len = sg_orgin_string.size()
sg_orgin_string = sg_orgin_string[0..(orgin_len-2)]

//还原空格设置
sg_orgin_string = sg_orgin_string.replace('^',' ')

sg_orgin_string =  sg_orgin_string + appsecret_str
sg_md5_string = getMD5(sg_orgin_string)

log.info sg_orgin_string
log.info sg_md5_string

testRunner.testCase.testSteps["testdata"].setPropertyValue('sign',sg_md5_string)


//get md5
//=============================
def getMD5(String source){
	MessageDigest md5 = MessageDigest.getInstance("MD5")
	md5.update(source.getBytes())
	byte[] digest = md5.digest()
	StringBuffer sb = new StringBuffer()
	digest.eachByte {
		 sb.append(String.format("%02x", it &amp; 0xff)) 
	}
	return sb.toString()
}
</script></con:config></con:testStep><con:testStep type="properties" name="testdata" id="80334f19-860a-4fb9-a09c-ff05e01a7ba5"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>appkey</con:name><con:value>7d9f6f6fe2a898e8</con:value></con:property><con:property><con:name>appsecret</con:name><con:value>4de2ccdbd9db69be0c2c6437bfe6eb69</con:value></con:property><con:property><con:name>sign</con:name><con:value>b62f9e7b8d194a08a6b4872ddfb4082b</con:value></con:property><con:property><con:name>ts</con:name><con:value>1463645335</con:value></con:property><con:property><con:name>aid</con:name><con:value/></con:property><con:property><con:name>aids</con:name><con:value/></con:property></con:properties></con:config></con:testStep><con:testStep type="transfer" name="Property Transfer" id="0ba56c8e-1001-41a6-9ca6-975dbdbc0152"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>appkey</con:name><con:sourceType>appkey</con:sourceType><con:sourceStep>testdata</con:sourceStep><con:targetType>appkey</con:targetType><con:targetStep>/x/v2/archive</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>appsecret</con:name><con:sourceType>appsecret</con:sourceType><con:sourceStep>testdata</con:sourceStep><con:targetType>appsecret</con:targetType><con:targetStep>/x/v2/archive</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>sign</con:name><con:sourceType>sign</con:sourceType><con:sourceStep>testdata</con:sourceStep><con:targetType>sign</con:targetType><con:targetStep>/x/v2/archive</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>ts</con:name><con:sourceType>ts</con:sourceType><con:sourceStep>testdata</con:sourceStep><con:targetType>ts</con:targetType><con:targetStep>/x/v2/archive</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>aid</con:name><con:sourceType>aid</con:sourceType><con:sourceStep>testdata</con:sourceStep><con:targetType>aid</con:targetType><con:targetStep>/x/v2/archive</con:targetStep><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="/x/v2/archive" id="ce864572-412e-49ad-b57a-f79df9b78b7a"><con:settings/><con:config service="http://172.16.33.56:6081" resourcePath="/x/v2/archive" methodName="/x/archive" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="/x/v2/archive" id="dfef0c19-08fd-45c9-ba75-dfd4ef7c1154" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Cookie" value="" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>http://172.16.33.56:6081</con:endpoint><con:request/><con:originalUri>http://172.16.0.26/x/archive</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="sign" value="b62f9e7b8d194a08a6b4872ddfb4082b"/>
  <con:entry key="ts" value="1463645335"/>
  <con:entry key="appsecret" value="4de2ccdbd9db69be0c2c6437bfe6eb69"/>
  <con:entry key="appkey" value="7d9f6f6fe2a898e8"/>
  <con:entry key="aid" value="2880590"/>
</con:parameters><con:parameterOrder><con:entry>appkey</con:entry><con:entry>appsecret</con:entry><con:entry>sign</con:entry><con:entry>ts</con:entry><con:entry>aid</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase id="1e4e0ab1-ec7f-42b4-bba4-634a5352e632" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="/x/v2/archive/archives" searchProperties="true"><con:settings/><con:testStep type="groovy" name="tssign" id="2607e377-ad11-489c-b3c4-4541079c8e6d"><con:settings/><con:config><script>import java.util.*
import java.security.MessageDigest
import java.net.URLEncoder

//计算时间戳
Date date = new Date()
def st_string = date.getTime()
st_string = st_string.toString()
st_string = st_string.substring(0,10)


//===========================需要手工参与的地方=======================================
//1.设置data_list
//设置预读取的testdata里除sign以外的参数名字，用于计算md5
def data_list = ['appkey','appsecret','ts','aids']
//测试专用的appkey
def appkey_str = '7d9f6f6fe2a898e8'
//测试专用appkey对应的appsecret
def appsecret_str = '4de2ccdbd9db69be0c2c6437bfe6eb69'
//====================================================================================

//修改list按字母排序
data_list = data_list.sort()
log.info data_list

testRunner.testCase.testSteps["testdata"].setPropertyValue('ts',st_string)
testRunner.testCase.testSteps["testdata"].setPropertyValue('appkey',appkey_str)
testRunner.testCase.testSteps["testdata"].setPropertyValue('appsecret',appsecret_str)
def n = 0
def sg_orgin_string = ''
def sg_md5_string = ''

while (n&lt;data_list.size()){
	def getLocalPropValue = ''
	if(data_list[n] == 'appkey'){
		sg_orgin_string = sg_orgin_string + data_list[n] + '=' + java.net.URLEncoder.encode(appkey_str,'UTF-8') + '&amp;' 
	}else{
		if( testRunner.testCase.testSteps["testdata"].getPropertyValue(data_list[n]) == ''){
			log.info('null')
		}else{
			getLocalPropValue = testRunner.testCase.testSteps["testdata"].getPropertyValue(data_list[n])
			sg_orgin_string = sg_orgin_string + data_list[n] + '=' + java.net.URLEncoder.encode(getLocalPropValue,'UTF-8') + '&amp;'
		}
	}
	n = n + 1
}

def orgin_len = sg_orgin_string.size()
sg_orgin_string = sg_orgin_string[0..(orgin_len-2)]

//还原空格设置
sg_orgin_string = sg_orgin_string.replace('^',' ')

sg_orgin_string =  sg_orgin_string + appsecret_str
sg_md5_string = getMD5(sg_orgin_string.toLowerCase())

log.info sg_orgin_string
log.info sg_md5_string

testRunner.testCase.testSteps["testdata"].setPropertyValue('sign',sg_md5_string)


//get md5
//=============================
def getMD5(String source){
	MessageDigest md5 = MessageDigest.getInstance("MD5")
	md5.update(source.getBytes())
	byte[] digest = md5.digest()
	StringBuffer sb = new StringBuffer()
	digest.eachByte {
		 sb.append(String.format("%02x", it &amp; 0xff)) 
	}
	return sb.toString()
}
</script></con:config></con:testStep><con:testStep type="properties" name="testdata" id="3a1f68ec-f8e6-4555-b46a-46db03244afc"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>appkey</con:name><con:value>7d9f6f6fe2a898e8</con:value></con:property><con:property><con:name>appsecret</con:name><con:value>4de2ccdbd9db69be0c2c6437bfe6eb69</con:value></con:property><con:property><con:name>sign</con:name><con:value>9ce6a961c4ab0e96bd950a94abfcf4d4</con:value></con:property><con:property><con:name>ts</con:name><con:value>1463629362</con:value></con:property><con:property><con:name>aids</con:name><con:value/></con:property></con:properties></con:config></con:testStep><con:testStep type="transfer" name="Property Transfer" id="57a6d617-c20a-4153-ab33-a9ea6cefbdd2"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>appkey</con:name><con:sourceType>appkey</con:sourceType><con:sourceStep>testdata</con:sourceStep><con:targetType>appkey</con:targetType><con:targetStep>/x/v2/archive/archives</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>appsecret</con:name><con:sourceType>appsecret</con:sourceType><con:sourceStep>testdata</con:sourceStep><con:targetType>appsecret</con:targetType><con:targetStep>/x/v2/archive/archives</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>sign</con:name><con:sourceType>sign</con:sourceType><con:sourceStep>testdata</con:sourceStep><con:targetType>sign</con:targetType><con:targetStep>/x/v2/archive/archives</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>ts</con:name><con:sourceType>ts</con:sourceType><con:sourceStep>testdata</con:sourceStep><con:targetType>ts</con:targetType><con:targetStep>/x/v2/archive/archives</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>aids</con:name><con:sourceType>aids</con:sourceType><con:sourceStep>testdata</con:sourceStep><con:targetType>aids</con:targetType><con:targetStep>/x/v2/archive/archives</con:targetStep><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="/x/v2/archive/archives" id="edb9d6cd-33c8-44a8-a98e-ab31053fa54d"><con:settings/><con:config service="http://172.16.33.56:6081" resourcePath="/x/v2/archive/archives" methodName="/x/archive/archives" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="/x/v2/archive/archives" id="147446fb-c354-48c3-be05-b3e5774809e3" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Cookie" value="" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>http://172.16.33.56:6081</con:endpoint><con:request/><con:originalUri>http://172.16.0.26/x/archive/archives</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="sign" value="9ce6a961c4ab0e96bd950a94abfcf4d4"/>
  <con:entry key="aids" value="2880590,2880588,2880551"/>
  <con:entry key="ts" value="1463629362"/>
  <con:entry key="appkey" value="7d9f6f6fe2a898e8"/>
  <con:entry key="appsecret" value="4de2ccdbd9db69be0c2c6437bfe6eb69"/>
</con:parameters><con:parameterOrder><con:entry>appkey</con:entry><con:entry>appsecret</con:entry><con:entry>sign</con:entry><con:entry>ts</con:entry><con:entry>aids</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase id="0715c06e-08cf-492d-b835-fa694c549ee0" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="/x/v2/archive/cache/del" searchProperties="true"><con:settings/><con:testStep type="groovy" name="tssign" id="2777147c-8497-41ad-b217-a37504e8081a"><con:settings/><con:config><script>import java.util.*
import java.security.MessageDigest
import java.net.URLEncoder

//计算时间戳
Date date = new Date()
def st_string = date.getTime()
st_string = st_string.toString()
st_string = st_string.substring(0,10)


//===========================需要手工参与的地方=======================================
//1.设置data_list
//设置预读取的testdata里除sign以外的参数名字，用于计算md5
def data_list = ['appkey','appsecret','ts','aid']
//测试专用的appkey
def appkey_str = '7d9f6f6fe2a898e8'
//测试专用appkey对应的appsecret
def appsecret_str = '4de2ccdbd9db69be0c2c6437bfe6eb69'
//====================================================================================

//修改list按字母排序
data_list = data_list.sort()
log.info data_list

testRunner.testCase.testSteps["testdata"].setPropertyValue('ts',st_string)
testRunner.testCase.testSteps["testdata"].setPropertyValue('appkey',appkey_str)
testRunner.testCase.testSteps["testdata"].setPropertyValue('appsecret',appsecret_str)
def n = 0
def sg_orgin_string = ''
def sg_md5_string = ''

while (n&lt;data_list.size()){
	def getLocalPropValue = ''
	if(data_list[n] == 'appkey'){
		sg_orgin_string = sg_orgin_string + data_list[n] + '=' + java.net.URLEncoder.encode(appkey_str,'UTF-8') + '&amp;' 
	}else{
		if( testRunner.testCase.testSteps["testdata"].getPropertyValue(data_list[n]) == ''){
			log.info('null')
		}else{
			getLocalPropValue = testRunner.testCase.testSteps["testdata"].getPropertyValue(data_list[n])
			sg_orgin_string = sg_orgin_string + data_list[n] + '=' + java.net.URLEncoder.encode(getLocalPropValue,'UTF-8') + '&amp;'
		}
	}
	n = n + 1
}

def orgin_len = sg_orgin_string.size()
sg_orgin_string = sg_orgin_string[0..(orgin_len-2)]

//还原空格设置
sg_orgin_string = sg_orgin_string.replace('^',' ')

sg_orgin_string =  sg_orgin_string + appsecret_str
sg_md5_string = getMD5(sg_orgin_string)

log.info sg_orgin_string
log.info sg_md5_string

testRunner.testCase.testSteps["testdata"].setPropertyValue('sign',sg_md5_string)


//get md5
//=============================
def getMD5(String source){
	MessageDigest md5 = MessageDigest.getInstance("MD5")
	md5.update(source.getBytes())
	byte[] digest = md5.digest()
	StringBuffer sb = new StringBuffer()
	digest.eachByte {
		 sb.append(String.format("%02x", it &amp; 0xff)) 
	}
	return sb.toString()
}
</script></con:config></con:testStep><con:testStep type="properties" name="testdata" id="66a03f8b-70ea-492a-9267-8be14f1662e9"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>appkey</con:name><con:value>7d9f6f6fe2a898e8</con:value></con:property><con:property><con:name>appsecret</con:name><con:value>4de2ccdbd9db69be0c2c6437bfe6eb69</con:value></con:property><con:property><con:name>sign</con:name><con:value>06849592b2ebc1391518719243527e2f</con:value></con:property><con:property><con:name>ts</con:name><con:value>1463646244</con:value></con:property><con:property><con:name>aid</con:name><con:value/></con:property><con:property><con:name>mid</con:name><con:value/></con:property></con:properties></con:config></con:testStep><con:testStep type="transfer" name="Property Transfer" id="f1a78643-f7fd-42dd-a4e6-8d8eb0e9bdc9"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>appkey</con:name><con:sourceType>appkey</con:sourceType><con:sourceStep>testdata</con:sourceStep><con:targetType>appkey</con:targetType><con:targetStep>/x/v2/archive/cache/del</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>appsecret</con:name><con:sourceType>appsecret</con:sourceType><con:sourceStep>testdata</con:sourceStep><con:targetType>appsecret</con:targetType><con:targetStep>/x/v2/archive/cache/del</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>sign</con:name><con:sourceType>sign</con:sourceType><con:sourceStep>testdata</con:sourceStep><con:targetType>sign</con:targetType><con:targetStep>/x/v2/archive/cache/del</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>ts</con:name><con:sourceType>ts</con:sourceType><con:sourceStep>testdata</con:sourceStep><con:targetType>ts</con:targetType><con:targetStep>/x/v2/archive/cache/del</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>aid</con:name><con:sourceType>aid</con:sourceType><con:sourceStep>testdata</con:sourceStep><con:targetType>aid</con:targetType><con:targetStep>/x/v2/archive/cache/del</con:targetStep><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="/x/v2/archive/cache/del" id="00a62b02-02c2-4b83-9515-497a0f42fd0d"><con:settings/><con:config service="http://172.16.33.56:6081" resourcePath="/x/v2/archive/cache/del" methodName="/x/archive/cache/del" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="/x/v2/archive/cache/del" id="3ac03eb8-5ded-4b94-bd55-2af5c93047a9" mediaType="application/x-www-form-urlencoded" postQueryString="true"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Cookie" value="" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>http://172.16.33.56:6081</con:endpoint><con:request/><con:originalUri>http://172.16.0.26/x/archive/cache/del</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="sign" value="06849592b2ebc1391518719243527e2f"/>
  <con:entry key="ts" value="1463646244"/>
  <con:entry key="appkey" value="7d9f6f6fe2a898e8"/>
  <con:entry key="appsecret" value="4de2ccdbd9db69be0c2c6437bfe6eb69"/>
  <con:entry key="aid" value="2880590"/>
</con:parameters><con:parameterOrder><con:entry>appkey</con:entry><con:entry>appsecret</con:entry><con:entry>sign</con:entry><con:entry>ts</con:entry><con:entry>aid</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase id="7edd6599-5483-45ec-a4a7-274927eba3cf" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="/x/v2/archive/relation" searchProperties="true"><con:settings/><con:testStep type="groovy" name="tssign" id="d596a7f6-344b-477d-921c-34277f108348"><con:settings/><con:config><script>import java.util.*
import java.security.MessageDigest
import java.net.URLEncoder

//计算时间戳
Date date = new Date()
def st_string = date.getTime()
st_string = st_string.toString()
st_string = st_string.substring(0,10)


//===========================需要手工参与的地方=======================================
//1.设置data_list
//设置预读取的testdata里除sign以外的参数名字，用于计算md5
def data_list = ['appkey','appsecret','ts','aid']
//测试专用的appkey
def appkey_str = '7d9f6f6fe2a898e8'
//测试专用appkey对应的appsecret
def appsecret_str = '4de2ccdbd9db69be0c2c6437bfe6eb69'
//====================================================================================

//修改list按字母排序
data_list = data_list.sort()
log.info data_list

testRunner.testCase.testSteps["testdata"].setPropertyValue('ts',st_string)
testRunner.testCase.testSteps["testdata"].setPropertyValue('appkey',appkey_str)
testRunner.testCase.testSteps["testdata"].setPropertyValue('appsecret',appsecret_str)
def n = 0
def sg_orgin_string = ''
def sg_md5_string = ''

while (n&lt;data_list.size()){
	def getLocalPropValue = ''
	if(data_list[n] == 'appkey'){
		sg_orgin_string = sg_orgin_string + data_list[n] + '=' + java.net.URLEncoder.encode(appkey_str,'UTF-8') + '&amp;' 
	}else{
		if( testRunner.testCase.testSteps["testdata"].getPropertyValue(data_list[n]) == ''){
			log.info('null')
		}else{
			getLocalPropValue = testRunner.testCase.testSteps["testdata"].getPropertyValue(data_list[n])
			sg_orgin_string = sg_orgin_string + data_list[n] + '=' + java.net.URLEncoder.encode(getLocalPropValue,'UTF-8') + '&amp;'
		}
	}
	n = n + 1
}

def orgin_len = sg_orgin_string.size()
sg_orgin_string = sg_orgin_string[0..(orgin_len-2)]

//还原空格设置
sg_orgin_string = sg_orgin_string.replace('^',' ')

sg_orgin_string =  sg_orgin_string + appsecret_str
sg_md5_string = getMD5(sg_orgin_string)

log.info sg_orgin_string
log.info sg_md5_string

testRunner.testCase.testSteps["testdata"].setPropertyValue('sign',sg_md5_string)


//get md5
//=============================
def getMD5(String source){
	MessageDigest md5 = MessageDigest.getInstance("MD5")
	md5.update(source.getBytes())
	byte[] digest = md5.digest()
	StringBuffer sb = new StringBuffer()
	digest.eachByte {
		 sb.append(String.format("%02x", it &amp; 0xff)) 
	}
	return sb.toString()
}
</script></con:config></con:testStep><con:testStep type="properties" name="testdata" id="d6487eb1-2f82-446a-92e0-a148e5ae8485"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>appkey</con:name><con:value>7d9f6f6fe2a898e8</con:value></con:property><con:property><con:name>appsecret</con:name><con:value>4de2ccdbd9db69be0c2c6437bfe6eb69</con:value></con:property><con:property><con:name>sign</con:name><con:value>90560d5bead0021354fef43f49356ca8</con:value></con:property><con:property><con:name>ts</con:name><con:value>1465824895</con:value></con:property><con:property><con:name>aid</con:name><con:value/></con:property></con:properties></con:config></con:testStep><con:testStep type="transfer" name="Property Transfer" id="d4f5e387-543f-4856-8beb-afda9e63aefd"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>appkey</con:name><con:sourceType>appkey</con:sourceType><con:sourceStep>testdata</con:sourceStep><con:targetType>appkey</con:targetType><con:targetStep>/x/v2/archive/relation</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>appsecret</con:name><con:sourceType>appsecret</con:sourceType><con:sourceStep>testdata</con:sourceStep><con:targetType>appsecret</con:targetType><con:targetStep>/x/v2/archive/relation</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>sign</con:name><con:sourceType>sign</con:sourceType><con:sourceStep>testdata</con:sourceStep><con:targetType>sign</con:targetType><con:targetStep>/x/v2/archive/relation</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>ts</con:name><con:sourceType>ts</con:sourceType><con:sourceStep>testdata</con:sourceStep><con:targetType>ts</con:targetType><con:targetStep>/x/v2/archive/relation</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>aid</con:name><con:sourceType>aid</con:sourceType><con:sourceStep>testdata</con:sourceStep><con:targetType>aid</con:targetType><con:targetStep>/x/v2/archive/relation</con:targetStep><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="/x/v2/archive/relation" id="eac9ca74-965a-4a51-81bc-b173471666c0"><con:settings/><con:config service="http://172.16.33.56:6081" resourcePath="/x/v2/archive/relation" methodName="/x/v2/relation" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="/x/v2/archive/relation" id="0612018a-d852-403b-8dfd-2c087d042675" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Cookie" value="" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>http://172.16.33.56:6081</con:endpoint><con:request/><con:originalUri>http://172.16.0.26/x/v2/relation</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="sign" value="90560d5bead0021354fef43f49356ca8"/>
  <con:entry key="ts" value="1465824895"/>
  <con:entry key="appkey" value="7d9f6f6fe2a898e8"/>
  <con:entry key="appsecret" value="4de2ccdbd9db69be0c2c6437bfe6eb69"/>
  <con:entry key="aid" value="2880579"/>
</con:parameters><con:parameterOrder><con:entry>appkey</con:entry><con:entry>appsecret</con:entry><con:entry>sign</con:entry><con:entry>ts</con:entry><con:entry>aid</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase id="b3cae0f3-a71b-45fe-8ccf-877aabc58cb1" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="/x/v2/archive/recommend626" searchProperties="true"><con:settings/><con:testStep type="groovy" name="tssign" id="9618485d-6b67-42c8-ba31-0e8cd4c652e0"><con:settings/><con:config><script>import java.util.*
import java.security.MessageDigest
import java.net.URLEncoder

//计算时间戳
Date date = new Date()
def st_string = date.getTime()
st_string = st_string.toString()
st_string = st_string.substring(0,10)


//===========================需要手工参与的地方=======================================
//1.设置data_list
//设置预读取的testdata里除sign以外的参数名字，用于计算md5
def data_list = ['appkey','appsecret','ts','mid']
//测试专用的appkey
def appkey_str = '7d9f6f6fe2a898e8'
//测试专用appkey对应的appsecret
def appsecret_str = '4de2ccdbd9db69be0c2c6437bfe6eb69'
//====================================================================================

//修改list按字母排序
data_list = data_list.sort()
log.info data_list

testRunner.testCase.testSteps["testdata"].setPropertyValue('ts',st_string)
testRunner.testCase.testSteps["testdata"].setPropertyValue('appkey',appkey_str)
testRunner.testCase.testSteps["testdata"].setPropertyValue('appsecret',appsecret_str)
def n = 0
def sg_orgin_string = ''
def sg_md5_string = ''

while (n&lt;data_list.size()){
	def getLocalPropValue = ''
	if(data_list[n] == 'appkey'){
		sg_orgin_string = sg_orgin_string + data_list[n] + '=' + java.net.URLEncoder.encode(appkey_str,'UTF-8') + '&amp;' 
	}else{
		if( testRunner.testCase.testSteps["testdata"].getPropertyValue(data_list[n]) == ''){
			log.info('null')
		}else{
			getLocalPropValue = testRunner.testCase.testSteps["testdata"].getPropertyValue(data_list[n])
			sg_orgin_string = sg_orgin_string + data_list[n] + '=' + java.net.URLEncoder.encode(getLocalPropValue,'UTF-8') + '&amp;'
		}
	}
	n = n + 1
}

def orgin_len = sg_orgin_string.size()
sg_orgin_string = sg_orgin_string[0..(orgin_len-2)]

//还原空格设置
sg_orgin_string = sg_orgin_string.replace('^',' ')

sg_orgin_string =  sg_orgin_string + appsecret_str
sg_md5_string = getMD5(sg_orgin_string)

log.info sg_orgin_string
log.info sg_md5_string

testRunner.testCase.testSteps["testdata"].setPropertyValue('sign',sg_md5_string)


//get md5
//=============================
def getMD5(String source){
	MessageDigest md5 = MessageDigest.getInstance("MD5")
	md5.update(source.getBytes())
	byte[] digest = md5.digest()
	StringBuffer sb = new StringBuffer()
	digest.eachByte {
		 sb.append(String.format("%02x", it &amp; 0xff)) 
	}
	return sb.toString()
}
</script></con:config></con:testStep><con:testStep type="properties" name="testdata" id="738bbe90-7e5d-4923-8cf2-501f8b888604"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>appkey</con:name><con:value>7d9f6f6fe2a898e8</con:value></con:property><con:property><con:name>appsecret</con:name><con:value>4de2ccdbd9db69be0c2c6437bfe6eb69</con:value></con:property><con:property><con:name>sign</con:name><con:value>6ebc5fc4ace54129e44813d0b53f1d1c</con:value></con:property><con:property><con:name>ts</con:name><con:value>1463657376</con:value></con:property><con:property><con:name>mid</con:name><con:value/></con:property></con:properties></con:config></con:testStep><con:testStep type="transfer" name="Property Transfer" id="ea3c5a74-3d38-4b86-a521-13ff1544d40a"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>mid</con:name><con:sourceType>mid</con:sourceType><con:sourceStep>testdata</con:sourceStep><con:targetType>mid</con:targetType><con:targetStep>/x/v2/archive/recommend626</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>sign</con:name><con:sourceType>sign</con:sourceType><con:sourceStep>testdata</con:sourceStep><con:targetType>sign</con:targetType><con:targetStep>/x/v2/archive/recommend626</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>ts</con:name><con:sourceType>ts</con:sourceType><con:sourceStep>testdata</con:sourceStep><con:targetType>ts</con:targetType><con:targetStep>/x/v2/archive/recommend626</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>appkey</con:name><con:sourceType>appkey</con:sourceType><con:sourceStep>testdata</con:sourceStep><con:targetType>appkey</con:targetType><con:targetStep>/x/v2/archive/recommend626</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>appsecret</con:name><con:sourceType>appsecret</con:sourceType><con:sourceStep>testdata</con:sourceStep><con:targetType>appsecret</con:targetType><con:targetStep>/x/v2/archive/recommend626</con:targetStep><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="/x/v2/archive/recommend626" id="bcdb5e32-436a-4784-a83c-8308c80271d6"><con:settings/><con:config service="http://172.16.33.56:6081" resourcePath="/x/v2/archive/recommend626" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="/x/v2/archive/recommend626" id="a9cdb6a0-5a34-4554-9e0b-97a6faaa13d7" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Cookie" value="" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>http://172.16.33.56:6081</con:endpoint><con:request/><con:originalUri>http://172.16.0.26/x/v2/archive/recommend626</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="sign" value="6ebc5fc4ace54129e44813d0b53f1d1c"/>
  <con:entry key="ts" value="1463657376"/>
  <con:entry key="appsecret" value="4de2ccdbd9db69be0c2c6437bfe6eb69"/>
  <con:entry key="appkey" value="7d9f6f6fe2a898e8"/>
  <con:entry key="mid" value="17668003"/>
</con:parameters><con:parameterOrder><con:entry>appkey</con:entry><con:entry>appsecret</con:entry><con:entry>sign</con:entry><con:entry>ts</con:entry><con:entry>mid</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase id="544ef439-20e3-408a-9736-1414a291eadb" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="/x/v2/archive/videoshot/add" searchProperties="true"><con:settings/><con:testStep type="groovy" name="tssign" id="742aed71-7915-4706-b24c-187a66ebb28c"><con:settings/><con:config><script>import java.util.*
import java.security.MessageDigest
import java.net.URLEncoder

//计算时间戳
Date date = new Date()
def st_string = date.getTime()
st_string = st_string.toString()
st_string = st_string.substring(0,10)


//===========================需要手工参与的地方=======================================
//1.设置data_list
//设置预读取的testdata里除sign以外的参数名字，用于计算md5
def data_list = ['appkey','appsecret','ts','cid','count']
//测试专用的appkey
def appkey_str = '7d9f6f6fe2a898e8'
//测试专用appkey对应的appsecret
def appsecret_str = '4de2ccdbd9db69be0c2c6437bfe6eb69'
//====================================================================================

//修改list按字母排序
data_list = data_list.sort()
log.info data_list

testRunner.testCase.testSteps["testdata"].setPropertyValue('ts',st_string)
testRunner.testCase.testSteps["testdata"].setPropertyValue('appkey',appkey_str)
testRunner.testCase.testSteps["testdata"].setPropertyValue('appsecret',appsecret_str)
def n = 0
def sg_orgin_string = ''
def sg_md5_string = ''

while (n&lt;data_list.size()){
	def getLocalPropValue = ''
	if(data_list[n] == 'appkey'){
		sg_orgin_string = sg_orgin_string + data_list[n] + '=' + java.net.URLEncoder.encode(appkey_str,'UTF-8') + '&amp;' 
	}else{
		if( testRunner.testCase.testSteps["testdata"].getPropertyValue(data_list[n]) == ''){
			log.info('null')
		}else{
			getLocalPropValue = testRunner.testCase.testSteps["testdata"].getPropertyValue(data_list[n])
			sg_orgin_string = sg_orgin_string + data_list[n] + '=' + java.net.URLEncoder.encode(getLocalPropValue,'UTF-8') + '&amp;'
		}
	}
	n = n + 1
}

def orgin_len = sg_orgin_string.size()
sg_orgin_string = sg_orgin_string[0..(orgin_len-2)]

//还原空格设置
sg_orgin_string = sg_orgin_string.replace('^',' ')

sg_orgin_string =  sg_orgin_string + appsecret_str
sg_md5_string = getMD5(sg_orgin_string)

log.info sg_orgin_string
log.info sg_md5_string

testRunner.testCase.testSteps["testdata"].setPropertyValue('sign',sg_md5_string)


//get md5
//=============================
def getMD5(String source){
	MessageDigest md5 = MessageDigest.getInstance("MD5")
	md5.update(source.getBytes())
	byte[] digest = md5.digest()
	StringBuffer sb = new StringBuffer()
	digest.eachByte {
		 sb.append(String.format("%02x", it &amp; 0xff)) 
	}
	return sb.toString()
}
</script></con:config></con:testStep><con:testStep type="properties" name="testdata" id="afe3353a-bc36-4f45-9fad-a992dbd815ed"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>appkey</con:name><con:value>7d9f6f6fe2a898e8</con:value></con:property><con:property><con:name>appsecret</con:name><con:value>4de2ccdbd9db69be0c2c6437bfe6eb69</con:value></con:property><con:property><con:name>sign</con:name><con:value>3650ecbe67023230a4f6e6c094f03f11</con:value></con:property><con:property><con:name>ts</con:name><con:value>1464320393</con:value></con:property><con:property><con:name>cid</con:name><con:value/></con:property><con:property><con:name>count</con:name><con:value/></con:property></con:properties></con:config></con:testStep><con:testStep type="transfer" name="Property Transfer" id="d2574b70-22dd-44b1-9d2b-52a7602d2f2a"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>sign</con:name><con:sourceType>sign</con:sourceType><con:sourceStep>testdata</con:sourceStep><con:targetType>sign</con:targetType><con:targetStep>/x/v2/archive/videoshot/add</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>ts</con:name><con:sourceType>ts</con:sourceType><con:sourceStep>testdata</con:sourceStep><con:targetType>ts</con:targetType><con:targetStep>/x/v2/archive/videoshot/add</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>appkey</con:name><con:sourceType>appkey</con:sourceType><con:sourceStep>testdata</con:sourceStep><con:targetType>appkey</con:targetType><con:targetStep>/x/v2/archive/videoshot/add</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>appsecret</con:name><con:sourceType>appsecret</con:sourceType><con:sourceStep>testdata</con:sourceStep><con:targetType>appsecret</con:targetType><con:targetStep>/x/v2/archive/videoshot/add</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>count</con:name><con:sourceType>count</con:sourceType><con:sourceStep>testdata</con:sourceStep><con:targetType>count</con:targetType><con:targetStep>/x/v2/archive/videoshot/add</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>cid</con:name><con:sourceType>cid</con:sourceType><con:sourceStep>testdata</con:sourceStep><con:targetType>cid</con:targetType><con:targetStep>/x/v2/archive/videoshot/add</con:targetStep><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="/x/v2/archive/videoshot/add" id="38d0d2af-0b71-4f22-b9d2-d4a6a6053185"><con:settings/><con:config service="http://172.16.33.56:6081" resourcePath="/x/v2/archive/videoshot/add" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="/x/v2/archive/videoshot/add" id="4b92a77b-f539-4900-b796-70a23e24fd17" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Cookie" value="" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>http://172.16.33.56:6081</con:endpoint><con:request/><con:originalUri>http://172.16.0.26/x/v2/archive/videoshot/add</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="sign" value="3650ecbe67023230a4f6e6c094f03f11"/>
  <con:entry key="ts" value="1464320393"/>
  <con:entry key="count" value="5"/>
  <con:entry key="appsecret" value="4de2ccdbd9db69be0c2c6437bfe6eb69"/>
  <con:entry key="appkey" value="7d9f6f6fe2a898e8"/>
  <con:entry key="cid" value="2880847"/>
</con:parameters><con:parameterOrder><con:entry>appkey</con:entry><con:entry>appsecret</con:entry><con:entry>sign</con:entry><con:entry>ts</con:entry><con:entry>cid</con:entry><con:entry>count</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase id="5819c084-3602-4652-a9ee-ba591e642de3" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="/x/v2/archive/videoshot" searchProperties="true"><con:settings/><con:testStep type="groovy" name="tssign" id="aa245cd1-fcbb-424a-bf2b-09a3df1d7af8"><con:settings/><con:config><script>import java.util.*
import java.security.MessageDigest
import java.net.URLEncoder

//计算时间戳
Date date = new Date()
def st_string = date.getTime()
st_string = st_string.toString()
st_string = st_string.substring(0,10)


//===========================需要手工参与的地方=======================================
//1.设置data_list
//设置预读取的testdata里除sign以外的参数名字，用于计算md5
def data_list = ['appkey','appsecret','ts','cid']
//测试专用的appkey
def appkey_str = '7d9f6f6fe2a898e8'
//测试专用appkey对应的appsecret
def appsecret_str = '4de2ccdbd9db69be0c2c6437bfe6eb69'
//====================================================================================

//修改list按字母排序
data_list = data_list.sort()
log.info data_list

testRunner.testCase.testSteps["testdata"].setPropertyValue('ts',st_string)
testRunner.testCase.testSteps["testdata"].setPropertyValue('appkey',appkey_str)
testRunner.testCase.testSteps["testdata"].setPropertyValue('appsecret',appsecret_str)
def n = 0
def sg_orgin_string = ''
def sg_md5_string = ''

while (n&lt;data_list.size()){
	def getLocalPropValue = ''
	if(data_list[n] == 'appkey'){
		sg_orgin_string = sg_orgin_string + data_list[n] + '=' + java.net.URLEncoder.encode(appkey_str,'UTF-8') + '&amp;' 
	}else{
		if( testRunner.testCase.testSteps["testdata"].getPropertyValue(data_list[n]) == ''){
			log.info('null')
		}else{
			getLocalPropValue = testRunner.testCase.testSteps["testdata"].getPropertyValue(data_list[n])
			sg_orgin_string = sg_orgin_string + data_list[n] + '=' + java.net.URLEncoder.encode(getLocalPropValue,'UTF-8') + '&amp;'
		}
	}
	n = n + 1
}

def orgin_len = sg_orgin_string.size()
sg_orgin_string = sg_orgin_string[0..(orgin_len-2)]

//还原空格设置
sg_orgin_string = sg_orgin_string.replace('^',' ')

sg_orgin_string =  sg_orgin_string + appsecret_str
sg_md5_string = getMD5(sg_orgin_string)

log.info sg_orgin_string
log.info sg_md5_string

testRunner.testCase.testSteps["testdata"].setPropertyValue('sign',sg_md5_string)


//get md5
//=============================
def getMD5(String source){
	MessageDigest md5 = MessageDigest.getInstance("MD5")
	md5.update(source.getBytes())
	byte[] digest = md5.digest()
	StringBuffer sb = new StringBuffer()
	digest.eachByte {
		 sb.append(String.format("%02x", it &amp; 0xff)) 
	}
	return sb.toString()
}
</script></con:config></con:testStep><con:testStep type="properties" name="testdata" id="749ee660-a459-442b-bedd-e11ef95a6e09"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>appkey</con:name><con:value>7d9f6f6fe2a898e8</con:value></con:property><con:property><con:name>appsecret</con:name><con:value>4de2ccdbd9db69be0c2c6437bfe6eb69</con:value></con:property><con:property><con:name>sign</con:name><con:value>c88c33acf7458fed3342f702209c4c39</con:value></con:property><con:property><con:name>ts</con:name><con:value>1464849264</con:value></con:property><con:property><con:name>cid</con:name><con:value/></con:property></con:properties></con:config></con:testStep><con:testStep type="transfer" name="Property Transfer" id="86f3057d-b211-4e31-94f3-3257df9f874c"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>sign</con:name><con:sourceType>sign</con:sourceType><con:sourceStep>testdata</con:sourceStep><con:targetType>sign</con:targetType><con:targetStep>/x/v2/archive/videoshot</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>ts</con:name><con:sourceType>ts</con:sourceType><con:sourceStep>testdata</con:sourceStep><con:targetType>ts</con:targetType><con:targetStep>/x/v2/archive/videoshot</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>appkey</con:name><con:sourceType>appkey</con:sourceType><con:sourceStep>testdata</con:sourceStep><con:targetType>appkey</con:targetType><con:targetStep>/x/v2/archive/videoshot</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>appsecret</con:name><con:sourceType>appsecret</con:sourceType><con:sourceStep>testdata</con:sourceStep><con:targetType>appsecret</con:targetType><con:targetStep>/x/v2/archive/videoshot</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>cid</con:name><con:sourceType>cid</con:sourceType><con:sourceStep>testdata</con:sourceStep><con:targetType>cid</con:targetType><con:targetStep>/x/v2/archive/videoshot</con:targetStep><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="/x/v2/archive/videoshot" id="51e956c7-a418-449d-bb9f-e617b321b30c"><con:settings/><con:config service="http://172.16.33.56:6081" resourcePath="/x/v2/archive/videoshot" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="/x/v2/archive/videoshot" id="cc83719d-d6b5-4dc4-b7fb-2feb40f45966" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Cookie" value="" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>http://172.16.33.56:6081</con:endpoint><con:request/><con:originalUri>http://172.16.0.26/x/v2/archive/videoshot</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="sign" value="c88c33acf7458fed3342f702209c4c39"/>
  <con:entry key="ts" value="1464849264"/>
  <con:entry key="appkey" value="7d9f6f6fe2a898e8"/>
  <con:entry key="appsecret" value="4de2ccdbd9db69be0c2c6437bfe6eb69"/>
  <con:entry key="cid" value="02880847"/>
</con:parameters><con:parameterOrder><con:entry>appkey</con:entry><con:entry>appsecret</con:entry><con:entry>sign</con:entry><con:entry>ts</con:entry><con:entry>cid</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase id="67dc4641-b64f-4fea-b9b2-5888b93d27b1" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="/x/v2/archive/moment/reply" searchProperties="true"><con:settings/><con:testStep type="groovy" name="tssign" id="e71d705a-9a43-46d9-a80c-af8dabf0105c"><con:settings/><con:config><script>import java.util.*
import java.security.MessageDigest
import java.net.URLEncoder

//计算时间戳
Date date = new Date()
def st_string = date.getTime()
st_string = st_string.toString()
st_string = st_string.substring(0,10)


//===========================需要手工参与的地方=======================================
//1.设置data_list
//设置预读取的testdata里除sign以外的参数名字，用于计算md5
def data_list = ['appkey','appsecret','ts','mid']
//测试专用的appkey
def appkey_str = '7d9f6f6fe2a898e8'
//测试专用appkey对应的appsecret
def appsecret_str = '4de2ccdbd9db69be0c2c6437bfe6eb69'
//====================================================================================

//修改list按字母排序
data_list = data_list.sort()
log.info data_list

testRunner.testCase.testSteps["testdata"].setPropertyValue('ts',st_string)
testRunner.testCase.testSteps["testdata"].setPropertyValue('appkey',appkey_str)
testRunner.testCase.testSteps["testdata"].setPropertyValue('appsecret',appsecret_str)
def n = 0
def sg_orgin_string = ''
def sg_md5_string = ''

while (n&lt;data_list.size()){
	def getLocalPropValue = ''
	if(data_list[n] == 'appkey'){
		sg_orgin_string = sg_orgin_string + data_list[n] + '=' + java.net.URLEncoder.encode(appkey_str,'UTF-8') + '&amp;' 
	}else{
		if( testRunner.testCase.testSteps["testdata"].getPropertyValue(data_list[n]) == ''){
			log.info('null')
		}else{
			getLocalPropValue = testRunner.testCase.testSteps["testdata"].getPropertyValue(data_list[n])
			sg_orgin_string = sg_orgin_string + data_list[n] + '=' + java.net.URLEncoder.encode(getLocalPropValue,'UTF-8') + '&amp;'
		}
	}
	n = n + 1
}

def orgin_len = sg_orgin_string.size()
sg_orgin_string = sg_orgin_string[0..(orgin_len-2)]

//还原空格设置
sg_orgin_string = sg_orgin_string.replace('^',' ')

sg_orgin_string =  sg_orgin_string + appsecret_str
sg_md5_string = getMD5(sg_orgin_string)

log.info sg_orgin_string
log.info sg_md5_string

testRunner.testCase.testSteps["testdata"].setPropertyValue('sign',sg_md5_string)


//get md5
//=============================
def getMD5(String source){
	MessageDigest md5 = MessageDigest.getInstance("MD5")
	md5.update(source.getBytes())
	byte[] digest = md5.digest()
	StringBuffer sb = new StringBuffer()
	digest.eachByte {
		 sb.append(String.format("%02x", it &amp; 0xff)) 
	}
	return sb.toString()
}
</script></con:config></con:testStep><con:testStep type="properties" name="testdata" id="dafa2e9c-68b9-4ed6-89d1-c9d1fb273973"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>appkey</con:name><con:value>7d9f6f6fe2a898e8</con:value></con:property><con:property><con:name>appsecret</con:name><con:value>4de2ccdbd9db69be0c2c6437bfe6eb69</con:value></con:property><con:property><con:name>sign</con:name><con:value>9b51299717945a9a27dfc60d4ecbcb60</con:value></con:property><con:property><con:name>ts</con:name><con:value>1464850586</con:value></con:property><con:property><con:name>mid</con:name><con:value/></con:property></con:properties></con:config></con:testStep><con:testStep type="transfer" name="Property Transfer" id="b1d32078-f7c1-4d9c-8f8e-5d38c5be9433"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>sign</con:name><con:sourceType>sign</con:sourceType><con:sourceStep>testdata</con:sourceStep><con:targetType>sign</con:targetType><con:targetStep>/x/v2/archive/moment/reply</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>ts</con:name><con:sourceType>ts</con:sourceType><con:sourceStep>testdata</con:sourceStep><con:targetType>ts</con:targetType><con:targetStep>/x/v2/archive/moment/reply</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>appkey</con:name><con:sourceType>appkey</con:sourceType><con:sourceStep>testdata</con:sourceStep><con:targetType>appkey</con:targetType><con:targetStep>/x/v2/archive/moment/reply</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>appsecret</con:name><con:sourceType>appsecret</con:sourceType><con:sourceStep>testdata</con:sourceStep><con:targetType>appsecret</con:targetType><con:targetStep>/x/v2/archive/moment/reply</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>mid</con:name><con:sourceType>mid</con:sourceType><con:sourceStep>testdata</con:sourceStep><con:targetType>mid</con:targetType><con:targetStep>/x/v2/archive/moment/reply</con:targetStep><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="/x/v2/archive/moment/reply" id="80c71e06-0440-4fa4-8b3a-705d8f7135c6"><con:settings/><con:config service="http://172.16.33.56:6081" resourcePath="/x/v2/archive/moment/reply" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="/x/v2/archive/moment/reply" id="56914a5e-30b2-484f-8bfb-f1e45c4f0804" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://172.16.33.56:6081</con:endpoint><con:request/><con:originalUri>http://172.16.33.56/x/v2/archive/moment/reply</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="sign" value="9b51299717945a9a27dfc60d4ecbcb60"/>
  <con:entry key="ts" value="1464850586"/>
  <con:entry key="appsecret" value="4de2ccdbd9db69be0c2c6437bfe6eb69"/>
  <con:entry key="appkey" value="7d9f6f6fe2a898e8"/>
  <con:entry key="mid" value="15555180"/>
</con:parameters><con:parameterOrder><con:entry>appkey</con:entry><con:entry>appsecret</con:entry><con:entry>sign</con:entry><con:entry>ts</con:entry><con:entry>mid</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase id="3e4d4032-3263-4ba0-9b44-71a936ce7a60" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="/x/v2/archive/zlimit" searchProperties="true"><con:settings/><con:testStep type="groovy" name="tssign" id="d61f53eb-8b1d-48e2-9136-1fbf2a0ab935"><con:settings/><con:config><script>import java.util.*
import java.security.MessageDigest
import java.net.URLEncoder

//计算时间戳
Date date = new Date()
def st_string = date.getTime()
st_string = st_string.toString()
st_string = st_string.substring(0,10)


//===========================需要手工参与的地方=======================================
//1.设置data_list
//设置预读取的testdata里除sign以外的参数名字，用于计算md5
def data_list = ['appkey','appsecret','ts','aid','ip','cdnip']
//测试专用的appkey
def appkey_str = '7d9f6f6fe2a898e8'
//测试专用appkey对应的appsecret
def appsecret_str = '4de2ccdbd9db69be0c2c6437bfe6eb69'
//====================================================================================

//修改list按字母排序
data_list = data_list.sort()
log.info data_list

testRunner.testCase.testSteps["testdata"].setPropertyValue('ts',st_string)
testRunner.testCase.testSteps["testdata"].setPropertyValue('appkey',appkey_str)
testRunner.testCase.testSteps["testdata"].setPropertyValue('appsecret',appsecret_str)
def n = 0
def sg_orgin_string = ''
def sg_md5_string = ''

while (n&lt;data_list.size()){
	def getLocalPropValue = ''
	if(data_list[n] == 'appkey'){
		sg_orgin_string = sg_orgin_string + data_list[n] + '=' + java.net.URLEncoder.encode(appkey_str,'UTF-8') + '&amp;' 
	}else{
		if( testRunner.testCase.testSteps["testdata"].getPropertyValue(data_list[n]) == ''){
			log.info('null')
		}else{
			getLocalPropValue = testRunner.testCase.testSteps["testdata"].getPropertyValue(data_list[n])
			sg_orgin_string = sg_orgin_string + data_list[n] + '=' + java.net.URLEncoder.encode(getLocalPropValue,'UTF-8') + '&amp;'
		}
	}
	n = n + 1
}

def orgin_len = sg_orgin_string.size()
sg_orgin_string = sg_orgin_string[0..(orgin_len-2)]

//还原空格设置
sg_orgin_string = sg_orgin_string.replace('^',' ')

sg_orgin_string =  sg_orgin_string + appsecret_str
sg_md5_string = getMD5(sg_orgin_string)

log.info sg_orgin_string
log.info sg_md5_string

testRunner.testCase.testSteps["testdata"].setPropertyValue('sign',sg_md5_string)


//get md5
//=============================
def getMD5(String source){
	MessageDigest md5 = MessageDigest.getInstance("MD5")
	md5.update(source.getBytes())
	byte[] digest = md5.digest()
	StringBuffer sb = new StringBuffer()
	digest.eachByte {
		 sb.append(String.format("%02x", it &amp; 0xff)) 
	}
	return sb.toString()
}
</script></con:config></con:testStep><con:testStep type="properties" name="testdata" id="4490153d-a754-413c-a0fc-7b7e2b11161a"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>appkey</con:name><con:value>7d9f6f6fe2a898e8</con:value></con:property><con:property><con:name>appsecret</con:name><con:value>4de2ccdbd9db69be0c2c6437bfe6eb69</con:value></con:property><con:property><con:name>sign</con:name><con:value>883600d7d3d1f61bdd65ca14272981f2</con:value></con:property><con:property><con:name>ts</con:name><con:value>1464339851</con:value></con:property><con:property><con:name>aid</con:name><con:value/></con:property><con:property><con:name>ip</con:name><con:value/></con:property><con:property><con:name>cdnip</con:name><con:value/></con:property></con:properties></con:config></con:testStep><con:testStep type="transfer" name="Property Transfer" id="ecbbcfd9-2898-4fb6-8a1c-6a635d43703c"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>sign</con:name><con:sourceType>sign</con:sourceType><con:sourceStep>testdata</con:sourceStep><con:targetType>sign</con:targetType><con:targetStep>/x/v2/archive/zlimit</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>ts</con:name><con:sourceType>ts</con:sourceType><con:sourceStep>testdata</con:sourceStep><con:targetType>ts</con:targetType><con:targetStep>/x/v2/archive/zlimit</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>appkey</con:name><con:sourceType>appkey</con:sourceType><con:sourceStep>testdata</con:sourceStep><con:targetType>appkey</con:targetType><con:targetStep>/x/v2/archive/zlimit</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>appsecret</con:name><con:sourceType>appsecret</con:sourceType><con:sourceStep>testdata</con:sourceStep><con:targetType>appsecret</con:targetType><con:targetStep>/x/v2/archive/zlimit</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>aid</con:name><con:sourceType>aid</con:sourceType><con:sourceStep>testdata</con:sourceStep><con:targetType>aid</con:targetType><con:targetStep>/x/v2/archive/zlimit</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>ip</con:name><con:sourceType>ip</con:sourceType><con:sourceStep>testdata</con:sourceStep><con:targetType>ip</con:targetType><con:targetStep>/x/v2/archive/zlimit</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>cdnip</con:name><con:sourceType>cdnip</con:sourceType><con:sourceStep>testdata</con:sourceStep><con:targetType>cdnip</con:targetType><con:targetStep>/x/v2/archive/zlimit</con:targetStep><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="/x/v2/archive/zlimit" id="476d4d01-811f-433f-af3f-cb9a38574bd1"><con:settings/><con:config service="http://172.16.33.56:6081" resourcePath="/x/v2/archive/zlimit" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="/x/v2/archive/zlimit" id="73b585f6-518d-4a2c-bc4d-ce1dfb95bbd2" mediaType="application/x-www-form-urlencoded" postQueryString="true"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Cookie" value="" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>http://172.16.33.56:6081</con:endpoint><con:request/><con:originalUri>http://172.16.0.26/x/v2/archive/zlimit</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="sign" value="883600d7d3d1f61bdd65ca14272981f2"/>
  <con:entry key="cdnip" value="172.16.3.3"/>
  <con:entry key="ts" value="1464339851"/>
  <con:entry key="appsecret" value="4de2ccdbd9db69be0c2c6437bfe6eb69"/>
  <con:entry key="appkey" value="7d9f6f6fe2a898e8"/>
  <con:entry key="aid" value="288847"/>
  <con:entry key="ip" value="123.43.235.72"/>
</con:parameters><con:parameterOrder><con:entry>appkey</con:entry><con:entry>appsecret</con:entry><con:entry>sign</con:entry><con:entry>ts</con:entry><con:entry>aid</con:entry><con:entry>ip</con:entry><con:entry>cdnip</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase id="b1178079-9cf5-466d-8971-22ca0af53d75" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="/x/account/memcache/ratio" searchProperties="true"><con:settings/><con:testStep type="groovy" name="tssign" id="91f73965-73f0-4429-af7a-99a7cd81e1a6"><con:settings/><con:config><script>import java.util.*
import java.security.MessageDigest
import java.net.URLEncoder

//计算时间戳
Date date = new Date()
def st_string = date.getTime()
st_string = st_string.toString()
st_string = st_string.substring(0,10)


//===========================需要手工参与的地方=======================================
//1.设置data_list
//设置预读取的testdata里除sign以外的参数名字，用于计算md5
def data_list = ['appkey','appsecret','seed','ts']
//测试专用的appkey
def appkey_str = '7d9f6f6fe2a898e8'
//测试专用appkey对应的appsecret
def appsecret_str = '4de2ccdbd9db69be0c2c6437bfe6eb69'
//====================================================================================

//修改list按字母排序
data_list = data_list.sort()
log.info data_list

testRunner.testCase.testSteps["testdata"].setPropertyValue('ts',st_string)
testRunner.testCase.testSteps["testdata"].setPropertyValue('appkey',appkey_str)
testRunner.testCase.testSteps["testdata"].setPropertyValue('appsecret',appsecret_str)
def n = 0
def sg_orgin_string = ''





def sg_md5_string = ''

while (n&lt;data_list.size()){
	def getLocalPropValue = ''
	if(data_list[n] == 'appkey'){
		sg_orgin_string = sg_orgin_string + data_list[n] + '=' + java.net.URLEncoder.encode(appkey_str,'UTF-8') + '&amp;' 
	}else{
		if( testRunner.testCase.testSteps["testdata"].getPropertyValue(data_list[n]) == ''){
			log.info('null')
		}else{
			getLocalPropValue = testRunner.testCase.testSteps["testdata"].getPropertyValue(data_list[n])
			sg_orgin_string = sg_orgin_string + data_list[n] + '=' + java.net.URLEncoder.encode(getLocalPropValue,'UTF-8') + '&amp;'
		}
	}
	n = n + 1
}

def orgin_len = sg_orgin_string.size()
sg_orgin_string = sg_orgin_string[0..(orgin_len-2)]

//还原空格设置
sg_orgin_string = sg_orgin_string.replace('^',' ')

sg_orgin_string =  sg_orgin_string + appsecret_str
sg_md5_string = getMD5(sg_orgin_string)

log.info sg_orgin_string
log.info sg_md5_string

testRunner.testCase.testSteps["testdata"].setPropertyValue('sign',sg_md5_string)





//get md5
//=============================
def getMD5(String source){
	MessageDigest md5 = MessageDigest.getInstance("MD5")
	md5.update(source.getBytes())
	byte[] digest = md5.digest()
	StringBuffer sb = new StringBuffer()
	digest.eachByte {
		 sb.append(String.format("%02x", it &amp; 0xff)) 
	}
	return sb.toString()
}
</script></con:config></con:testStep><con:testStep type="properties" name="testdata" id="66e09323-a0f2-4060-9886-4b6a9844786d"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>appkey</con:name><con:value>7d9f6f6fe2a898e8</con:value></con:property><con:property><con:name>appsecret</con:name><con:value>4de2ccdbd9db69be0c2c6437bfe6eb69</con:value></con:property><con:property><con:name>ts</con:name><con:value>1463645351</con:value></con:property><con:property><con:name>sign</con:name><con:value>6a0b961897d8c1e0883eeb6a9e5e3081</con:value></con:property><con:property><con:name>seed</con:name><con:value/></con:property></con:properties></con:config></con:testStep><con:testStep type="transfer" name="Property Transfer" id="104228d7-4a2d-40a0-88b6-97edba4e16b3"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>appkey</con:name><con:sourceType>appkey</con:sourceType><con:sourceStep>testdata</con:sourceStep><con:targetType>appkey</con:targetType><con:targetStep>/x/account/memcache/ratio</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>appsecret</con:name><con:sourceType>appsecret</con:sourceType><con:sourceStep>testdata</con:sourceStep><con:targetType>appsecret</con:targetType><con:targetStep>/x/account/memcache/ratio</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>ts</con:name><con:sourceType>ts</con:sourceType><con:sourceStep>testdata</con:sourceStep><con:targetType>ts</con:targetType><con:targetStep>/x/account/memcache/ratio</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>sign</con:name><con:sourceType>sign</con:sourceType><con:sourceStep>testdata</con:sourceStep><con:targetType>sign</con:targetType><con:targetStep>/x/account/memcache/ratio</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>seed</con:name><con:sourceType>seed</con:sourceType><con:sourceStep>testdata</con:sourceStep><con:targetType>seed</con:targetType><con:targetStep>/x/account/memcache/ratio</con:targetStep><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="/x/account/memcache/ratio" id="57e6c94f-cac9-4dbf-b9f1-cdae6a2d7983"><con:settings/><con:config service="http://172.16.33.56:6071" resourcePath="/x/account/memcache/ratio" methodName="cache/set" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="/x/account/memcache/ratio" id="71a6df3d-e6b6-42cb-8b4e-48691ccb8e1b" mediaType="application/x-www-form-urlencoded" postQueryString="true"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Cookie" value="" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>http://172.16.33.56:6071</con:endpoint><con:request/><con:originalUri>http://172.16.0.26/x/account/cache/ratio</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="sign" value="6a0b961897d8c1e0883eeb6a9e5e3081"/>
  <con:entry key="ts" value="1463645351"/>
  <con:entry key="seed" value="60"/>
  <con:entry key="appkey" value="7d9f6f6fe2a898e8"/>
  <con:entry key="appsecret" value="4de2ccdbd9db69be0c2c6437bfe6eb69"/>
</con:parameters><con:parameterOrder><con:entry>appkey</con:entry><con:entry>appsecret</con:entry><con:entry>ts</con:entry><con:entry>sign</con:entry><con:entry>seed</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/><con:breakPoints><con:testStepId>80ea878a-e31a-4e97-9512-94a4d54de772</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase id="8c30ccf8-6ef3-4197-9ed4-ae4479082410" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="/x/account/memcache/ratio/get" searchProperties="true"><con:settings/><con:testStep type="groovy" name="tssign" id="9e572fe7-41d0-4a61-bffc-ca39dd7be306"><con:settings/><con:config><script>import java.util.*
import java.security.MessageDigest
import java.net.URLEncoder

//计算时间戳
Date date = new Date()
def st_string = date.getTime()
st_string = st_string.toString()
st_string = st_string.substring(0,10)


//===========================需要手工参与的地方=======================================
//1.设置data_list
//设置预读取的testdata里除sign以外的参数名字，用于计算md5
def data_list = ['appkey','appsecret','ts']
//测试专用的appkey
def appkey_str = '7d9f6f6fe2a898e8'
//测试专用appkey对应的appsecret
def appsecret_str = '4de2ccdbd9db69be0c2c6437bfe6eb69'
//====================================================================================

//修改list按字母排序
data_list = data_list.sort()
log.info data_list

testRunner.testCase.testSteps["testdata"].setPropertyValue('ts',st_string)
testRunner.testCase.testSteps["testdata"].setPropertyValue('appkey',appkey_str)
testRunner.testCase.testSteps["testdata"].setPropertyValue('appsecret',appsecret_str)
def n = 0
def sg_orgin_string = ''
def sg_md5_string = ''

while (n&lt;data_list.size()){
	def getLocalPropValue = ''
	if(data_list[n] == 'appkey'){
		sg_orgin_string = sg_orgin_string + data_list[n] + '=' + java.net.URLEncoder.encode(appkey_str,'UTF-8') + '&amp;' 
	}else{
		if( testRunner.testCase.testSteps["testdata"].getPropertyValue(data_list[n]) == ''){
			log.info('null')
		}else{
			getLocalPropValue = testRunner.testCase.testSteps["testdata"].getPropertyValue(data_list[n])
			sg_orgin_string = sg_orgin_string + data_list[n] + '=' + java.net.URLEncoder.encode(getLocalPropValue,'UTF-8') + '&amp;'
		}
	}
	n = n + 1
}

def orgin_len = sg_orgin_string.size()
sg_orgin_string = sg_orgin_string[0..(orgin_len-2)]

//还原空格设置
sg_orgin_string = sg_orgin_string.replace('^',' ')

sg_orgin_string =  sg_orgin_string + appsecret_str
sg_md5_string = getMD5(sg_orgin_string)

log.info sg_orgin_string
log.info sg_md5_string

testRunner.testCase.testSteps["testdata"].setPropertyValue('sign',sg_md5_string)

//get md5
//=============================
def getMD5(String source){
	MessageDigest md5 = MessageDigest.getInstance("MD5")
	md5.update(source.getBytes())
	byte[] digest = md5.digest()
	StringBuffer sb = new StringBuffer()
	digest.eachByte {
		 sb.append(String.format("%02x", it &amp; 0xff)) 
	}
	return sb.toString()
}
</script></con:config></con:testStep><con:testStep type="properties" name="testdata" id="409f7aa3-ccd1-4463-8efc-d6c524ae6f19"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>appkey</con:name><con:value>7d9f6f6fe2a898e8</con:value></con:property><con:property><con:name>appsecret</con:name><con:value>4de2ccdbd9db69be0c2c6437bfe6eb69</con:value></con:property><con:property><con:name>ts</con:name><con:value>1463118947</con:value></con:property><con:property><con:name>sign</con:name><con:value>1676dd905e8b95e514dc2a0dcfe3dcca</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="transfer" name="Property Transfer" id="c8108713-869d-442f-bdd0-0726f09fcf03"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>appkey</con:name><con:sourceType>appkey</con:sourceType><con:sourceStep>testdata</con:sourceStep><con:targetType>appkey</con:targetType><con:targetStep>/x/account/memcache/ratio/get</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>appsecret</con:name><con:sourceType>appsecret</con:sourceType><con:sourceStep>testdata</con:sourceStep><con:targetType>appsecret</con:targetType><con:targetStep>/x/account/memcache/ratio/get</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>ts</con:name><con:sourceType>ts</con:sourceType><con:sourceStep>testdata</con:sourceStep><con:targetType>ts</con:targetType><con:targetStep>/x/account/memcache/ratio/get</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>sign</con:name><con:sourceType>sign</con:sourceType><con:sourceStep>testdata</con:sourceStep><con:targetType>sign</con:targetType><con:targetStep>/x/account/memcache/ratio/get</con:targetStep><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="/x/account/memcache/ratio/get" id="5af098db-de91-49a0-a1d2-e17132988703"><con:settings/><con:config service="http://172.16.33.56:6071" resourcePath="/x/account/memcache/ratio/get" methodName="cache/get" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="/x/account/memcache/ratio/get" id="9067f6a8-b232-4a56-a550-cc6cc5218dcf" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Cookie" value="" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>http://172.16.33.56:6071</con:endpoint><con:request/><con:originalUri>http://172.16.0.26/x/archive/cache/ratio/get</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="sign" value="1676dd905e8b95e514dc2a0dcfe3dcca"/>
  <con:entry key="ts" value="1463118947"/>
  <con:entry key="appkey" value="7d9f6f6fe2a898e8"/>
  <con:entry key="appsecret" value="4de2ccdbd9db69be0c2c6437bfe6eb69"/>
</con:parameters><con:parameterOrder><con:entry>appkey</con:entry><con:entry>appsecret</con:entry><con:entry>ts</con:entry><con:entry>sign</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/><con:breakPoints><con:testStepId>a0c1503d-9b6c-4731-9bd3-427cb483b11c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase id="f86b1147-824e-4766-abc9-a6dc8b767ed6" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="/x/account/api/ratio" searchProperties="true"><con:settings/><con:testStep type="groovy" name="tssign" id="52af5828-c3ed-41c2-9d30-e9d59cee0a75"><con:settings/><con:config><script>import java.util.*
import java.security.MessageDigest
import java.net.URLEncoder

//计算时间戳
Date date = new Date()
def st_string = date.getTime()
st_string = st_string.toString()
st_string = st_string.substring(0,10)


//===========================需要手工参与的地方=======================================
//1.设置data_list
//设置预读取的testdata里除sign以外的参数名字，用于计算md5
def data_list = ['appkey','appsecret','ts','seed']
//测试专用的appkey
def appkey_str = '7d9f6f6fe2a898e8'
//测试专用appkey对应的appsecret
def appsecret_str = '4de2ccdbd9db69be0c2c6437bfe6eb69'
//====================================================================================

//修改list按字母排序
data_list = data_list.sort()
log.info data_list

testRunner.testCase.testSteps["testdata"].setPropertyValue('ts',st_string)
testRunner.testCase.testSteps["testdata"].setPropertyValue('appkey',appkey_str)
testRunner.testCase.testSteps["testdata"].setPropertyValue('appsecret',appsecret_str)
def n = 0
def sg_orgin_string = ''
def sg_md5_string = ''

while (n&lt;data_list.size()){
	def getLocalPropValue = ''
	if(data_list[n] == 'appkey'){
		sg_orgin_string = sg_orgin_string + data_list[n] + '=' + java.net.URLEncoder.encode(appkey_str,'UTF-8') + '&amp;' 
	}else{
		if( testRunner.testCase.testSteps["testdata"].getPropertyValue(data_list[n]) == ''){
			log.info('null')
		}else{
			getLocalPropValue = testRunner.testCase.testSteps["testdata"].getPropertyValue(data_list[n])
			sg_orgin_string = sg_orgin_string + data_list[n] + '=' + java.net.URLEncoder.encode(getLocalPropValue,'UTF-8') + '&amp;'
		}
	}
	n = n + 1
}

def orgin_len = sg_orgin_string.size()
sg_orgin_string = sg_orgin_string[0..(orgin_len-2)]

//还原空格设置
sg_orgin_string = sg_orgin_string.replace('^',' ')

sg_orgin_string =  sg_orgin_string + appsecret_str
sg_md5_string = getMD5(sg_orgin_string)

log.info sg_orgin_string
log.info sg_md5_string

testRunner.testCase.testSteps["testdata"].setPropertyValue('sign',sg_md5_string)

//get md5
//=============================
def getMD5(String source){
	MessageDigest md5 = MessageDigest.getInstance("MD5")
	md5.update(source.getBytes())
	byte[] digest = md5.digest()
	StringBuffer sb = new StringBuffer()
	digest.eachByte {
		 sb.append(String.format("%02x", it &amp; 0xff)) 
	}
	return sb.toString()
}
</script></con:config></con:testStep><con:testStep type="properties" name="testdata" id="a996c51d-4457-4188-b46b-2354643896f0"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>appkey</con:name><con:value>7d9f6f6fe2a898e8</con:value></con:property><con:property><con:name>appsecret</con:name><con:value>4de2ccdbd9db69be0c2c6437bfe6eb69</con:value></con:property><con:property><con:name>ts</con:name><con:value>1463645355</con:value></con:property><con:property><con:name>sign</con:name><con:value>4b5816144f35df4f4d9a22b8212df9fd</con:value></con:property><con:property><con:name>seed</con:name><con:value/></con:property></con:properties></con:config></con:testStep><con:testStep type="transfer" name="Property Transfer" id="417bcbc9-d985-44c3-9a1e-5151194321b4"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>appkey</con:name><con:sourceType>appkey</con:sourceType><con:sourceStep>testdata</con:sourceStep><con:targetType>appkey</con:targetType><con:targetStep>/x/account/api/ratio</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>appsecret</con:name><con:sourceType>appsecret</con:sourceType><con:sourceStep>testdata</con:sourceStep><con:targetType>appsecret</con:targetType><con:targetStep>/x/account/api/ratio</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>ts</con:name><con:sourceType>ts</con:sourceType><con:sourceStep>testdata</con:sourceStep><con:targetType>ts</con:targetType><con:targetStep>/x/account/api/ratio</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>sign</con:name><con:sourceType>sign</con:sourceType><con:sourceStep>testdata</con:sourceStep><con:targetType>sign</con:targetType><con:targetStep>/x/account/api/ratio</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>seed</con:name><con:sourceType>seed</con:sourceType><con:sourceStep>testdata</con:sourceStep><con:targetType>seed</con:targetType><con:targetStep>/x/account/api/ratio</con:targetStep><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="/x/account/api/ratio" id="b2cda043-7625-4177-87d7-09155cb44349"><con:settings/><con:config service="http://172.16.33.56:6071" resourcePath="/x/account/api/ratio" methodName="mysql/set" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="/x/account/api/ratio" id="1ae52ff9-c00e-493d-aea0-bf19754df013" mediaType="application/x-www-form-urlencoded" postQueryString="true"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Cookie" value="" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>http://172.16.33.56:6071</con:endpoint><con:request/><con:originalUri>http://172.16.0.26/x/archive/mysql/ratio</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="sign" value="4b5816144f35df4f4d9a22b8212df9fd"/>
  <con:entry key="ts" value="1463645355"/>
  <con:entry key="seed" value="0"/>
  <con:entry key="appsecret" value="4de2ccdbd9db69be0c2c6437bfe6eb69"/>
  <con:entry key="appkey" value="7d9f6f6fe2a898e8"/>
</con:parameters><con:parameterOrder><con:entry>appkey</con:entry><con:entry>appsecret</con:entry><con:entry>ts</con:entry><con:entry>sign</con:entry><con:entry>seed</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/><con:breakPoints><con:testStepId>f040107e-c608-42d4-96ec-ec3e241184d8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase id="da06e861-714c-476d-861a-8735054ba0ed" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="/x/account/api/ratio/get" searchProperties="true"><con:settings/><con:testStep type="properties" name="testdata" id="17664819-e304-44c5-ba9b-0954cea95fb8"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>appkey</con:name><con:value>7d9f6f6fe2a898e8</con:value></con:property><con:property><con:name>appsecret</con:name><con:value>4de2ccdbd9db69be0c2c6437bfe6eb69</con:value></con:property><con:property><con:name>ts</con:name><con:value>1460633651</con:value></con:property><con:property><con:name>sign</con:name><con:value>3c272020ce3ee2f73498ea2102d36416</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="transfer" name="Property Transfer" id="e23cb636-fe40-4371-a7e2-ca1690ce9bae"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>sign</con:name><con:sourceType>sign</con:sourceType><con:sourceStep>testdata</con:sourceStep><con:targetType>sign</con:targetType><con:targetStep>/x/account/api/ratio/get</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>ts</con:name><con:sourceType>ts</con:sourceType><con:sourceStep>testdata</con:sourceStep><con:targetType>ts</con:targetType><con:targetStep>/x/account/api/ratio/get</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>appsecret</con:name><con:sourceType>appsecret</con:sourceType><con:sourceStep>testdata</con:sourceStep><con:targetType>appsecret</con:targetType><con:targetStep>/x/account/api/ratio/get</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>appkey</con:name><con:sourceType>appkey</con:sourceType><con:sourceStep>testdata</con:sourceStep><con:targetType>appkey</con:targetType><con:targetStep>/x/account/api/ratio/get</con:targetStep><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="/x/account/api/ratio/get" id="abd5a0f6-8dc9-4871-8b75-8a664ebed36a"><con:settings/><con:config service="http://172.16.33.56:6071" resourcePath="/x/account/api/ratio/get" methodName="mysql/get" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="/x/account/api/ratio/get" id="bc9e5274-db84-4a59-ae8b-b1b9b7de3013" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Cookie" value="" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>http://172.16.33.56:6071</con:endpoint><con:request/><con:originalUri>http://172.16.0.26/x/archive/mysql/ratio/get</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="sign" value="3c272020ce3ee2f73498ea2102d36416"/>
  <con:entry key="ts" value="1460633651"/>
  <con:entry key="appsecret" value="4de2ccdbd9db69be0c2c6437bfe6eb69"/>
  <con:entry key="appkey" value="7d9f6f6fe2a898e8"/>
</con:parameters><con:parameterOrder><con:entry>appkey</con:entry><con:entry>appsecret</con:entry><con:entry>ts</con:entry><con:entry>sign</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/><con:breakPoints><con:testStepId>ccbd75d0-3dbf-40c0-b3f1-86e8811f36b9</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>b03f1ad4-5313-4415-a9a4-35d73acfe101</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase id="471e5221-92ae-4736-a1df-1aef3ddef146" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="/x/account/redis/ratio" searchProperties="true"><con:settings/><con:testStep type="groovy" name="tssign" id="83409f33-a9a2-4db8-86a4-44ac85c3830e"><con:settings/><con:config><script>import java.util.*
import java.security.MessageDigest
import java.net.URLEncoder

//计算时间戳
Date date = new Date()
def st_string = date.getTime()
st_string = st_string.toString()
st_string = st_string.substring(0,10)


//===========================需要手工参与的地方=======================================
//1.设置data_list
//设置预读取的testdata里除sign以外的参数名字，用于计算md5
def data_list = ['appkey','appsecret','seed','ts']
//测试专用的appkey
def appkey_str = '7d9f6f6fe2a898e8'
//测试专用appkey对应的appsecret
def appsecret_str = '4de2ccdbd9db69be0c2c6437bfe6eb69'
//====================================================================================

//修改list按字母排序
data_list = data_list.sort()
log.info data_list

testRunner.testCase.testSteps["testdata"].setPropertyValue('ts',st_string)
testRunner.testCase.testSteps["testdata"].setPropertyValue('appkey',appkey_str)
testRunner.testCase.testSteps["testdata"].setPropertyValue('appsecret',appsecret_str)
def n = 0
def sg_orgin_string = ''
def sg_md5_string = ''

while (n&lt;data_list.size()){
	def getLocalPropValue = ''
	if(data_list[n] == 'appkey'){
		sg_orgin_string = sg_orgin_string + data_list[n] + '=' + java.net.URLEncoder.encode(appkey_str,'UTF-8') + '&amp;' 
	}else{
		if( testRunner.testCase.testSteps["testdata"].getPropertyValue(data_list[n]) == ''){
			log.info('null')
		}else{
			getLocalPropValue = testRunner.testCase.testSteps["testdata"].getPropertyValue(data_list[n])
			sg_orgin_string = sg_orgin_string + data_list[n] + '=' + java.net.URLEncoder.encode(getLocalPropValue,'UTF-8') + '&amp;'
		}
	}
	n = n + 1
}

def orgin_len = sg_orgin_string.size()
sg_orgin_string = sg_orgin_string[0..(orgin_len-2)]

//还原空格设置
sg_orgin_string = sg_orgin_string.replace('^',' ')

sg_orgin_string =  sg_orgin_string + appsecret_str
sg_md5_string = getMD5(sg_orgin_string)

log.info sg_orgin_string
log.info sg_md5_string

testRunner.testCase.testSteps["testdata"].setPropertyValue('sign',sg_md5_string)


//get md5
//=============================
def getMD5(String source){
	MessageDigest md5 = MessageDigest.getInstance("MD5")
	md5.update(source.getBytes())
	byte[] digest = md5.digest()
	StringBuffer sb = new StringBuffer()
	digest.eachByte {
		 sb.append(String.format("%02x", it &amp; 0xff)) 
	}
	return sb.toString()
}
</script></con:config></con:testStep><con:testStep type="properties" name="testdata" id="c111dfdb-997c-4907-8d7b-9d2db64b16db"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>appkey</con:name><con:value>7d9f6f6fe2a898e8</con:value></con:property><con:property><con:name>appsecret</con:name><con:value>4de2ccdbd9db69be0c2c6437bfe6eb69</con:value></con:property><con:property><con:name>ts</con:name><con:value>1463123190</con:value></con:property><con:property><con:name>sign</con:name><con:value>2abcc5a93950ae0aaf2d29444b605b35</con:value></con:property><con:property><con:name>seed</con:name><con:value/></con:property></con:properties></con:config></con:testStep><con:testStep type="transfer" name="Property Transfer" id="4b6707d4-5c4e-41c9-89ac-e91906ff2e40"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>appkey</con:name><con:sourceType>appkey</con:sourceType><con:sourceStep>testdata</con:sourceStep><con:targetType>appkey</con:targetType><con:targetStep>/x/account/redis/ratio</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>appsecret</con:name><con:sourceType>appsecret</con:sourceType><con:sourceStep>testdata</con:sourceStep><con:targetType>appsecret</con:targetType><con:targetStep>/x/account/redis/ratio</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>ts</con:name><con:sourceType>ts</con:sourceType><con:sourceStep>testdata</con:sourceStep><con:targetType>ts</con:targetType><con:targetStep>/x/account/redis/ratio</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>sign</con:name><con:sourceType>sign</con:sourceType><con:sourceStep>testdata</con:sourceStep><con:targetType>sign</con:targetType><con:targetStep>/x/account/redis/ratio</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>seed</con:name><con:sourceType>seed</con:sourceType><con:sourceStep>testdata</con:sourceStep><con:targetType>seed</con:targetType><con:targetStep>/x/account/redis/ratio</con:targetStep><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="/x/account/redis/ratio" id="4caee1e6-2cc3-49fd-bb07-e21fd7d3fa14"><con:settings/><con:config service="http://172.16.33.56:6071" resourcePath="/x/account/redis/ratio" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="/x/account/redis/ratio" id="b20cdaea-3deb-4903-8170-b65599403366" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Cookie" value="" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>http://172.16.33.56:6071</con:endpoint><con:request/><con:originalUri>http://172.16.33.56/x/account/redis/ratio</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="sign" value="2abcc5a93950ae0aaf2d29444b605b35"/>
  <con:entry key="ts" value="1463123190"/>
  <con:entry key="seed" value="0"/>
  <con:entry key="appkey" value="7d9f6f6fe2a898e8"/>
  <con:entry key="appsecret" value="4de2ccdbd9db69be0c2c6437bfe6eb69"/>
</con:parameters><con:parameterOrder><con:entry>appkey</con:entry><con:entry>appsecret</con:entry><con:entry>ts</con:entry><con:entry>sign</con:entry><con:entry>seed</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/><con:breakPoints><con:testStepId>80ea878a-e31a-4e97-9512-94a4d54de772</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase id="2e689347-ee6a-4d21-b124-8c77db027084" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="/x/account/redis/ratio/get" searchProperties="true"><con:settings/><con:testStep type="groovy" name="tssign" id="0e9ed54e-326a-492f-ad68-b7cf8c241ab9"><con:settings/><con:config><script>import java.util.*
import java.security.MessageDigest
import java.net.URLEncoder

//计算时间戳
Date date = new Date()
def st_string = date.getTime()
st_string = st_string.toString()
st_string = st_string.substring(0,10)


//===========================需要手工参与的地方=======================================
//1.设置data_list
//设置预读取的testdata里除sign以外的参数名字，用于计算md5
def data_list = ['appkey','appsecret','ts']
//测试专用的appkey
def appkey_str = '7d9f6f6fe2a898e8'
//测试专用appkey对应的appsecret
def appsecret_str = '4de2ccdbd9db69be0c2c6437bfe6eb69'
//====================================================================================

//修改list按字母排序
data_list = data_list.sort()
log.info data_list

testRunner.testCase.testSteps["testdata"].setPropertyValue('ts',st_string)
testRunner.testCase.testSteps["testdata"].setPropertyValue('appkey',appkey_str)
testRunner.testCase.testSteps["testdata"].setPropertyValue('appsecret',appsecret_str)
def n = 0
def sg_orgin_string = ''
def sg_md5_string = ''

while (n&lt;data_list.size()){
	def getLocalPropValue = ''
	if(data_list[n] == 'appkey'){
		sg_orgin_string = sg_orgin_string + data_list[n] + '=' + java.net.URLEncoder.encode(appkey_str,'UTF-8') + '&amp;' 
	}else{
		if( testRunner.testCase.testSteps["testdata"].getPropertyValue(data_list[n]) == ''){
			log.info('null')
		}else{
			getLocalPropValue = testRunner.testCase.testSteps["testdata"].getPropertyValue(data_list[n])
			sg_orgin_string = sg_orgin_string + data_list[n] + '=' + java.net.URLEncoder.encode(getLocalPropValue,'UTF-8') + '&amp;'
		}
	}
	n = n + 1
}

def orgin_len = sg_orgin_string.size()
sg_orgin_string = sg_orgin_string[0..(orgin_len-2)]

//还原空格设置
sg_orgin_string = sg_orgin_string.replace('^',' ')

sg_orgin_string =  sg_orgin_string + appsecret_str
sg_md5_string = getMD5(sg_orgin_string)

log.info sg_orgin_string
log.info sg_md5_string

testRunner.testCase.testSteps["testdata"].setPropertyValue('sign',sg_md5_string)


//get md5
//=============================
def getMD5(String source){
	MessageDigest md5 = MessageDigest.getInstance("MD5")
	md5.update(source.getBytes())
	byte[] digest = md5.digest()
	StringBuffer sb = new StringBuffer()
	digest.eachByte {
		 sb.append(String.format("%02x", it &amp; 0xff)) 
	}
	return sb.toString()
}
</script></con:config></con:testStep><con:testStep type="properties" name="testdata" id="468bbc85-4887-4334-8eda-9a20b7cb1777"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>appkey</con:name><con:value>7d9f6f6fe2a898e8</con:value></con:property><con:property><con:name>appsecret</con:name><con:value>4de2ccdbd9db69be0c2c6437bfe6eb69</con:value></con:property><con:property><con:name>ts</con:name><con:value>1463118923</con:value></con:property><con:property><con:name>sign</con:name><con:value>9db4dee28ea675dca61f0e5f5247efac</con:value></con:property><con:property><con:name>seed</con:name><con:value/></con:property></con:properties></con:config></con:testStep><con:testStep type="transfer" name="Property Transfer" id="51db4c0e-f786-4d7d-9178-550fd4617645"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>appkey</con:name><con:sourceType>appkey</con:sourceType><con:sourceStep>testdata</con:sourceStep><con:targetType>appkey</con:targetType><con:targetStep>/x/account/redis/ratio/get</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>appsecret</con:name><con:sourceType>appsecret</con:sourceType><con:sourceStep>testdata</con:sourceStep><con:targetType>appsecret</con:targetType><con:targetStep>/x/account/redis/ratio/get</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>ts</con:name><con:sourceType>ts</con:sourceType><con:sourceStep>testdata</con:sourceStep><con:targetType>ts</con:targetType><con:targetStep>/x/account/redis/ratio/get</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>sign</con:name><con:sourceType>sign</con:sourceType><con:sourceStep>testdata</con:sourceStep><con:targetType>sign</con:targetType><con:targetStep>/x/account/redis/ratio/get</con:targetStep><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="/x/account/redis/ratio/get" id="4c1146be-dbd7-4dc4-ad10-8295fe849b04"><con:settings/><con:config service="http://172.16.33.56:6071" resourcePath="/x/account/redis/ratio/get" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="/x/account/redis/ratio/get" id="cea14f29-4124-4d66-ac50-6ef1f111ba23" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Cookie" value="" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>http://172.16.33.56:6071</con:endpoint><con:request/><con:originalUri>http://172.16.33.56/x/account/redis/ratio/get</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="sign" value="9db4dee28ea675dca61f0e5f5247efac"/>
  <con:entry key="ts" value="1463118923"/>
  <con:entry key="appkey" value="7d9f6f6fe2a898e8"/>
  <con:entry key="appsecret" value="4de2ccdbd9db69be0c2c6437bfe6eb69"/>
</con:parameters><con:parameterOrder><con:entry>appkey</con:entry><con:entry>appsecret</con:entry><con:entry>ts</con:entry><con:entry>sign</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/><con:breakPoints><con:testStepId>80ea878a-e31a-4e97-9512-94a4d54de772</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase id="051eb7bb-8201-4b81-b8e6-c28a2dfc14dc" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="/x/account/cache/del" searchProperties="true"><con:settings/><con:testStep type="groovy" name="tssign" id="71df61f2-ca76-4ff3-b6fb-8e42cf98aeb1"><con:settings/><con:config><script>import java.util.*
import java.security.MessageDigest
import java.net.URLEncoder

//计算时间戳
Date date = new Date()
def st_string = date.getTime()
st_string = st_string.toString()
st_string = st_string.substring(0,10)


//===========================需要手工参与的地方=======================================
//1.设置data_list
//设置预读取的testdata里除sign以外的参数名字，用于计算md5
def data_list = ['appkey','appsecret','ts','mid']
//测试专用的appkey
def appkey_str = '7d9f6f6fe2a898e8'
//测试专用appkey对应的appsecret
def appsecret_str = '4de2ccdbd9db69be0c2c6437bfe6eb69'
//====================================================================================

//修改list按字母排序
data_list = data_list.sort()
log.info data_list

testRunner.testCase.testSteps["testdata"].setPropertyValue('ts',st_string)
testRunner.testCase.testSteps["testdata"].setPropertyValue('appkey',appkey_str)
testRunner.testCase.testSteps["testdata"].setPropertyValue('appsecret',appsecret_str)
def n = 0
def sg_orgin_string = ''
def sg_md5_string = ''

while (n&lt;data_list.size()){
	def getLocalPropValue = ''
	if(data_list[n] == 'appkey'){
		sg_orgin_string = sg_orgin_string + data_list[n] + '=' + java.net.URLEncoder.encode(appkey_str,'UTF-8') + '&amp;' 
	}else{
		if( testRunner.testCase.testSteps["testdata"].getPropertyValue(data_list[n]) == ''){
			log.info('null')
		}else{
			getLocalPropValue = testRunner.testCase.testSteps["testdata"].getPropertyValue(data_list[n])
			sg_orgin_string = sg_orgin_string + data_list[n] + '=' + java.net.URLEncoder.encode(getLocalPropValue,'UTF-8') + '&amp;'
		}
	}
	n = n + 1
}

def orgin_len = sg_orgin_string.size()
sg_orgin_string = sg_orgin_string[0..(orgin_len-2)]

//还原空格设置
sg_orgin_string = sg_orgin_string.replace('^',' ')

sg_orgin_string =  sg_orgin_string + appsecret_str
sg_md5_string = getMD5(sg_orgin_string)

log.info sg_orgin_string
log.info sg_md5_string

testRunner.testCase.testSteps["testdata"].setPropertyValue('sign',sg_md5_string)


//get md5
//=============================
def getMD5(String source){
	MessageDigest md5 = MessageDigest.getInstance("MD5")
	md5.update(source.getBytes())
	byte[] digest = md5.digest()
	StringBuffer sb = new StringBuffer()
	digest.eachByte {
		 sb.append(String.format("%02x", it &amp; 0xff)) 
	}
	return sb.toString()
}
</script></con:config></con:testStep><con:testStep type="properties" name="testdata" id="dc5b4597-43c7-4139-a959-c5e162cfbf60"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>appkey</con:name><con:value>7d9f6f6fe2a898e8</con:value></con:property><con:property><con:name>appsecret</con:name><con:value>4de2ccdbd9db69be0c2c6437bfe6eb69</con:value></con:property><con:property><con:name>sign</con:name><con:value>8cf276cbfb6260a692625f17567d47ac</con:value></con:property><con:property><con:name>ts</con:name><con:value>1463060380</con:value></con:property><con:property><con:name>mid</con:name><con:value/></con:property></con:properties></con:config></con:testStep><con:testStep type="transfer" name="Property Transfer" id="892a5229-e9fd-4eb7-8a1d-f0b35231908c"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>mid</con:name><con:sourceType>mid</con:sourceType><con:sourceStep>testdata</con:sourceStep><con:targetType>mid</con:targetType><con:targetStep>/x/account/cache/del</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>ts</con:name><con:sourceType>ts</con:sourceType><con:sourceStep>testdata</con:sourceStep><con:targetType>ts</con:targetType><con:targetStep>/x/account/cache/del</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>sign</con:name><con:sourceType>sign</con:sourceType><con:sourceStep>testdata</con:sourceStep><con:targetType>sign</con:targetType><con:targetStep>/x/account/cache/del</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>appsecret</con:name><con:sourceType>appsecret</con:sourceType><con:sourceStep>testdata</con:sourceStep><con:targetType>appsecret</con:targetType><con:targetStep>/x/account/cache/del</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>appkey</con:name><con:sourceType>appkey</con:sourceType><con:sourceStep>testdata</con:sourceStep><con:targetType>appkey</con:targetType><con:targetStep>/x/account/cache/del</con:targetStep><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="/x/account/cache/del" id="fb51ba35-ad08-4305-93fd-d429644f33f6"><con:settings/><con:config service="http://172.16.33.56:6071" resourcePath="/x/account/cache/del" methodName="/x/account/cache/del" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="/x/account/cache/del" id="6a230578-e144-4403-9607-9234146e5266" mediaType="application/x-www-form-urlencoded" postQueryString="true"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Cookie" value="" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>http://172.16.33.56:6071</con:endpoint><con:request/><con:originalUri>http://172.16.33.56/x/account/cache/del</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="sign" value="8cf276cbfb6260a692625f17567d47ac"/>
  <con:entry key="ts" value="1463060380"/>
  <con:entry key="appsecret" value="4de2ccdbd9db69be0c2c6437bfe6eb69"/>
  <con:entry key="appkey" value="7d9f6f6fe2a898e8"/>
  <con:entry key="mid" value="17668003"/>
</con:parameters><con:parameterOrder><con:entry>appkey</con:entry><con:entry>appsecret</con:entry><con:entry>sign</con:entry><con:entry>ts</con:entry><con:entry>mid</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase id="8d08e18b-74e8-45fc-93f7-4964f84b2d70" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="history-clear" searchProperties="true"><con:settings/><con:testStep type="restrequest" name="history-clear" id="6fabbc62-f327-4608-96f2-46dceafe58a9"><con:settings/><con:config service="http://api.bilibili.com" resourcePath="/x/v2/history/clear" methodName="clear" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="history-clear" id="67635d6b-9861-48e5-b774-dd5e03eeb4c2" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Cookie" value="" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>http://api.bilibili.com</con:endpoint><con:request/><con:originalUri>http://api.bilibili.com/x/v2/history/clear</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/><con:breakPoints><con:testStepId>6bf2f3ba-a523-46db-b192-bc38cae987ff</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase id="edc59809-4edf-48d7-b5e1-29150560de2a" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="history-add" searchProperties="true"><con:settings/><con:testStep type="properties" name="testdata" id="cb405e49-b126-4259-9a28-d7e9f055a0b1"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>aid</con:name><con:value/></con:property></con:properties></con:config></con:testStep><con:testStep type="transfer" name="Property Transfer" id="70adc7f7-6a52-4275-bff3-d98ec8d77a7b"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>aid</con:name><con:sourceType>aid</con:sourceType><con:sourceStep>testdata</con:sourceStep><con:targetType>aid</con:targetType><con:targetStep>history-add</con:targetStep><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="history-add" id="2483bbeb-332f-45a7-bce1-2e9ed0de61fe"><con:settings/><con:config service="http://api.bilibili.com" resourcePath="/x/v2/history/add" methodName="add" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="history-add" id="b179218b-49d0-45e9-b016-a5c4f238d69c" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Cookie" value="" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>http://api.bilibili.com</con:endpoint><con:request/><con:originalUri>http://api.bilibili.com/x/v2/history/add</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="aid" value="2880579" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>aid</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/><con:breakPoints><con:testStepId>6bf2f3ba-a523-46db-b192-bc38cae987ff</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase id="524681d6-cf39-4421-b090-9f624b65ed4e" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="history-del" searchProperties="true"><con:settings/><con:testStep type="properties" name="testdata" id="8bd79f8d-31aa-48c8-bd12-c80456f2a5f1"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>aid</con:name><con:value/></con:property></con:properties></con:config></con:testStep><con:testStep type="transfer" name="Property Transfer" id="3a29bd77-0335-4469-90d1-cc3668c7e904"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>aid</con:name><con:sourceType>aid</con:sourceType><con:sourceStep>testdata</con:sourceStep><con:targetType>aid</con:targetType><con:targetStep>history-del</con:targetStep><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="history-del" id="6fbaf2dd-7cc5-4f04-a4f9-2c3d6740a031"><con:settings/><con:config service="http://api.bilibili.com" resourcePath="/x/v2/history/del" methodName="del" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="history-del" id="ce5d3dc4-8843-4434-a975-d07777061d2d" mediaType="application/x-www-form-urlencoded" postQueryString="true"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Cookie" value="" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>http://api.bilibili.com</con:endpoint><con:request/><con:originalUri>http://api.bilibili.com/x/v2/history/del</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="aid" value="103" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>aid</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/><con:breakPoints><con:testStepId>6bf2f3ba-a523-46db-b192-bc38cae987ff</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase id="fa22447a-0e05-42b7-87ee-864a98c1dda2" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="history-get" searchProperties="true"><con:settings/><con:testStep type="properties" name="testdata" id="0f919d88-755d-456b-a648-b674802743c0"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>pn</con:name><con:value/></con:property><con:property><con:name>ps</con:name><con:value/></con:property></con:properties></con:config></con:testStep><con:testStep type="transfer" name="Property Transfer" id="aa6021c0-1cf9-47d6-9df7-87052941332f"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>pn</con:name><con:sourceType>pn</con:sourceType><con:sourceStep>testdata</con:sourceStep><con:targetType>pn</con:targetType><con:targetStep>history-get</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>ps</con:name><con:sourceType>ps</con:sourceType><con:sourceStep>testdata</con:sourceStep><con:targetType>ps</con:targetType><con:targetStep>history-get</con:targetStep><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="history-get" id="9086abb9-30b9-41c0-9990-743c480db1bc"><con:settings/><con:config service="http://api.bilibili.com" resourcePath="/x/v2/history" methodName="get" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="history-get" id="72f5344a-ebc4-4d4e-adaf-8ca153473d14" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Cookie" value="" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://api.bilibili.com</con:endpoint><con:request/><con:originalUri>http://api.bilibili.com/x/v2/history</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="pn" value="1"/>
  <con:entry key="ps" value="10"/>
</con:parameters><con:parameterOrder><con:entry>pn</con:entry><con:entry>ps</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/><con:breakPoints><con:testStepId>9618485d-6b67-42c8-ba31-0e8cd4c652e0</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:properties/><con:reportParameters/></con:testSuite><con:testSuite id="51bc86c9-bcaa-4b78-9fd2-fbd6e4512e1e" name="case"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase id="ff7139ec-659a-4138-805a-ecad77030c9c" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="case" searchProperties="true"><con:settings/><con:testStep type="groovy" name="archive-redis设置降级比例" id="eeba8cd1-6a5b-487e-be9e-0b75657212b6"><con:settings/><con:config><script>import com.eviware.soapui.support.types.StringToObjectMap
import groovy.json.JsonSlurper
import com.eviware.soapui.impl.wsdl.support.http.HttpClientSupport
import org.apache.http.impl.cookie.BasicClientCookie
import com.eviware.soapui.support.types.StringToStringMap


def params_list =  ['seed=0']
log.info("设置archive/cache/set降级")

//读取公共位置提供的可测试的access_key
//def testdata_access_key = testRunner.testCase.testSuite.project.testSuites['common_testsuite'].testCases["cookie"].testSteps['access_key'].getPropertyValue('access000')
//params_list.add(testdata_access_key)
log.info(params_list)

//设置本次待测试的testcase名称
//testcase_name 对应testsuite下调用的testcase的名字
//teststep_name 将调用的testcase中的step名字
def testcase_name = '/x/v2/archive/redis/ratio'
def teststep_name = '/x/v2/archive/redis/ratio'

def re = getContentOut(testcase_name,teststep_name,params_list)

assert(re.code == 0)
log.info(re)


def getContentOut(String testcase_name,String teststep_name,List request_params){
	def testproject = testRunner.testCase.testSuite.project
	def testcase = testproject.testSuites['common_testsuite'].testCases[testcase_name]

	for(i in request_params){
		testcase.testSteps['testdata'].setPropertyValue(i.split('=')[0],i.split('=')[1])
		}

	def contextMap = new StringToObjectMap(context)
	def runner = testcase.run(contextMap,false)
	//获取测试的请求
	def testcase_stepcount = testcase.getTestStepCount() 
	def response_content = runner.getResults()[testcase_stepcount-1].getResponseContent()
     //还原设置参数
	tearDownInput(testcase_name,request_params)
	//还原cookie设置
	setCookies(testcase_name, teststep_name,'teardown')

     //把测试结果json化后传出去
	def slurper = new JsonSlurper()
	def re = slurper.parseText(response_content)
	
	return re
}

def tearDownInput(String testcase_name,List request_params){
	for(i in request_params){
		testRunner.testCase.testSuite.project.testSuites['common_testsuite'].testCases[testcase_name].testSteps['testdata'].setPropertyValue(i.split('=')[0],'')
		}
}

def setCookies(String testcase_name,String teststep_name,String userid){
	//按用户名读取预置的cookie值
	def testproject = testRunner.testCase.testSuite.project
	def cookies_str = testproject.testSuites['common_testsuite'].testCases['cookie'].testSteps['user_cookie'].getPropertyValue(userid)
	def reqheaders = new StringToStringMap()
	reqheaders.put('Cookie',cookies_str)
	testproject.testSuites['common_testsuite'].getTestCaseByName(testcase_name).getTestStepByName(teststep_name).testRequest.setRequestHeaders(reqheaders)	
}


def setaptcha(String userid,List prams_list){
	//按用户名读取预置的cookie值
	def testproject = testRunner.testCase.testSuite.project
	def cookies_str = testproject.testSuites['common_testsuite'].testCases['cookie'].testSteps['user_cookie'].getPropertyValue(userid)
	
	def values = cookies_str.split(';')
	
	for(i in (0..(values.size()-1))){
		if(values[i].split('=')[0] == '_dfcaptcha') {
			prams_list.add('captcha=' + values[i].split('=')[1])
			return prams_list
		}
	}
	
}
</script></con:config></con:testStep><con:testStep type="groovy" name="archive-redis获取降级比例" id="654d71d9-c466-42be-9438-0223b8d0ef8a"><con:settings/><con:config><script>import com.eviware.soapui.support.types.StringToObjectMap
import groovy.json.JsonSlurper
import com.eviware.soapui.impl.wsdl.support.http.HttpClientSupport
import org.apache.http.impl.cookie.BasicClientCookie
import com.eviware.soapui.support.types.StringToStringMap


def params_list =  []
log.info("设置archive/cache/set降级")

//读取公共位置提供的可测试的access_key
//def testdata_access_key = testRunner.testCase.testSuite.project.testSuites['common_testsuite'].testCases["cookie"].testSteps['access_key'].getPropertyValue('access000')
//params_list.add(testdata_access_key)
log.info(params_list)

//设置本次待测试的testcase名称
//testcase_name 对应testsuite下调用的testcase的名字
//teststep_name 将调用的testcase中的step名字
def testcase_name = '/x/v2/archive/redis/ratio/get'
def teststep_name = '/x/v2/archive/redis/ratio/get'

def re = getContentOut(testcase_name,teststep_name,params_list)

assert(re.code == 0)
log.info(re)


def getContentOut(String testcase_name,String teststep_name,List request_params){
	def testproject = testRunner.testCase.testSuite.project
	def testcase = testproject.testSuites['common_testsuite'].testCases[testcase_name]

	for(i in request_params){
		testcase.testSteps['testdata'].setPropertyValue(i.split('=')[0],i.split('=')[1])
		}

	def contextMap = new StringToObjectMap(context)
	def runner = testcase.run(contextMap,false)
	//获取测试的请求
	def testcase_stepcount = testcase.getTestStepCount() 
	def response_content = runner.getResults()[testcase_stepcount-1].getResponseContent()
     //还原设置参数
	tearDownInput(testcase_name,request_params)
	//还原cookie设置
	setCookies(testcase_name, teststep_name,'teardown')

     //把测试结果json化后传出去
	def slurper = new JsonSlurper()
	def re = slurper.parseText(response_content)
	
	return re
}

def tearDownInput(String testcase_name,List request_params){
	for(i in request_params){
		testRunner.testCase.testSuite.project.testSuites['common_testsuite'].testCases[testcase_name].testSteps['testdata'].setPropertyValue(i.split('=')[0],'')
		}
}

def setCookies(String testcase_name,String teststep_name,String userid){
	//按用户名读取预置的cookie值
	def testproject = testRunner.testCase.testSuite.project
	def cookies_str = testproject.testSuites['common_testsuite'].testCases['cookie'].testSteps['user_cookie'].getPropertyValue(userid)
	def reqheaders = new StringToStringMap()
	reqheaders.put('Cookie',cookies_str)
	testproject.testSuites['common_testsuite'].getTestCaseByName(testcase_name).getTestStepByName(teststep_name).testRequest.setRequestHeaders(reqheaders)	
}


def setaptcha(String userid,List prams_list){
	//按用户名读取预置的cookie值
	def testproject = testRunner.testCase.testSuite.project
	def cookies_str = testproject.testSuites['common_testsuite'].testCases['cookie'].testSteps['user_cookie'].getPropertyValue(userid)
	
	def values = cookies_str.split(';')
	
	for(i in (0..(values.size()-1))){
		if(values[i].split('=')[0] == '_dfcaptcha') {
			prams_list.add('captcha=' + values[i].split('=')[1])
			return prams_list
		}
	}
	
}
</script></con:config></con:testStep><con:testStep type="groovy" name="archive-cache设置降级比例" id="abc766eb-9e0c-4b54-9780-c34fea73c11f"><con:settings/><con:config><script>import com.eviware.soapui.support.types.StringToObjectMap
import groovy.json.JsonSlurper
import com.eviware.soapui.impl.wsdl.support.http.HttpClientSupport
import org.apache.http.impl.cookie.BasicClientCookie
import com.eviware.soapui.support.types.StringToStringMap

def params_list =  ['seed=0']
log.info("设置archive/cache/set降级")

//读取公共位置提供的可测试的access_key
//def testdata_access_key = testRunner.testCase.testSuite.project.testSuites['common_testsuite'].testCases["cookie"].testSteps['access_key'].getPropertyValue('access000')
//params_list.add(testdata_access_key)
log.info(params_list)

//设置本次待测试的testcase名称
//testcase_name 对应testsuite下调用的testcase的名字
//teststep_name 将调用的testcase中的step名字
def testcase_name = '/x/v2/archive/memcache/ratio'
def teststep_name = '/x/v2/archive/memcache/ratio'

def re = getContentOut(testcase_name,teststep_name,params_list)

assert(re.code == 0)
log.info(re)


def getContentOut(String testcase_name,String teststep_name,List request_params){
	def testproject = testRunner.testCase.testSuite.project
	def testcase = testproject.testSuites['common_testsuite'].testCases[testcase_name]

	for(i in request_params){
		testcase.testSteps['testdata'].setPropertyValue(i.split('=')[0],i.split('=')[1])
		}

	def contextMap = new StringToObjectMap(context)
	def runner = testcase.run(contextMap,false)
	//获取测试的请求
	def testcase_stepcount = testcase.getTestStepCount() 
	def response_content = runner.getResults()[testcase_stepcount-1].getResponseContent()
     //还原设置参数
	tearDownInput(testcase_name,request_params)
	//还原cookie设置
	setCookies(testcase_name, teststep_name,'teardown')

     //把测试结果json化后传出去
	def slurper = new JsonSlurper()
	def re = slurper.parseText(response_content)
	
	return re
}

def tearDownInput(String testcase_name,List request_params){
	for(i in request_params){
		testRunner.testCase.testSuite.project.testSuites['common_testsuite'].testCases[testcase_name].testSteps['testdata'].setPropertyValue(i.split('=')[0],'')
		}
}

def setCookies(String testcase_name,String teststep_name,String userid){
	//按用户名读取预置的cookie值
	def testproject = testRunner.testCase.testSuite.project
	def cookies_str = testproject.testSuites['common_testsuite'].testCases['cookie'].testSteps['user_cookie'].getPropertyValue(userid)
	def reqheaders = new StringToStringMap()
	reqheaders.put('Cookie',cookies_str)
	testproject.testSuites['common_testsuite'].getTestCaseByName(testcase_name).getTestStepByName(teststep_name).testRequest.setRequestHeaders(reqheaders)	
}


def setaptcha(String userid,List prams_list){
	//按用户名读取预置的cookie值
	def testproject = testRunner.testCase.testSuite.project
	def cookies_str = testproject.testSuites['common_testsuite'].testCases['cookie'].testSteps['user_cookie'].getPropertyValue(userid)
	
	def values = cookies_str.split(';')
	
	for(i in (0..(values.size()-1))){
		if(values[i].split('=')[0] == '_dfcaptcha') {
			prams_list.add('captcha=' + values[i].split('=')[1])
			return prams_list
		}
	}
	
}
</script></con:config></con:testStep><con:testStep type="groovy" name="archive-cache获取降级比例" id="5cdb4460-0456-4b82-ac7b-e6e8a496a92e"><con:settings/><con:config><script>import com.eviware.soapui.support.types.StringToObjectMap
import groovy.json.JsonSlurper
import com.eviware.soapui.impl.wsdl.support.http.HttpClientSupport
import org.apache.http.impl.cookie.BasicClientCookie
import com.eviware.soapui.support.types.StringToStringMap
//配置参数
def params_list =  []
log.info("获取archive/cache/get级别")

log.info(params_list)
//选择执行的测试套件
def testcase_name = '/x/v2/archive/memcache/ratio/get'
def teststep_name = '/x/v2/archive/memcache/ratio/get'

def re = getContentOut(testcase_name,teststep_name,params_list)

//检验返回码
assert(re.code == 0)
log.info(re)


def getContentOut(String testcase_name,String teststep_name,List request_params){
	def testproject = testRunner.testCase.testSuite.project
	def testcase = testproject.testSuites['common_testsuite'].testCases[testcase_name]

	for(i in request_params){
		testcase.testSteps['testdata'].setPropertyValue(i.split('=')[0],i.split('=')[1])
		log.info i.split('=')[0]
		log.info i.split('=')[1]
		}

	def contextMap = new StringToObjectMap(context)
	def runner = testcase.run(contextMap,false)
	//获取测试的请求
	def testcase_stepcount = testcase.getTestStepCount() 

	def response_content = runner.getResults()[testcase_stepcount-1].getResponseContent()
     //还原设置参数
	tearDownInput(testcase_name,request_params)

	//还原cookie设置
	setCookies(testcase_name, teststep_name,'teardown')

     //把测试结果json化后传出去
	def slurper = new JsonSlurper()
	def re = slurper.parseText(response_content)
	
	return re
}


def tearDownInput(String testcase_name,List request_params){
	for(i in request_params){
		testRunner.testCase.testSuite.project.testSuites['common_testsuite'].testCases[testcase_name].testSteps['testdata'].setPropertyValue(i.split('=')[0],'')
		}
}

def setCookies(String testcase_name,String teststep_name,String userid){
	//按用户名读取预置的cookie值
	def testproject = testRunner.testCase.testSuite.project
	def cookies_str = testproject.testSuites['common_testsuite'].testCases['cookie'].testSteps['user_cookie'].getPropertyValue(userid)
	def reqheaders = new StringToStringMap()
	reqheaders.put('Cookie',cookies_str)
	testproject.testSuites['common_testsuite'].getTestCaseByName(testcase_name).getTestStepByName(teststep_name).testRequest.setRequestHeaders(reqheaders)	
}


def setaptcha(String userid,List prams_list){
	//按用户名读取预置的cookie值
	def testproject = testRunner.testCase.testSuite.project
	def cookies_str = testproject.testSuites['common_testsuite'].testCases['cookie'].testSteps['user_cookie'].getPropertyValue(userid)
	
	def values = cookies_str.split(';')
	
	for(i in (0..(values.size()-1))){
		if(values[i].split('=')[0] == '_dfcaptcha') {
			prams_list.add('captcha=' + values[i].split('=')[1])
			return prams_list
		}
	}
	
}
</script></con:config></con:testStep><con:testStep type="groovy" name="archive-mysql设置降级比例" id="4b67e61f-89ba-4a06-8b15-1db06e7851dd"><con:settings/><con:config><script>import com.eviware.soapui.support.types.StringToObjectMap
import groovy.json.JsonSlurper
import com.eviware.soapui.impl.wsdl.support.http.HttpClientSupport
import org.apache.http.impl.cookie.BasicClientCookie
import com.eviware.soapui.support.types.StringToStringMap
//配置参数
def params_list =  ['seed=0']
log.info("设置archive/mysql/set降级")

log.info(params_list)
//选择执行的测试套件
def testcase_name = '/x/v2/archive/mysql/ratio'
def teststep_name = '/x/v2/archive/mysql/ratio'

def re = getContentOut(testcase_name,teststep_name,params_list)

//检验返回码
assert(re.code == 0)
log.info(re)


//==================================
//SendMsg_ByName 根据用户昵称发送消息或者获取聊天roomid
//输入参 username  用户的昵称如“格格”
//输入参 choice 选择项 若为a则返回rid，若为b则直接对用户发送私信, c 返回mid
//输入参 msg_str 私信内容
//u_name 使用的用户在cookies预设的name
//返回值 为rid
//==================================
def SendMsg_ByName(String username,String choice,String msg_str,String u_name){
	params_list_contact = ['page_size=20','page_no=1']
	testcase_name_contact = 'msg_querycontact'
	teststep_name_contact = 'querycontact'
	setCookies(testcase_name_contact,teststep_name_contact ,u_name)
	setaptcha(u_name,params_list_contact)
	
	def re_contact = getContentOut(testcase_name_contact,teststep_name_contact,params_list_contact)
	
	def user_size = re_contact.data.size
	def user_id = 0
	for (i in (0..(user_size - 1))){
		if (re_contact.data[i].uname == username){
			user_id = i
			break
			}
		
		if(i == user_size -1){
			assert(  '未在联系人列表中找到对应的用户')
			}
		}

		if(choice == 'c'){
			return re_contact.data[user_id].mid
		}

		//根据mid获取roomid
		params_list_double = ['mid=' + re_contact.data[user_id].mid]
		testcase_name_double = 'msg_querydouble'
		teststep_name_double = 'querydouble'
		log.info params_list_double
		setCookies(testcase_name_double,teststep_name_double ,u_name)
		setaptcha(u_name,params_list_double)
		
		def re_queryroom = getContentOut(testcase_name_double,teststep_name_double,params_list_double)

		if(choice == 'a'){
			return re_queryroom.data.rid
		}
		else{
			log.info 'send msg'
			params_list_send = ['rid=' + re_queryroom.data.rid,'msg=' + msg_str]
			setCookies('msg_send','send',u_name)
			setaptcha(u_name,params_list_send)
			def re_sendmsg = getContentOut('msg_send','send',params_list_send)
			return re_sendmsg
		}
}


//==================封装公共调用函数==============================

//==================================
//getContentOut 模拟请求
//输入参 testcase_name  testcase在testsuite中的名字
//输入参 teststep_name  主teststep在testcase中的名字
//输入参 request_params list的形式设置准备请求参数 eg： ['oid=1','type=1','message=233333']
//返回值为该请求获取的返回正文content
//==================================
def getContentOut(String testcase_name,String teststep_name,List request_params){
	def testproject = testRunner.testCase.testSuite.project
	def testcase = testproject.testSuites['common_testsuite'].testCases[testcase_name]

	for(i in request_params){
		testcase.testSteps['testdata'].setPropertyValue(i.split('=')[0],i.split('=')[1])
		log.info i.split('=')[0]
		log.info i.split('=')[1]
		}

	def contextMap = new StringToObjectMap(context)
	def runner = testcase.run(contextMap,false)
	//获取测试的请求
	def testcase_stepcount = testcase.getTestStepCount() 

	def response_content = runner.getResults()[testcase_stepcount-1].getResponseContent()
     //还原设置参数
	tearDownInput(testcase_name,request_params)

	//还原cookie设置
	setCookies(testcase_name, teststep_name,'teardown')

     //把测试结果json化后传出去
	def slurper = new JsonSlurper()
	def re = slurper.parseText(response_content)
	
	return re
}

//====================================
//tearDownInput 还原参数设置
//输入参 testcase_name  testcase在testsuite中的名字
//输入参 request_params list的形式设置准备请求参数 eg： ['oid=1','type=1','message=233333']
//返回值 无
//====================================
def tearDownInput(String testcase_name,List request_params){
	for(i in request_params){
		testRunner.testCase.testSuite.project.testSuites['common_testsuite'].testCases[testcase_name].testSteps['testdata'].setPropertyValue(i.split('=')[0],'')
		}
}

//====================================
//setCookies 设置cookies
//输入参 testcase_name  testcase在testsuite中的名字
//输入参 teststep_name  需要写入cookie的请求所在teststep名字
//输入参 userid 固定账号1 user001    账号2user002   高权限账号user_super001  还原操作 teardown
//返回值 无
//====================================
def setCookies(String testcase_name,String teststep_name,String userid){
	//按用户名读取预置的cookie值
	def testproject = testRunner.testCase.testSuite.project
	def cookies_str = testproject.testSuites['common_testsuite'].testCases['cookie'].testSteps['user_cookie'].getPropertyValue(userid)
	def reqheaders = new StringToStringMap()
	reqheaders.put('Cookie',cookies_str)
	testproject.testSuites['common_testsuite'].getTestCaseByName(testcase_name).getTestStepByName(teststep_name).testRequest.setRequestHeaders(reqheaders)	
}


//====================================
//getCaptcha 设置Captcha
//输入参 testcase_name  testcase在testsuite中的名字
//输入参 teststep_name  需要写入cookie的请求所在teststep名字
//输入参 userid 固定账号1 user001    账号2user002   高权限账号user_super001 
//返回值 无
//====================================
//====================================
def setaptcha(String userid,List prams_list){
	//按用户名读取预置的cookie值
	def testproject = testRunner.testCase.testSuite.project
	def cookies_str = testproject.testSuites['common_testsuite'].testCases['cookie'].testSteps['user_cookie'].getPropertyValue(userid)
	
	def values = cookies_str.split(';')
	
	for(i in (0..(values.size()-1))){
		if(values[i].split('=')[0] == '_dfcaptcha') {
			prams_list.add('captcha=' + values[i].split('=')[1])
			return prams_list
		}
	}
	
}
</script></con:config></con:testStep><con:testStep type="groovy" name="archive_hbase获取降级比例" id="733fb573-f4c7-4802-85a5-5013d0bc40dd"><con:settings/><con:config><script>import com.eviware.soapui.support.types.StringToObjectMap
import groovy.json.JsonSlurper
import com.eviware.soapui.impl.wsdl.support.http.HttpClientSupport
import org.apache.http.impl.cookie.BasicClientCookie
import com.eviware.soapui.support.types.StringToStringMap
//配置参数
def params_list =  []
log.info("获取archive/mysql/get级别")

log.info(params_list)
//选择执行的测试套件
def testcase_name = '/x/v2/archive/hbase/ratio/get'
def teststep_name = '/x/v2/archive/hbase/ratio/get'

def re = getContentOut(testcase_name,teststep_name,params_list)

//检验返回码
assert(re.code == 0)
log.info(re)

//==================================
//SendMsg_ByName 根据用户昵称发送消息或者获取聊天roomid
//输入参 username  用户的昵称如“格格”
//输入参 choice 选择项 若为a则返回rid，若为b则直接对用户发送私信, c 返回mid
//输入参 msg_str 私信内容 

//u_name 使用的用户在cookies预设的name
//返回值 为rid
//==================================
def SendMsg_ByName(String username,String choice,String msg_str,String u_name){
	params_list_contact = ['page_size=20','page_no=1']
	testcase_name_contact = 'msg_querycontact'
	teststep_name_contact = 'querycontact'
	setCookies(testcase_name_contact,teststep_name_contact ,u_name)
	setaptcha(u_name,params_list_contact)
	
	def re_contact = getContentOut(testcase_name_contact,teststep_name_contact,params_list_contact)
	
	def user_size = re_contact.data.size
	def user_id = 0
	for (i in (0..(user_size - 1))){
		if (re_contact.data[i].uname == username){
			user_id = i
			break
			}
		
		if(i == user_size -1){
			assert(  '未在联系人列表中找到对应的用户')
			}
		}

		if(choice == 'c'){
			return re_contact.data[user_id].mid
		}

		//根据mid获取roomid
		params_list_double = ['mid=' + re_contact.data[user_id].mid]
		testcase_name_double = 'msg_querydouble'
		teststep_name_double = 'querydouble'
		log.info params_list_double
		setCookies(testcase_name_double,teststep_name_double ,u_name)
		setaptcha(u_name,params_list_double)
		
		def re_queryroom = getContentOut(testcase_name_double,teststep_name_double,params_list_double)

		if(choice == 'a'){
			return re_queryroom.data.rid
		}
		else{
			log.info 'send msg'
			params_list_send = ['rid=' + re_queryroom.data.rid,'msg=' + msg_str]
			setCookies('msg_send','send',u_name)
			setaptcha(u_name,params_list_send)
			def re_sendmsg = getContentOut('msg_send','send',params_list_send)
			return re_sendmsg
		}
}


//==================封装公共调用函数==============================

//==================================
//getContentOut 模拟请求
//输入参 testcase_name  testcase在testsuite中的名字
//输入参 teststep_name  主teststep在testcase中的名字
//输入参 request_params list的形式设置准备请求参数 eg： ['oid=1','type=1','message=233333']
//返回值为该请求获取的返回正文content
//==================================
def getContentOut(String testcase_name,String teststep_name,List request_params){
	def testproject = testRunner.testCase.testSuite.project
	def testcase = testproject.testSuites['common_testsuite'].testCases[testcase_name]

	for(i in request_params){
		testcase.testSteps['testdata'].setPropertyValue(i.split('=')[0],i.split('=')[1])
		log.info i.split('=')[0]
		log.info i.split('=')[1]
		}

	def contextMap = new StringToObjectMap(context)
	def runner = testcase.run(contextMap,false)
	//获取测试的请求
	def testcase_stepcount = testcase.getTestStepCount() 

	def response_content = runner.getResults()[testcase_stepcount-1].getResponseContent()
     //还原设置参数
	tearDownInput(testcase_name,request_params)

	//还原cookie设置
	setCookies(testcase_name, teststep_name,'teardown')

     //把测试结果json化后传出去
	def slurper = new JsonSlurper()
	def re = slurper.parseText(response_content)
	
	return re
}

//====================================
//tearDownInput 还原参数设置
//输入参 testcase_name  testcase在testsuite中的名字
//输入参 request_params list的形式设置准备请求参数 eg： ['oid=1','type=1','message=233333']
//返回值 无
//====================================
def tearDownInput(String testcase_name,List request_params){
	for(i in request_params){
		testRunner.testCase.testSuite.project.testSuites['common_testsuite'].testCases[testcase_name].testSteps['testdata'].setPropertyValue(i.split('=')[0],'')
		}
}

//====================================
//setCookies 设置cookies
//输入参 testcase_name  testcase在testsuite中的名字
//输入参 teststep_name  需要写入cookie的请求所在teststep名字
//输入参 userid 固定账号1 user001    账号2user002   高权限账号user_super001  还原操作 teardown
//返回值 无
//====================================
def setCookies(String testcase_name,String teststep_name,String userid){
	//按用户名读取预置的cookie值
	def testproject = testRunner.testCase.testSuite.project
	def cookies_str = testproject.testSuites['common_testsuite'].testCases['cookie'].testSteps['user_cookie'].getPropertyValue(userid)
	def reqheaders = new StringToStringMap()
	reqheaders.put('Cookie',cookies_str)
	testproject.testSuites['common_testsuite'].getTestCaseByName(testcase_name).getTestStepByName(teststep_name).testRequest.setRequestHeaders(reqheaders)	
}


//====================================
//getCaptcha 设置Captcha
//输入参 testcase_name  testcase在testsuite中的名字
//输入参 teststep_name  需要写入cookie的请求所在teststep名字
//输入参 userid 固定账号1 user001    账号2user002   高权限账号user_super001 
//返回值 无
//====================================
//====================================
def setaptcha(String userid,List prams_list){
	//按用户名读取预置的cookie值
	def testproject = testRunner.testCase.testSuite.project
	def cookies_str = testproject.testSuites['common_testsuite'].testCases['cookie'].testSteps['user_cookie'].getPropertyValue(userid)
	
	def values = cookies_str.split(';')
	
	for(i in (0..(values.size()-1))){
		if(values[i].split('=')[0] == '_dfcaptcha') {
			prams_list.add('captcha=' + values[i].split('=')[1])
			return prams_list
		}
	}
	
}
</script></con:config></con:testStep><con:testStep type="groovy" name="archive-mysql获取降级比例" id="b33ba781-3b10-4356-b9a6-98ac2afede7c"><con:settings/><con:config><script>import com.eviware.soapui.support.types.StringToObjectMap
import groovy.json.JsonSlurper
import com.eviware.soapui.impl.wsdl.support.http.HttpClientSupport
import org.apache.http.impl.cookie.BasicClientCookie
import com.eviware.soapui.support.types.StringToStringMap
//配置参数
def params_list =  []
log.info("获取archive/mysql/get级别")

log.info(params_list)
//选择执行的测试套件
def testcase_name = '/x/v2/archive/mysql/ratio/get'
def teststep_name = '/x/v2/archive/mysql/ratio/get'

def re = getContentOut(testcase_name,teststep_name,params_list)

//检验返回码
assert(re.code == 0)
log.info(re)


//==================================
//SendMsg_ByName 根据用户昵称发送消息或者获取聊天roomid
//输入参 username  用户的昵称如“格格”
//输入参 choice 选择项 若为a则返回rid，若为b则直接对用户发送私信, c 返回mid
//输入参 msg_str 私信内容
//u_name 使用的用户在cookies预设的name
//返回值 为rid
//==================================
def SendMsg_ByName(String username,String choice,String msg_str,String u_name){
	params_list_contact = ['page_size=20','page_no=1']
	testcase_name_contact = 'msg_querycontact'
	teststep_name_contact = 'querycontact'
	setCookies(testcase_name_contact,teststep_name_contact ,u_name)
	setaptcha(u_name,params_list_contact)
	
	def re_contact = getContentOut(testcase_name_contact,teststep_name_contact,params_list_contact)
	
	def user_size = re_contact.data.size
	def user_id = 0
	for (i in (0..(user_size - 1))){
		if (re_contact.data[i].uname == username){
			user_id = i
			break
			}
		
		if(i == user_size -1){
			assert(  '未在联系人列表中找到对应的用户')
			}
		}

		if(choice == 'c'){
			return re_contact.data[user_id].mid
		}

		//根据mid获取roomid
		params_list_double = ['mid=' + re_contact.data[user_id].mid]
		testcase_name_double = 'msg_querydouble'
		teststep_name_double = 'querydouble'
		log.info params_list_double
		setCookies(testcase_name_double,teststep_name_double ,u_name)
		setaptcha(u_name,params_list_double)
		
		def re_queryroom = getContentOut(testcase_name_double,teststep_name_double,params_list_double)

		if(choice == 'a'){
			return re_queryroom.data.rid
		}
		else{
			log.info 'send msg'
			params_list_send = ['rid=' + re_queryroom.data.rid,'msg=' + msg_str]
			setCookies('msg_send','send',u_name)
			setaptcha(u_name,params_list_send)
			def re_sendmsg = getContentOut('msg_send','send',params_list_send)
			return re_sendmsg
		}
}


//==================封装公共调用函数==============================

//==================================
//getContentOut 模拟请求
//输入参 testcase_name  testcase在testsuite中的名字
//输入参 teststep_name  主teststep在testcase中的名字
//输入参 request_params list的形式设置准备请求参数 eg： ['oid=1','type=1','message=233333']
//返回值为该请求获取的返回正文content
//==================================
def getContentOut(String testcase_name,String teststep_name,List request_params){
	def testproject = testRunner.testCase.testSuite.project
	def testcase = testproject.testSuites['common_testsuite'].testCases[testcase_name]

	for(i in request_params){
		testcase.testSteps['testdata'].setPropertyValue(i.split('=')[0],i.split('=')[1])
		log.info i.split('=')[0]
		log.info i.split('=')[1]
		}

	def contextMap = new StringToObjectMap(context)
	def runner = testcase.run(contextMap,false)
	//获取测试的请求
	def testcase_stepcount = testcase.getTestStepCount() 

	def response_content = runner.getResults()[testcase_stepcount-1].getResponseContent()
     //还原设置参数
	tearDownInput(testcase_name,request_params)

	//还原cookie设置
	setCookies(testcase_name, teststep_name,'teardown')

     //把测试结果json化后传出去
	def slurper = new JsonSlurper()
	def re = slurper.parseText(response_content)
	
	return re
}

//====================================
//tearDownInput 还原参数设置
//输入参 testcase_name  testcase在testsuite中的名字
//输入参 request_params list的形式设置准备请求参数 eg： ['oid=1','type=1','message=233333']
//返回值 无
//====================================
def tearDownInput(String testcase_name,List request_params){
	for(i in request_params){
		testRunner.testCase.testSuite.project.testSuites['common_testsuite'].testCases[testcase_name].testSteps['testdata'].setPropertyValue(i.split('=')[0],'')
		}
}

//====================================
//setCookies 设置cookies
//输入参 testcase_name  testcase在testsuite中的名字
//输入参 teststep_name  需要写入cookie的请求所在teststep名字
//输入参 userid 固定账号1 user001    账号2user002   高权限账号user_super001  还原操作 teardown
//返回值 无
//====================================
def setCookies(String testcase_name,String teststep_name,String userid){
	//按用户名读取预置的cookie值
	def testproject = testRunner.testCase.testSuite.project
	def cookies_str = testproject.testSuites['common_testsuite'].testCases['cookie'].testSteps['user_cookie'].getPropertyValue(userid)
	def reqheaders = new StringToStringMap()
	reqheaders.put('Cookie',cookies_str)
	testproject.testSuites['common_testsuite'].getTestCaseByName(testcase_name).getTestStepByName(teststep_name).testRequest.setRequestHeaders(reqheaders)	
}


//====================================
//getCaptcha 设置Captcha
//输入参 testcase_name  testcase在testsuite中的名字
//输入参 teststep_name  需要写入cookie的请求所在teststep名字
//输入参 userid 固定账号1 user001    账号2user002   高权限账号user_super001 
//返回值 无
//====================================
//====================================
def setaptcha(String userid,List prams_list){
	//按用户名读取预置的cookie值
	def testproject = testRunner.testCase.testSuite.project
	def cookies_str = testproject.testSuites['common_testsuite'].testCases['cookie'].testSteps['user_cookie'].getPropertyValue(userid)
	
	def values = cookies_str.split(';')
	
	for(i in (0..(values.size()-1))){
		if(values[i].split('=')[0] == '_dfcaptcha') {
			prams_list.add('captcha=' + values[i].split('=')[1])
			return prams_list
		}
	}
	
}
</script></con:config></con:testStep><con:testStep type="groovy" name="archive_hbase设置降级比例" id="121ef1f5-0a56-4618-a955-ac42729beef2"><con:settings/><con:config><script>import com.eviware.soapui.support.types.StringToObjectMap
import groovy.json.JsonSlurper
import com.eviware.soapui.impl.wsdl.support.http.HttpClientSupport
import org.apache.http.impl.cookie.BasicClientCookie
import com.eviware.soapui.support.types.StringToStringMap
//配置参数
def params_list =  ['seed=0']
log.info("设置archive/hbase/set降级")

log.info(params_list)
//选择执行的测试套件
def testcase_name = '/x/v2/archive/hbase/ratio'
def teststep_name = '/x/v2/archive/hbase/ratio'

def re = getContentOut(testcase_name,teststep_name,params_list)

//检验返回码
assert(re.code == 0)
log.info(re)


//==================================
//SendMsg_ByName 根据用户昵称发送消息或者获取聊天roomid
//输入参 username  用户的昵称如“格格”
//输入参 choice 选择项 若为a则返回rid，若为b则直接对用户发送私信, c 返回mid
//输入参 msg_str 私信内容
//u_name 使用的用户在cookies预设的name
//返回值 为rid
//==================================
def SendMsg_ByName(String username,String choice,String msg_str,String u_name){
	params_list_contact = ['page_size=20','page_no=1']
	testcase_name_contact = 'msg_querycontact'
	teststep_name_contact = 'querycontact'
	setCookies(testcase_name_contact,teststep_name_contact ,u_name)
	setaptcha(u_name,params_list_contact)
	
	def re_contact = getContentOut(testcase_name_contact,teststep_name_contact,params_list_contact)
	
	def user_size = re_contact.data.size
	def user_id = 0
	for (i in (0..(user_size - 1))){
		if (re_contact.data[i].uname == username){
			user_id = i
			break
			}
		
		if(i == user_size -1){
			assert(  '未在联系人列表中找到对应的用户')
			}
		}

		if(choice == 'c'){
			return re_contact.data[user_id].mid
		}

		//根据mid获取roomid
		params_list_double = ['mid=' + re_contact.data[user_id].mid]
		testcase_name_double = 'msg_querydouble'
		teststep_name_double = 'querydouble'
		log.info params_list_double
		setCookies(testcase_name_double,teststep_name_double ,u_name)
		setaptcha(u_name,params_list_double)
		
		def re_queryroom = getContentOut(testcase_name_double,teststep_name_double,params_list_double)

		if(choice == 'a'){
			return re_queryroom.data.rid
		}
		else{
			log.info 'send msg'
			params_list_send = ['rid=' + re_queryroom.data.rid,'msg=' + msg_str]
			setCookies('msg_send','send',u_name)
			setaptcha(u_name,params_list_send)
			def re_sendmsg = getContentOut('msg_send','send',params_list_send)
			return re_sendmsg
		}
}


//==================封装公共调用函数==============================

//==================================
//getContentOut 模拟请求
//输入参 testcase_name  testcase在testsuite中的名字
//输入参 teststep_name  主teststep在testcase中的名字
//输入参 request_params list的形式设置准备请求参数 eg： ['oid=1','type=1','message=233333']
//返回值为该请求获取的返回正文content
//==================================
def getContentOut(String testcase_name,String teststep_name,List request_params){
	def testproject = testRunner.testCase.testSuite.project
	def testcase = testproject.testSuites['common_testsuite'].testCases[testcase_name]

	for(i in request_params){
		testcase.testSteps['testdata'].setPropertyValue(i.split('=')[0],i.split('=')[1])
		log.info i.split('=')[0]
		log.info i.split('=')[1]
		}

	def contextMap = new StringToObjectMap(context)
	def runner = testcase.run(contextMap,false)
	//获取测试的请求
	def testcase_stepcount = testcase.getTestStepCount() 

	def response_content = runner.getResults()[testcase_stepcount-1].getResponseContent()
     //还原设置参数
	tearDownInput(testcase_name,request_params)

	//还原cookie设置
	setCookies(testcase_name, teststep_name,'teardown')

     //把测试结果json化后传出去
	def slurper = new JsonSlurper()
	def re = slurper.parseText(response_content)
	
	return re
}

//====================================
//tearDownInput 还原参数设置
//输入参 testcase_name  testcase在testsuite中的名字
//输入参 request_params list的形式设置准备请求参数 eg： ['oid=1','type=1','message=233333']
//返回值 无
//====================================
def tearDownInput(String testcase_name,List request_params){
	for(i in request_params){
		testRunner.testCase.testSuite.project.testSuites['common_testsuite'].testCases[testcase_name].testSteps['testdata'].setPropertyValue(i.split('=')[0],'')
		}
}

//====================================
//setCookies 设置cookies
//输入参 testcase_name  testcase在testsuite中的名字
//输入参 teststep_name  需要写入cookie的请求所在teststep名字
//输入参 userid 固定账号1 user001    账号2user002   高权限账号user_super001  还原操作 teardown
//返回值 无
//====================================
def setCookies(String testcase_name,String teststep_name,String userid){
	//按用户名读取预置的cookie值
	def testproject = testRunner.testCase.testSuite.project
	def cookies_str = testproject.testSuites['common_testsuite'].testCases['cookie'].testSteps['user_cookie'].getPropertyValue(userid)
	def reqheaders = new StringToStringMap()
	reqheaders.put('Cookie',cookies_str)
	testproject.testSuites['common_testsuite'].getTestCaseByName(testcase_name).getTestStepByName(teststep_name).testRequest.setRequestHeaders(reqheaders)	
}


//====================================
//getCaptcha 设置Captcha
//输入参 testcase_name  testcase在testsuite中的名字
//输入参 teststep_name  需要写入cookie的请求所在teststep名字
//输入参 userid 固定账号1 user001    账号2user002   高权限账号user_super001 
//返回值 无
//====================================
//====================================
def setaptcha(String userid,List prams_list){
	//按用户名读取预置的cookie值
	def testproject = testRunner.testCase.testSuite.project
	def cookies_str = testproject.testSuites['common_testsuite'].testCases['cookie'].testSteps['user_cookie'].getPropertyValue(userid)
	
	def values = cookies_str.split(';')
	
	for(i in (0..(values.size()-1))){
		if(values[i].split('=')[0] == '_dfcaptcha') {
			prams_list.add('captcha=' + values[i].split('=')[1])
			return prams_list
		}
	}
	
}
</script></con:config></con:testStep><con:testStep type="groovy" name="account-memcache设置降级比例" id="9c82e430-846e-48f2-b7f3-016502e798a9"><con:settings/><con:config><script>import com.eviware.soapui.support.types.StringToObjectMap
import groovy.json.JsonSlurper
import com.eviware.soapui.impl.wsdl.support.http.HttpClientSupport
import org.apache.http.impl.cookie.BasicClientCookie
import com.eviware.soapui.support.types.StringToStringMap
//配置参数
def params_list =  ['seed=60']
log.info("设置account/cache/set降级")

log.info(params_list)
//选择执行的测试套件
def testcase_name = '/x/account/memcache/ratio'
def teststep_name = '/x/account/memcache/ratio'

def re = getContentOut(testcase_name,teststep_name,params_list)

//检验返回码
assert(re.code == 0)
log.info(re)

def getContentOut(String testcase_name,String teststep_name,List request_params){
	def testproject = testRunner.testCase.testSuite.project
	def testcase = testproject.testSuites['common_testsuite'].testCases[testcase_name]

	for(i in request_params){
		testcase.testSteps['testdata'].setPropertyValue(i.split('=')[0],i.split('=')[1])
		log.info i.split('=')[0]
		log.info i.split('=')[1]
		}

	def contextMap = new StringToObjectMap(context)
	def runner = testcase.run(contextMap,false)
	//获取测试的请求
	def testcase_stepcount = testcase.getTestStepCount() 

	def response_content = runner.getResults()[testcase_stepcount-1].getResponseContent()
     //还原设置参数
	tearDownInput(testcase_name,request_params)

	//还原cookie设置
	setCookies(testcase_name, teststep_name,'teardown')

     //把测试结果json化后传出去
	def slurper = new JsonSlurper()
	def re = slurper.parseText(response_content)
	
	return re
}

//====================================
//tearDownInput 还原参数设置
//输入参 testcase_name  testcase在testsuite中的名字
//输入参 request_params list的形式设置准备请求参数 eg： ['oid=1','type=1','message=233333']
//返回值 无
//====================================
def tearDownInput(String testcase_name,List request_params){
	for(i in request_params){
		testRunner.testCase.testSuite.project.testSuites['common_testsuite'].testCases[testcase_name].testSteps['testdata'].setPropertyValue(i.split('=')[0],'')
		}
}

//====================================
//setCookies 设置cookies
//输入参 testcase_name  testcase在testsuite中的名字
//输入参 teststep_name  需要写入cookie的请求所在teststep名字
//输入参 userid 固定账号1 user001    账号2user002   高权限账号user_super001  还原操作 teardown
//返回值 无
//====================================
def setCookies(String testcase_name,String teststep_name,String userid){
	//按用户名读取预置的cookie值
	def testproject = testRunner.testCase.testSuite.project
	def cookies_str = testproject.testSuites['common_testsuite'].testCases['cookie'].testSteps['user_cookie'].getPropertyValue(userid)
	def reqheaders = new StringToStringMap()
	reqheaders.put('Cookie',cookies_str)
	testproject.testSuites['common_testsuite'].getTestCaseByName(testcase_name).getTestStepByName(teststep_name).testRequest.setRequestHeaders(reqheaders)	
}


//====================================
//getCaptcha 设置Captcha
//输入参 testcase_name  testcase在testsuite中的名字
//输入参 teststep_name  需要写入cookie的请求所在teststep名字
//输入参 userid 固定账号1 user001    账号2user002   高权限账号user_super001 
//返回值 无
//====================================
//====================================
def setaptcha(String userid,List prams_list){
	//按用户名读取预置的cookie值
	def testproject = testRunner.testCase.testSuite.project
	def cookies_str = testproject.testSuites['common_testsuite'].testCases['cookie'].testSteps['user_cookie'].getPropertyValue(userid)
	
	def values = cookies_str.split(';')
	
	for(i in (0..(values.size()-1))){
		if(values[i].split('=')[0] == '_dfcaptcha') {
			prams_list.add('captcha=' + values[i].split('=')[1])
			return prams_list
		}
	}
	
}
</script></con:config></con:testStep><con:testStep type="groovy" name="account-memcache获取降级比例" id="3f61486a-cbed-4206-b7b7-efaf22b5fc0a"><con:settings/><con:config><script>import com.eviware.soapui.support.types.StringToObjectMap
import groovy.json.JsonSlurper
import com.eviware.soapui.impl.wsdl.support.http.HttpClientSupport
import org.apache.http.impl.cookie.BasicClientCookie
import com.eviware.soapui.support.types.StringToStringMap
//配置参数
def params_list =  []
log.info('获取account/cache/get级别')

log.info(params_list)
//选择执行的测试套件
def testcase_name = '/x/account/memcache/ratio/get'
def teststep_name = '/x/account/memcache/ratio/get'

def re = getContentOut(testcase_name,teststep_name,params_list)

//检验返回码
assert(re.code == 0)
log.info(re)

def getContentOut(String testcase_name,String teststep_name,List request_params){
	def testproject = testRunner.testCase.testSuite.project
	def testcase = testproject.testSuites['common_testsuite'].testCases[testcase_name]

	for(i in request_params){
		testcase.testSteps['testdata'].setPropertyValue(i.split('=')[0],i.split('=')[1])
		}

	def contextMap = new StringToObjectMap(context)
	def runner = testcase.run(contextMap,false)
	//获取测试的请求
	def testcase_stepcount = testcase.getTestStepCount() 

	def response_content = runner.getResults()[testcase_stepcount-1].getResponseContent()
     //还原设置参数
	tearDownInput(testcase_name,request_params)

	//还原cookie设置
	setCookies(testcase_name, teststep_name,'teardown')

     //把测试结果json化后传出去
	def slurper = new JsonSlurper()
	def re = slurper.parseText(response_content)
	
	return re
}

//====================================
//tearDownInput 还原参数设置
//输入参 testcase_name  testcase在testsuite中的名字
//输入参 request_params list的形式设置准备请求参数 eg： ['oid=1','type=1','message=233333']
//返回值 无
//====================================
def tearDownInput(String testcase_name,List request_params){
	for(i in request_params){
		testRunner.testCase.testSuite.project.testSuites['common_testsuite'].testCases[testcase_name].testSteps['testdata'].setPropertyValue(i.split('=')[0],'')
		}
}

//====================================
//setCookies 设置cookies
//输入参 testcase_name  testcase在testsuite中的名字
//输入参 teststep_name  需要写入cookie的请求所在teststep名字
//输入参 userid 固定账号1 user001    账号2user002   高权限账号user_super001  还原操作 teardown
//返回值 无
//====================================
def setCookies(String testcase_name,String teststep_name,String userid){
	//按用户名读取预置的cookie值
	def testproject = testRunner.testCase.testSuite.project
	def cookies_str = testproject.testSuites['common_testsuite'].testCases['cookie'].testSteps['user_cookie'].getPropertyValue(userid)
	def reqheaders = new StringToStringMap()
	reqheaders.put('Cookie',cookies_str)
	testproject.testSuites['common_testsuite'].getTestCaseByName(testcase_name).getTestStepByName(teststep_name).testRequest.setRequestHeaders(reqheaders)	
}


//====================================
//getCaptcha 设置Captcha
//输入参 testcase_name  testcase在testsuite中的名字
//输入参 teststep_name  需要写入cookie的请求所在teststep名字
//输入参 userid 固定账号1 user001    账号2user002   高权限账号user_super001 
//返回值 无
//====================================
//====================================
def setaptcha(String userid,List prams_list){
	//按用户名读取预置的cookie值
	def testproject = testRunner.testCase.testSuite.project
	def cookies_str = testproject.testSuites['common_testsuite'].testCases['cookie'].testSteps['user_cookie'].getPropertyValue(userid)
	
	def values = cookies_str.split(';')
	
	for(i in (0..(values.size()-1))){
		if(values[i].split('=')[0] == '_dfcaptcha') {
			prams_list.add('captcha=' + values[i].split('=')[1])
			return prams_list
		}
	}
	
}
</script></con:config></con:testStep><con:testStep type="groovy" name="accountapi设置降级比例" id="c3d2d12b-5980-4f1f-8021-b846f1e24757"><con:settings/><con:config><script> import com.eviware.soapui.support.types.StringToObjectMap
import groovy.json.JsonSlurper
import com.eviware.soapui.impl.wsdl.support.http.HttpClientSupport
import org.apache.http.impl.cookie.BasicClientCookie
import com.eviware.soapui.support.types.StringToStringMap
//配置参数
def params_list =  ['seed=0']
log.info('设置account/api/set降级')

log.info(params_list)
//选择执行的测试套件
def testcase_name = '/x/account/api/ratio'
def teststep_name = '/x/account/api/ratio'

def re = getContentOut(testcase_name,teststep_name,params_list)
//检验返回码
assert(re.code == 0)
log.info(re)

def getContentOut(String testcase_name,String teststep_name,List request_params){
	def testproject = testRunner.testCase.testSuite.project
	def testcase = testproject.testSuites['common_testsuite'].testCases[testcase_name]

	for(i in request_params){
		testcase.testSteps['testdata'].setPropertyValue(i.split('=')[0],i.split('=')[1])
		}

	def contextMap = new StringToObjectMap(context)
	def runner = testcase.run(contextMap,false)
	//获取测试的请求
	def testcase_stepcount = testcase.getTestStepCount() 

	def response_content = runner.getResults()[testcase_stepcount-1].getResponseContent()
     //还原设置参数
	tearDownInput(testcase_name,request_params)

	//还原cookie设置
	setCookies(testcase_name, teststep_name,'teardown')

     //把测试结果json化后传出去
	def slurper = new JsonSlurper()
	def re = slurper.parseText(response_content)
	
	return re
}

//====================================
//tearDownInput 还原参数设置
//输入参 testcase_name  testcase在testsuite中的名字
//输入参 request_params list的形式设置准备请求参数 eg： ['oid=1','type=1','message=233333']
//返回值 无
//====================================
def tearDownInput(String testcase_name,List request_params){
	for(i in request_params){
		testRunner.testCase.testSuite.project.testSuites['common_testsuite'].testCases[testcase_name].testSteps['testdata'].setPropertyValue(i.split('=')[0],'')
		}
}

//====================================
//setCookies 设置cookies
//输入参 testcase_name  testcase在testsuite中的名字
//输入参 teststep_name  需要写入cookie的请求所在teststep名字
//输入参 userid 固定账号1 user001    账号2user002   高权限账号user_super001  还原操作 teardown
//返回值 无
//====================================
def setCookies(String testcase_name,String teststep_name,String userid){
	//按用户名读取预置的cookie值
	def testproject = testRunner.testCase.testSuite.project
	def cookies_str = testproject.testSuites['common_testsuite'].testCases['cookie'].testSteps['user_cookie'].getPropertyValue(userid)
	def reqheaders = new StringToStringMap()
	reqheaders.put('Cookie',cookies_str)
	testproject.testSuites['common_testsuite'].getTestCaseByName(testcase_name).getTestStepByName(teststep_name).testRequest.setRequestHeaders(reqheaders)	
}


//====================================
//getCaptcha 设置Captcha
//输入参 testcase_name  testcase在testsuite中的名字
//输入参 teststep_name  需要写入cookie的请求所在teststep名字
//输入参 userid 固定账号1 user001    账号2user002   高权限账号user_super001 
//返回值 无
//====================================
//====================================
def setaptcha(String userid,List prams_list){
	//按用户名读取预置的cookie值
	def testproject = testRunner.testCase.testSuite.project
	def cookies_str = testproject.testSuites['common_testsuite'].testCases['cookie'].testSteps['user_cookie'].getPropertyValue(userid)
	
	def values = cookies_str.split(';')
	
	for(i in (0..(values.size()-1))){
		if(values[i].split('=')[0] == '_dfcaptcha') {
			prams_list.add('captcha=' + values[i].split('=')[1])
			return prams_list
		}
	}
	
}
</script></con:config></con:testStep><con:testStep type="groovy" name="accountapi获取降级比例" id="ede56ceb-ef8d-47c3-9307-0e33ae5eca65"><con:settings/><con:config><script>import com.eviware.soapui.support.types.StringToObjectMap
import groovy.json.JsonSlurper
import com.eviware.soapui.impl.wsdl.support.http.HttpClientSupport
import org.apache.http.impl.cookie.BasicClientCookie
import com.eviware.soapui.support.types.StringToStringMap
//配置参数
def params_list =  []
log.info("获取account/api/get级别")

log.info(params_list)
//选择执行的测试套件
def testcase_name = '/x/account/api/ratio/get'
def teststep_name = '/x/account/api/ratio/get'

def re = getContentOut(testcase_name,teststep_name,params_list)

//检验返回码
assert(re.code == 0)
log.info(re)

def getContentOut(String testcase_name,String teststep_name,List request_params){
	def testproject = testRunner.testCase.testSuite.project
	def testcase = testproject.testSuites['common_testsuite'].testCases[testcase_name]

	for(i in request_params){
		testcase.testSteps['testdata'].setPropertyValue(i.split('=')[0],i.split('=')[1])
		}

	def contextMap = new StringToObjectMap(context)
	def runner = testcase.run(contextMap,false)
	//获取测试的请求
	def testcase_stepcount = testcase.getTestStepCount() 

	def response_content = runner.getResults()[testcase_stepcount-1].getResponseContent()
     //还原设置参数
	tearDownInput(testcase_name,request_params)

	//还原cookie设置
	setCookies(testcase_name, teststep_name,'teardown')

     //把测试结果json化后传出去
	def slurper = new JsonSlurper()
	def re = slurper.parseText(response_content)
	
	return re
}

//====================================
//tearDownInput 还原参数设置
//输入参 testcase_name  testcase在testsuite中的名字
//输入参 request_params list的形式设置准备请求参数 eg： ['oid=1','type=1','message=233333']
//返回值 无
//====================================
def tearDownInput(String testcase_name,List request_params){
	for(i in request_params){
		testRunner.testCase.testSuite.project.testSuites['common_testsuite'].testCases[testcase_name].testSteps['testdata'].setPropertyValue(i.split('=')[0],'')
		}
}

//====================================
//setCookies 设置cookies
//输入参 testcase_name  testcase在testsuite中的名字
//输入参 teststep_name  需要写入cookie的请求所在teststep名字
//输入参 userid 固定账号1 user001    账号2user002   高权限账号user_super001  还原操作 teardown
//返回值 无
//====================================
def setCookies(String testcase_name,String teststep_name,String userid){
	//按用户名读取预置的cookie值
	def testproject = testRunner.testCase.testSuite.project
	def cookies_str = testproject.testSuites['common_testsuite'].testCases['cookie'].testSteps['user_cookie'].getPropertyValue(userid)
	def reqheaders = new StringToStringMap()
	reqheaders.put('Cookie',cookies_str)
	testproject.testSuites['common_testsuite'].getTestCaseByName(testcase_name).getTestStepByName(teststep_name).testRequest.setRequestHeaders(reqheaders)	
}


//====================================
//getCaptcha 设置Captcha
//输入参 testcase_name  testcase在testsuite中的名字
//输入参 teststep_name  需要写入cookie的请求所在teststep名字
//输入参 userid 固定账号1 user001    账号2user002   高权限账号user_super001 
//返回值 无
//====================================
//====================================
def setaptcha(String userid,List prams_list){
	//按用户名读取预置的cookie值
	def testproject = testRunner.testCase.testSuite.project
	def cookies_str = testproject.testSuites['common_testsuite'].testCases['cookie'].testSteps['user_cookie'].getPropertyValue(userid)
	
	def values = cookies_str.split(';')
	
	for(i in (0..(values.size()-1))){
		if(values[i].split('=')[0] == '_dfcaptcha') {
			prams_list.add('captcha=' + values[i].split('=')[1])
			return prams_list
		}
	}
	
}
</script></con:config></con:testStep><con:testStep type="groovy" name="accountredis设置降级比例" id="f0cbabdb-2e3a-4a09-acd5-05f75a30a7d8"><con:settings/><con:config><script> import com.eviware.soapui.support.types.StringToObjectMap
import groovy.json.JsonSlurper
import com.eviware.soapui.impl.wsdl.support.http.HttpClientSupport
import org.apache.http.impl.cookie.BasicClientCookie
import com.eviware.soapui.support.types.StringToStringMap
//配置参数
def params_list =  ['seed=0']
log.info('设置account/api/set降级')

log.info(params_list)
//选择执行的测试套件
def testcase_name = '/x/account/redis/ratio'
def teststep_name = '/x/account/redis/ratio'

def re = getContentOut(testcase_name,teststep_name,params_list)
//检验返回码
assert(re.code == 0)
log.info(re)

def getContentOut(String testcase_name,String teststep_name,List request_params){
	def testproject = testRunner.testCase.testSuite.project
	def testcase = testproject.testSuites['common_testsuite'].testCases[testcase_name]

	for(i in request_params){
		testcase.testSteps['testdata'].setPropertyValue(i.split('=')[0],i.split('=')[1])
		}

	def contextMap = new StringToObjectMap(context)
	def runner = testcase.run(contextMap,false)
	//获取测试的请求
	def testcase_stepcount = testcase.getTestStepCount() 

	def response_content = runner.getResults()[testcase_stepcount-1].getResponseContent()
     //还原设置参数
	tearDownInput(testcase_name,request_params)

	//还原cookie设置
	setCookies(testcase_name, teststep_name,'teardown')

     //把测试结果json化后传出去
	def slurper = new JsonSlurper()
	def re = slurper.parseText(response_content)
	
	return re
}

//====================================
//tearDownInput 还原参数设置
//输入参 testcase_name  testcase在testsuite中的名字
//输入参 request_params list的形式设置准备请求参数 eg： ['oid=1','type=1','message=233333']
//返回值 无
//====================================
def tearDownInput(String testcase_name,List request_params){
	for(i in request_params){
		testRunner.testCase.testSuite.project.testSuites['common_testsuite'].testCases[testcase_name].testSteps['testdata'].setPropertyValue(i.split('=')[0],'')
		}
}

//====================================
//setCookies 设置cookies
//输入参 testcase_name  testcase在testsuite中的名字
//输入参 teststep_name  需要写入cookie的请求所在teststep名字
//输入参 userid 固定账号1 user001    账号2user002   高权限账号user_super001  还原操作 teardown
//返回值 无
//====================================
def setCookies(String testcase_name,String teststep_name,String userid){
	//按用户名读取预置的cookie值
	def testproject = testRunner.testCase.testSuite.project
	def cookies_str = testproject.testSuites['common_testsuite'].testCases['cookie'].testSteps['user_cookie'].getPropertyValue(userid)
	def reqheaders = new StringToStringMap()
	reqheaders.put('Cookie',cookies_str)
	testproject.testSuites['common_testsuite'].getTestCaseByName(testcase_name).getTestStepByName(teststep_name).testRequest.setRequestHeaders(reqheaders)	
}


//====================================
//getCaptcha 设置Captcha
//输入参 testcase_name  testcase在testsuite中的名字
//输入参 teststep_name  需要写入cookie的请求所在teststep名字
//输入参 userid 固定账号1 user001    账号2user002   高权限账号user_super001 
//返回值 无
//====================================
//====================================
def setaptcha(String userid,List prams_list){
	//按用户名读取预置的cookie值
	def testproject = testRunner.testCase.testSuite.project
	def cookies_str = testproject.testSuites['common_testsuite'].testCases['cookie'].testSteps['user_cookie'].getPropertyValue(userid)
	
	def values = cookies_str.split(';')
	
	for(i in (0..(values.size()-1))){
		if(values[i].split('=')[0] == '_dfcaptcha') {
			prams_list.add('captcha=' + values[i].split('=')[1])
			return prams_list
		}
	}
	
}
</script></con:config></con:testStep><con:testStep type="groovy" name="accountredis获取降级比例" id="643d156a-8a68-4d15-b966-571df35833bc"><con:settings/><con:config><script> import com.eviware.soapui.support.types.StringToObjectMap
import groovy.json.JsonSlurper
import com.eviware.soapui.impl.wsdl.support.http.HttpClientSupport
import org.apache.http.impl.cookie.BasicClientCookie
import com.eviware.soapui.support.types.StringToStringMap
//配置参数
def params_list =  ['seed=0']
log.info('设置account/api/set降级')

log.info(params_list)
//选择执行的测试套件
def testcase_name = '/x/account/redis/ratio/get'
def teststep_name = '/x/account/redis/ratio/get'

def re = getContentOut(testcase_name,teststep_name,params_list)
//检验返回码
assert(re.code == 0)
log.info(re)

def getContentOut(String testcase_name,String teststep_name,List request_params){
	def testproject = testRunner.testCase.testSuite.project
	def testcase = testproject.testSuites['common_testsuite'].testCases[testcase_name]

	for(i in request_params){
		testcase.testSteps['testdata'].setPropertyValue(i.split('=')[0],i.split('=')[1])
		}

	def contextMap = new StringToObjectMap(context)
	def runner = testcase.run(contextMap,false)
	//获取测试的请求
	def testcase_stepcount = testcase.getTestStepCount() 

	def response_content = runner.getResults()[testcase_stepcount-1].getResponseContent()
     //还原设置参数
	tearDownInput(testcase_name,request_params)

	//还原cookie设置
	setCookies(testcase_name, teststep_name,'teardown')

     //把测试结果json化后传出去
	def slurper = new JsonSlurper()
	def re = slurper.parseText(response_content)
	
	return re
}

//====================================
//tearDownInput 还原参数设置
//输入参 testcase_name  testcase在testsuite中的名字
//输入参 request_params list的形式设置准备请求参数 eg： ['oid=1','type=1','message=233333']
//返回值 无
//====================================
def tearDownInput(String testcase_name,List request_params){
	for(i in request_params){
		testRunner.testCase.testSuite.project.testSuites['common_testsuite'].testCases[testcase_name].testSteps['testdata'].setPropertyValue(i.split('=')[0],'')
		}
}

//====================================
//setCookies 设置cookies
//输入参 testcase_name  testcase在testsuite中的名字
//输入参 teststep_name  需要写入cookie的请求所在teststep名字
//输入参 userid 固定账号1 user001    账号2user002   高权限账号user_super001  还原操作 teardown
//返回值 无
//====================================
def setCookies(String testcase_name,String teststep_name,String userid){
	//按用户名读取预置的cookie值
	def testproject = testRunner.testCase.testSuite.project
	def cookies_str = testproject.testSuites['common_testsuite'].testCases['cookie'].testSteps['user_cookie'].getPropertyValue(userid)
	def reqheaders = new StringToStringMap()
	reqheaders.put('Cookie',cookies_str)
	testproject.testSuites['common_testsuite'].getTestCaseByName(testcase_name).getTestStepByName(teststep_name).testRequest.setRequestHeaders(reqheaders)	
}


//====================================
//getCaptcha 设置Captcha
//输入参 testcase_name  testcase在testsuite中的名字
//输入参 teststep_name  需要写入cookie的请求所在teststep名字
//输入参 userid 固定账号1 user001    账号2user002   高权限账号user_super001 
//返回值 无
//====================================
//====================================
def setaptcha(String userid,List prams_list){
	//按用户名读取预置的cookie值
	def testproject = testRunner.testCase.testSuite.project
	def cookies_str = testproject.testSuites['common_testsuite'].testCases['cookie'].testSteps['user_cookie'].getPropertyValue(userid)
	
	def values = cookies_str.split(';')
	
	for(i in (0..(values.size()-1))){
		if(values[i].split('=')[0] == '_dfcaptcha') {
			prams_list.add('captcha=' + values[i].split('=')[1])
			return prams_list
		}
	}
	
}
</script></con:config></con:testStep><con:testStep type="groovy" name="获取单个稿件信息" id="d039e22a-73fc-42cf-9dc7-b5a669b82d76"><con:settings/><con:config><script>import com.eviware.soapui.support.types.StringToObjectMap
import groovy.json.JsonSlurper
import com.eviware.soapui.impl.wsdl.support.http.HttpClientSupport
import org.apache.http.impl.cookie.BasicClientCookie
import com.eviware.soapui.support.types.StringToStringMap
//配置参数
def params_list =  ['aid=2880590']
log.info("获取单个稿件信息")

log.info(params_list)
//选择执行的测试套件
def testcase_name = '/x/v2/archive'
def teststep_name = '/x/v2/archive'

def re = getContentOut(testcase_name,teststep_name,params_list)

//检验返回码
//assert(re.code == 0)
log.info(re)

def getContentOut(String testcase_name,String teststep_name,List request_params){
	def testproject = testRunner.testCase.testSuite.project
	def testcase = testproject.testSuites['common_testsuite'].testCases[testcase_name]

	for(i in request_params){
		testcase.testSteps['testdata'].setPropertyValue(i.split('=')[0],i.split('=')[1])
		log.info i.split('=')[0]
		log.info i.split('=')[1]
		}

	def contextMap = new StringToObjectMap(context)
	def runner = testcase.run(contextMap,false)
	//获取测试的请求
	def testcase_stepcount = testcase.getTestStepCount() 

	def response_content = runner.getResults()[testcase_stepcount-1].getResponseContent()
//	log.info response_content
     //还原设置参数
	tearDownInput(testcase_name,request_params)

	//还原cookie设置
	setCookies(testcase_name, teststep_name,'teardown')

     //把测试结果json化后传出去
	def slurper = new JsonSlurper()
	def re = slurper.parseText(response_content)
	
	return re
}


def tearDownInput(String testcase_name,List request_params){
	for(i in request_params){
		testRunner.testCase.testSuite.project.testSuites['common_testsuite'].testCases[testcase_name].testSteps['testdata'].setPropertyValue(i.split('=')[0],'')
		}
}


def setCookies(String testcase_name,String teststep_name,String userid){
	//按用户名读取预置的cookie值
	def testproject = testRunner.testCase.testSuite.project
	def cookies_str = testproject.testSuites['common_testsuite'].testCases['cookie'].testSteps['user_cookie'].getPropertyValue(userid)
	def reqheaders = new StringToStringMap()
	reqheaders.put('Cookie',cookies_str)
	testproject.testSuites['common_testsuite'].getTestCaseByName(testcase_name).getTestStepByName(teststep_name).testRequest.setRequestHeaders(reqheaders)	
}


def setaptcha(String userid,List prams_list){
	//按用户名读取预置的cookie值
	def testproject = testRunner.testCase.testSuite.project
	def cookies_str = testproject.testSuites['common_testsuite'].testCases['cookie'].testSteps['user_cookie'].getPropertyValue(userid)
	
	def values = cookies_str.split(';')
	
	for(i in (0..(values.size()-1))){
		if(values[i].split('=')[0] == '_dfcaptcha') {
			prams_list.add('captcha=' + values[i].split('=')[1])
			return prams_list
		}
	}
	
}
</script></con:config></con:testStep><con:testStep type="groovy" name="获取多个稿件信息" id="b19c3bdd-7965-415d-b9b8-ef34dee8bbc3"><con:settings/><con:config><script>import com.eviware.soapui.support.types.StringToObjectMap
import groovy.json.JsonSlurper
import com.eviware.soapui.impl.wsdl.support.http.HttpClientSupport
import org.apache.http.impl.cookie.BasicClientCookie
import com.eviware.soapui.support.types.StringToStringMap
//配置参数
def params_list =  ['aids=2880590,2880588,2880551']
log.info("获取多个稿件信息")

log.info(params_list)
//选择执行的测试套件
def testcase_name = '/x/v2/archive/archives'
def teststep_name = '/x/v2/archive/archives'

def re = getContentOut(testcase_name,teststep_name,params_list)

//检验返回码
//assert(re.code == 0)
log.info(re)

//==================================
//SendMsg_ByName 根据用户昵称发送消息或者获取聊天roomid
//输入参 username  用户的昵称如“格格”
//输入参 choice 选择项 若为a则返回rid，若为b则直接对用户发送私信, c 返回mid
//输入参 msg_str 私信内容
//u_name 使用的用户在cookies预设的name
//返回值 为rid
//==================================
def SendMsg_ByName(String username,String choice,String msg_str,String u_name){
	params_list_contact = ['page_size=20','page_no=1']
	testcase_name_contact = 'msg_querycontact'
	teststep_name_contact = 'querycontact'
	setCookies(testcase_name_contact,teststep_name_contact ,u_name)
	setaptcha(u_name,params_list_contact)
	
	def re_contact = getContentOut(testcase_name_contact,teststep_name_contact,params_list_contact)
	
	def user_size = re_contact.data.size
	def user_id = 0
	for (i in (0..(user_size - 1))){
		if (re_contact.data[i].uname == username){
			user_id = i
			break
			}
		
		if(i == user_size -1){
			assert(  '未在联系人列表中找到对应的用户')
			}
		}

		if(choice == 'c'){
			return re_contact.data[user_id].mid
		}

		//根据mid获取roomid
		params_list_double = ['mid=' + re_contact.data[user_id].mid]
		testcase_name_double = 'msg_querydouble'
		teststep_name_double = 'querydouble'
		log.info params_list_double
		setCookies(testcase_name_double,teststep_name_double ,u_name)
		setaptcha(u_name,params_list_double)
		
		def re_queryroom = getContentOut(testcase_name_double,teststep_name_double,params_list_double)

		if(choice == 'a'){
			return re_queryroom.data.rid
		}
		else{
			log.info 'send msg'
			params_list_send = ['rid=' + re_queryroom.data.rid,'msg=' + msg_str]
			setCookies('msg_send','send',u_name)
			setaptcha(u_name,params_list_send)
			def re_sendmsg = getContentOut('msg_send','send',params_list_send)
			return re_sendmsg
		}
}


//==================封装公共调用函数==============================

//==================================
//getContentOut 模拟请求
//输入参 testcase_name  testcase在testsuite中的名字
//输入参 teststep_name  主teststep在testcase中的名字
//输入参 request_params list的形式设置准备请求参数 eg： ['oid=1','type=1','message=233333']
//返回值为该请求获取的返回正文content
//==================================
def getContentOut(String testcase_name,String teststep_name,List request_params){
	def testproject = testRunner.testCase.testSuite.project
	def testcase = testproject.testSuites['common_testsuite'].testCases[testcase_name]

	for(i in request_params){
		testcase.testSteps['testdata'].setPropertyValue(i.split('=')[0],i.split('=')[1])
		log.info i.split('=')[0]
		log.info i.split('=')[1]
		}

	def contextMap = new StringToObjectMap(context)
	def runner = testcase.run(contextMap,false)
	//获取测试的请求
	def testcase_stepcount = testcase.getTestStepCount() 

	def response_content = runner.getResults()[testcase_stepcount-1].getResponseContent()
     //还原设置参数
	tearDownInput(testcase_name,request_params)

	//还原cookie设置
	setCookies(testcase_name, teststep_name,'teardown')

     //把测试结果json化后传出去
	def slurper = new JsonSlurper()
	def re = slurper.parseText(response_content)
	
	return re
}

//====================================
//tearDownInput 还原参数设置
//输入参 testcase_name  testcase在testsuite中的名字
//输入参 request_params list的形式设置准备请求参数 eg： ['oid=1','type=1','message=233333']
//返回值 无
//====================================
def tearDownInput(String testcase_name,List request_params){
	for(i in request_params){
		testRunner.testCase.testSuite.project.testSuites['common_testsuite'].testCases[testcase_name].testSteps['testdata'].setPropertyValue(i.split('=')[0],'')
		}
}

//====================================
//setCookies 设置cookies
//输入参 testcase_name  testcase在testsuite中的名字
//输入参 teststep_name  需要写入cookie的请求所在teststep名字
//输入参 userid 固定账号1 user001    账号2user002   高权限账号user_super001  还原操作 teardown
//返回值 无
//====================================
def setCookies(String testcase_name,String teststep_name,String userid){
	//按用户名读取预置的cookie值
	def testproject = testRunner.testCase.testSuite.project
	def cookies_str = testproject.testSuites['common_testsuite'].testCases['cookie'].testSteps['user_cookie'].getPropertyValue(userid)
	def reqheaders = new StringToStringMap()
	reqheaders.put('Cookie',cookies_str)
	testproject.testSuites['common_testsuite'].getTestCaseByName(testcase_name).getTestStepByName(teststep_name).testRequest.setRequestHeaders(reqheaders)	
}


//====================================
//getCaptcha 设置Captcha
//输入参 testcase_name  testcase在testsuite中的名字
//输入参 teststep_name  需要写入cookie的请求所在teststep名字
//输入参 userid 固定账号1 user001    账号2user002   高权限账号user_super001 
//返回值 无
//====================================
//====================================
def setaptcha(String userid,List prams_list){
	//按用户名读取预置的cookie值
	def testproject = testRunner.testCase.testSuite.project
	def cookies_str = testproject.testSuites['common_testsuite'].testCases['cookie'].testSteps['user_cookie'].getPropertyValue(userid)
	
	def values = cookies_str.split(';')
	
	for(i in (0..(values.size()-1))){
		if(values[i].split('=')[0] == '_dfcaptcha') {
			prams_list.add('captcha=' + values[i].split('=')[1])
			return prams_list
		}
	}
	
}
</script></con:config></con:testStep><con:testStep type="groovy" name="获取用户推荐视频信息" id="ff12306a-aa60-4873-b361-0dc69cfe7cad"><con:settings/><con:config><script>import com.eviware.soapui.support.types.StringToObjectMap
import groovy.json.JsonSlurper
import com.eviware.soapui.impl.wsdl.support.http.HttpClientSupport
import org.apache.http.impl.cookie.BasicClientCookie
import com.eviware.soapui.support.types.StringToStringMap
//配置参数
def params_list =  ['mid=17668003']
log.info("获取用户推荐视频信息")

log.info(params_list)
//选择执行的测试套件
def testcase_name = '/x/v2/archive/recommend626'
def teststep_name = '/x/v2/archive/recommend626'

def re = getContentOut(testcase_name,teststep_name,params_list)

//检验返回码
//assert(re.code == 0)
log.info(re)

//==================================
//SendMsg_ByName 根据用户昵称发送消息或者获取聊天roomid
//输入参 username  用户的昵称如“格格”
//输入参 choice 选择项 若为a则返回rid，若为b则直接对用户发送私信, c 返回mid
//输入参 msg_str 私信内容
//u_name 使用的用户在cookies预设的name
//返回值 为rid
//==================================
def SendMsg_ByName(String username,String choice,String msg_str,String u_name){
	params_list_contact = ['page_size=20','page_no=1']
	testcase_name_contact = 'msg_querycontact'
	teststep_name_contact = 'querycontact'
	setCookies(testcase_name_contact,teststep_name_contact ,u_name)
	setaptcha(u_name,params_list_contact)
	
	def re_contact = getContentOut(testcase_name_contact,teststep_name_contact,params_list_contact)
	
	def user_size = re_contact.data.size
	def user_id = 0
	for (i in (0..(user_size - 1))){
		if (re_contact.data[i].uname == username){
			user_id = i
			break
			}
		
		if(i == user_size -1){
			assert(  '未在联系人列表中找到对应的用户')
			}
		}

		if(choice == 'c'){
			return re_contact.data[user_id].mid
		}

		//根据mid获取roomid
		params_list_double = ['mid=' + re_contact.data[user_id].mid]
		testcase_name_double = 'msg_querydouble'
		teststep_name_double = 'querydouble'
		log.info params_list_double
		setCookies(testcase_name_double,teststep_name_double ,u_name)
		setaptcha(u_name,params_list_double)
		
		def re_queryroom = getContentOut(testcase_name_double,teststep_name_double,params_list_double)

		if(choice == 'a'){
			return re_queryroom.data.rid
		}
		else{
			log.info 'send msg'
			params_list_send = ['rid=' + re_queryroom.data.rid,'msg=' + msg_str]
			setCookies('msg_send','send',u_name)
			setaptcha(u_name,params_list_send)
			def re_sendmsg = getContentOut('msg_send','send',params_list_send)
			return re_sendmsg
		}
}


//==================封装公共调用函数==============================

//==================================
//getContentOut 模拟请求
//输入参 testcase_name  testcase在testsuite中的名字
//输入参 teststep_name  主teststep在testcase中的名字
//输入参 request_params list的形式设置准备请求参数 eg： ['oid=1','type=1','message=233333']
//返回值为该请求获取的返回正文content
//==================================
def getContentOut(String testcase_name,String teststep_name,List request_params){
	def testproject = testRunner.testCase.testSuite.project
	def testcase = testproject.testSuites['common_testsuite'].testCases[testcase_name]

	for(i in request_params){
		testcase.testSteps['testdata'].setPropertyValue(i.split('=')[0],i.split('=')[1])
		log.info i.split('=')[0]
		log.info i.split('=')[1]
		}

	def contextMap = new StringToObjectMap(context)
	def runner = testcase.run(contextMap,false)
	//获取测试的请求
	def testcase_stepcount = testcase.getTestStepCount() 

	def response_content = runner.getResults()[testcase_stepcount-1].getResponseContent()
	log.info response_content
	
     //还原设置参数
	tearDownInput(testcase_name,request_params)

	//还原cookie设置
	setCookies(testcase_name, teststep_name,'teardown')

     //把测试结果json化后传出去
	def slurper = new JsonSlurper()
	def re = slurper.parseText(response_content)
	
	return re
}

//====================================
//tearDownInput 还原参数设置
//输入参 testcase_name  testcase在testsuite中的名字
//输入参 request_params list的形式设置准备请求参数 eg： ['oid=1','type=1','message=233333']
//返回值 无
//====================================
def tearDownInput(String testcase_name,List request_params){
	for(i in request_params){
		testRunner.testCase.testSuite.project.testSuites['common_testsuite'].testCases[testcase_name].testSteps['testdata'].setPropertyValue(i.split('=')[0],'')
		}
}

//====================================
//setCookies 设置cookies
//输入参 testcase_name  testcase在testsuite中的名字
//输入参 teststep_name  需要写入cookie的请求所在teststep名字
//输入参 userid 固定账号1 user001    账号2user002   高权限账号user_super001  还原操作 teardown
//返回值 无
//====================================
def setCookies(String testcase_name,String teststep_name,String userid){
	//按用户名读取预置的cookie值
	def testproject = testRunner.testCase.testSuite.project
	def cookies_str = testproject.testSuites['common_testsuite'].testCases['cookie'].testSteps['user_cookie'].getPropertyValue(userid)
	def reqheaders = new StringToStringMap()
	reqheaders.put('Cookie',cookies_str)
	testproject.testSuites['common_testsuite'].getTestCaseByName(testcase_name).getTestStepByName(teststep_name).testRequest.setRequestHeaders(reqheaders)	
}


//====================================
//getCaptcha 设置Captcha
//输入参 testcase_name  testcase在testsuite中的名字
//输入参 teststep_name  需要写入cookie的请求所在teststep名字
//输入参 userid 固定账号1 user001    账号2user002   高权限账号user_super001 
//返回值 无
//====================================
//====================================
def setaptcha(String userid,List prams_list){
	//按用户名读取预置的cookie值
	def testproject = testRunner.testCase.testSuite.project
	def cookies_str = testproject.testSuites['common_testsuite'].testCases['cookie'].testSteps['user_cookie'].getPropertyValue(userid)
	
	def values = cookies_str.split(';')
	
	for(i in (0..(values.size()-1))){
		if(values[i].split('=')[0] == '_dfcaptcha') {
			prams_list.add('captcha=' + values[i].split('=')[1])
			return prams_list
		}
	}
	
}
</script></con:config></con:testStep><con:testStep type="groovy" name="添加videoshot" id="4c271b58-de55-47ee-b992-5b479a1f7f6f"><con:settings/><con:config><script>import com.eviware.soapui.support.types.StringToObjectMap
import groovy.json.JsonSlurper
import com.eviware.soapui.impl.wsdl.support.http.HttpClientSupport
import org.apache.http.impl.cookie.BasicClientCookie
import com.eviware.soapui.support.types.StringToStringMap
//配置参数
def params_list =  ['cid=2880847', 'count=5']
log.info("添加videoshot")

log.info(params_list)
//选择执行的测试套件
def testcase_name = '/x/v2/archive/videoshot/add'
def teststep_name = '/x/v2/archive/videoshot/add'

def re = getContentOut(testcase_name,teststep_name,params_list)

//检验返回码
assert(re.code == 0)
log.info(re)

def getContentOut(String testcase_name,String teststep_name,List request_params){
	def testproject = testRunner.testCase.testSuite.project
	def testcase = testproject.testSuites['common_testsuite'].testCases[testcase_name]

	for(i in request_params){
		testcase.testSteps['testdata'].setPropertyValue(i.split('=')[0],i.split('=')[1])
		log.info i.split('=')[0]
		log.info i.split('=')[1]
		}

	def contextMap = new StringToObjectMap(context)
	def runner = testcase.run(contextMap,false)
	//获取测试的请求
	def testcase_stepcount = testcase.getTestStepCount() 

	def response_content = runner.getResults()[testcase_stepcount-1].getResponseContent()
//	log.info response_content
     //还原设置参数
	tearDownInput(testcase_name,request_params)

	//还原cookie设置
	setCookies(testcase_name, teststep_name,'teardown')

     //把测试结果json化后传出去
	def slurper = new JsonSlurper()
	def re = slurper.parseText(response_content)
	
	return re
}


def tearDownInput(String testcase_name,List request_params){
	for(i in request_params){
		testRunner.testCase.testSuite.project.testSuites['common_testsuite'].testCases[testcase_name].testSteps['testdata'].setPropertyValue(i.split('=')[0],'')
		}
}


def setCookies(String testcase_name,String teststep_name,String userid){
	//按用户名读取预置的cookie值
	def testproject = testRunner.testCase.testSuite.project
	def cookies_str = testproject.testSuites['common_testsuite'].testCases['cookie'].testSteps['user_cookie'].getPropertyValue(userid)
	def reqheaders = new StringToStringMap()
	reqheaders.put('Cookie',cookies_str)
	testproject.testSuites['common_testsuite'].getTestCaseByName(testcase_name).getTestStepByName(teststep_name).testRequest.setRequestHeaders(reqheaders)	
}


def setaptcha(String userid,List prams_list){
	//按用户名读取预置的cookie值
	def testproject = testRunner.testCase.testSuite.project
	def cookies_str = testproject.testSuites['common_testsuite'].testCases['cookie'].testSteps['user_cookie'].getPropertyValue(userid)
	
	def values = cookies_str.split(';')
	
	for(i in (0..(values.size()-1))){
		if(values[i].split('=')[0] == '_dfcaptcha') {
			prams_list.add('captcha=' + values[i].split('=')[1])
			return prams_list
		}
	}
	
}
</script></con:config></con:testStep><con:testStep type="groovy" name="获取videoshot" id="6db8ae81-fd0f-4df2-8479-49a443d86c23"><con:settings/><con:config><script>import com.eviware.soapui.support.types.StringToObjectMap
import groovy.json.JsonSlurper
import com.eviware.soapui.impl.wsdl.support.http.HttpClientSupport
import org.apache.http.impl.cookie.BasicClientCookie
import com.eviware.soapui.support.types.StringToStringMap
//配置参数
def params_list =  ['cid=02880847']
log.info("获取videoshot")

log.info(params_list)
//选择执行的测试套件
def testcase_name = '/x/v2/archive/videoshot'
def teststep_name = '/x/v2/archive/videoshot'

def re = getContentOut(testcase_name,teststep_name,params_list)

//检验返回码
//assert(re.code == 0)
log.info(re)	

def getContentOut(String testcase_name,String teststep_name,List request_params){
	def testproject = testRunner.testCase.testSuite.project
	def testcase = testproject.testSuites['common_testsuite'].testCases[testcase_name]

	for(i in request_params){
		testcase.testSteps['testdata'].setPropertyValue(i.split('=')[0],i.split('=')[1])
		log.info i.split('=')[0]
		log.info i.split('=')[1]
		}

	def contextMap = new StringToObjectMap(context)
	def runner = testcase.run(contextMap,false)
	//获取测试的请求
	def testcase_stepcount = testcase.getTestStepCount() 

	def response_content = runner.getResults()[testcase_stepcount-1].getResponseContent()
//	log.info response_content
     //还原设置参数
	tearDownInput(testcase_name,request_params)

	//还原cookie设置
	setCookies(testcase_name, teststep_name,'teardown')

     //把测试结果json化后传出去
	def slurper = new JsonSlurper()
	def re = slurper.parseText(response_content)
	
	return re
}


def tearDownInput(String testcase_name,List request_params){
	for(i in request_params){
		testRunner.testCase.testSuite.project.testSuites['common_testsuite'].testCases[testcase_name].testSteps['testdata'].setPropertyValue(i.split('=')[0],'')
		}
}


def setCookies(String testcase_name,String teststep_name,String userid){
	//按用户名读取预置的cookie值
	def testproject = testRunner.testCase.testSuite.project
	def cookies_str = testproject.testSuites['common_testsuite'].testCases['cookie'].testSteps['user_cookie'].getPropertyValue(userid)
	def reqheaders = new StringToStringMap()
	reqheaders.put('Cookie',cookies_str)
	testproject.testSuites['common_testsuite'].getTestCaseByName(testcase_name).getTestStepByName(teststep_name).testRequest.setRequestHeaders(reqheaders)	
}


def setaptcha(String userid,List prams_list){
	//按用户名读取预置的cookie值
	def testproject = testRunner.testCase.testSuite.project
	def cookies_str = testproject.testSuites['common_testsuite'].testCases['cookie'].testSteps['user_cookie'].getPropertyValue(userid)
	
	def values = cookies_str.split(';')
	
	for(i in (0..(values.size()-1))){
		if(values[i].split('=')[0] == '_dfcaptcha') {
			prams_list.add('captcha=' + values[i].split('=')[1])
			return prams_list
		}
	}
	
}
</script></con:config></con:testStep><con:testStep type="groovy" name="获取up主视频动态" id="b848cc0e-2bae-4436-86d4-ea46e8d760f4"><con:settings/><con:config><script>import com.eviware.soapui.support.types.StringToObjectMap
import groovy.json.JsonSlurper
import com.eviware.soapui.impl.wsdl.support.http.HttpClientSupport
import org.apache.http.impl.cookie.BasicClientCookie
import com.eviware.soapui.support.types.StringToStringMap
//配置参数
def params_list =  ['mid=15555180']
log.info("获取videoshot")

log.info(params_list)
//选择执行的测试套件
def testcase_name = '/x/v2/archive/moment/reply'
def teststep_name = '	/x/v2/archive/moment/reply'

def re = getContentOut(testcase_name,teststep_name,params_list)

//检验返回码
assert(re.code == 0)
log.info(re)	

def getContentOut(String testcase_name,String teststep_name,List request_params){
	def testproject = testRunner.testCase.testSuite.project
	def testcase = testproject.testSuites['common_testsuite'].testCases[testcase_name]

	for(i in request_params){
		testcase.testSteps['testdata'].setPropertyValue(i.split('=')[0],i.split('=')[1])
		log.info i.split('=')[0]
		log.info i.split('=')[1]
		}

	def contextMap = new StringToObjectMap(context)
	def runner = testcase.run(contextMap,false)
	//获取测试的请求
	def testcase_stepcount = testcase.getTestStepCount() 

	def response_content = runner.getResults()[testcase_stepcount-1].getResponseContent()
//	log.info response_content
     //还原设置参数
	tearDownInput(testcase_name,request_params)

	//还原cookie设置
	setCookies(testcase_name, teststep_name,'teardown')

     //把测试结果json化后传出去
	def slurper = new JsonSlurper()
	def re = slurper.parseText(response_content)
	
	return re
}


def tearDownInput(String testcase_name,List request_params){
	for(i in request_params){
		testRunner.testCase.testSuite.project.testSuites['common_testsuite'].testCases[testcase_name].testSteps['testdata'].setPropertyValue(i.split('=')[0],'')
		}
}


def setCookies(String testcase_name,String teststep_name,String userid){
	//按用户名读取预置的cookie值
	def testproject = testRunner.testCase.testSuite.project
	def cookies_str = testproject.testSuites['common_testsuite'].testCases['cookie'].testSteps['user_cookie'].getPropertyValue(userid)
	def reqheaders = new StringToStringMap()
	reqheaders.put('Cookie',cookies_str)
	testproject.testSuites['common_testsuite'].getTestCaseByName(testcase_name).getTestStepByName(teststep_name).testRequest.setRequestHeaders(reqheaders)	
}


def setaptcha(String userid,List prams_list){
	//按用户名读取预置的cookie值
	def testproject = testRunner.testCase.testSuite.project
	def cookies_str = testproject.testSuites['common_testsuite'].testCases['cookie'].testSteps['user_cookie'].getPropertyValue(userid)
	
	def values = cookies_str.split(';')
	
	for(i in (0..(values.size()-1))){
		if(values[i].split('=')[0] == '_dfcaptcha') {
			prams_list.add('captcha=' + values[i].split('=')[1])
			return prams_list
		}
	}
	
}
</script></con:config></con:testStep><con:testStep type="groovy" name="获取视频针对IP的权限值" id="67a08bc6-ea48-42f4-a351-7dd59801a407"><con:settings/><con:config><script>import com.eviware.soapui.support.types.StringToObjectMap
import groovy.json.JsonSlurper
import com.eviware.soapui.impl.wsdl.support.http.HttpClientSupport
import org.apache.http.impl.cookie.BasicClientCookie
import com.eviware.soapui.support.types.StringToStringMap
//配置参数
def params_list =  ['aid=288847','ip=123.43.235.72','cdnip=172.16.3.3']
log.info("获取视频针对IP的权限值")

log.info(params_list)
//选择执行的测试套件
def testcase_name = '/x/v2/archive/zlimit'
def teststep_name = '/x/v2/archive/zlimit'

def re = getContentOut(testcase_name,teststep_name,params_list)

//检验返回码
//assert(re.code == 0)
log.info(re)

def getContentOut(String testcase_name,String teststep_name,List request_params){
	def testproject = testRunner.testCase.testSuite.project
	def testcase = testproject.testSuites['common_testsuite'].testCases[testcase_name]

	for(i in request_params){
		testcase.testSteps['testdata'].setPropertyValue(i.split('=')[0],i.split('=')[1])
		log.info i.split('=')[0]
		log.info i.split('=')[1]
		}

	def contextMap = new StringToObjectMap(context)
	def runner = testcase.run(contextMap,false)
	//获取测试的请求
	def testcase_stepcount = testcase.getTestStepCount() 

	def response_content = runner.getResults()[testcase_stepcount-1].getResponseContent()
//	log.info response_content
     //还原设置参数
	tearDownInput(testcase_name,request_params)

	//还原cookie设置
	setCookies(testcase_name, teststep_name,'teardown')

     //把测试结果json化后传出去
	def slurper = new JsonSlurper()
	def re = slurper.parseText(response_content)
	
	return re
}


def tearDownInput(String testcase_name,List request_params){
	for(i in request_params){
		testRunner.testCase.testSuite.project.testSuites['common_testsuite'].testCases[testcase_name].testSteps['testdata'].setPropertyValue(i.split('=')[0],'')
		}
}


def setCookies(String testcase_name,String teststep_name,String userid){
	//按用户名读取预置的cookie值
	def testproject = testRunner.testCase.testSuite.project
	def cookies_str = testproject.testSuites['common_testsuite'].testCases['cookie'].testSteps['user_cookie'].getPropertyValue(userid)
	def reqheaders = new StringToStringMap()
	reqheaders.put('Cookie',cookies_str)
	testproject.testSuites['common_testsuite'].getTestCaseByName(testcase_name).getTestStepByName(teststep_name).testRequest.setRequestHeaders(reqheaders)	
}


def setaptcha(String userid,List prams_list){
	//按用户名读取预置的cookie值
	def testproject = testRunner.testCase.testSuite.project
	def cookies_str = testproject.testSuites['common_testsuite'].testCases['cookie'].testSteps['user_cookie'].getPropertyValue(userid)
	
	def values = cookies_str.split(';')
	
	for(i in (0..(values.size()-1))){
		if(values[i].split('=')[0] == '_dfcaptcha') {
			prams_list.add('captcha=' + values[i].split('=')[1])
			return prams_list
		}
	}
	
}
</script></con:config></con:testStep><con:testStep type="groovy" name="删除稿件缓存信息" id="15154d9b-1f7b-45f4-9157-9dbdeac5d7cb"><con:settings/><con:config><script>import com.eviware.soapui.support.types.StringToObjectMap
import groovy.json.JsonSlurper
import com.eviware.soapui.impl.wsdl.support.http.HttpClientSupport
import org.apache.http.impl.cookie.BasicClientCookie
import com.eviware.soapui.support.types.StringToStringMap
//配置参数
def params_list =  ['aid=2880590']
log.info("获取单个稿件信息")

log.info(params_list)
//选择执行的测试套件
def testcase_name = '/x/v2/archive/cache/del'
def teststep_name = '/x/v2/archive/cache/del'

def re = getContentOut(testcase_name,teststep_name,params_list)

//检验返回码
assert(re.code == 0)
log.info(re)

//==================================
//SendMsg_ByName 根据用户昵称发送消息或者获取聊天roomid
//输入参 username  用户的昵称如“格格”
//输入参 choice 选择项 若为a则返回rid，若为b则直接对用户发送私信, c 返回mid
//输入参 msg_str 私信内容
//u_name 使用的用户在cookies预设的name
//返回值 为rid
//==================================
def SendMsg_ByName(String username,String choice,String msg_str,String u_name){
	params_list_contact = ['page_size=20','page_no=1']
	testcase_name_contact = 'msg_querycontact'
	teststep_name_contact = 'querycontact'
	setCookies(testcase_name_contact,teststep_name_contact ,u_name)
	setaptcha(u_name,params_list_contact)
	
	def re_contact = getContentOut(testcase_name_contact,teststep_name_contact,params_list_contact)
	
	def user_size = re_contact.data.size
	def user_id = 0
	for (i in (0..(user_size - 1))){
		if (re_contact.data[i].uname == username){
			user_id = i
			break
			}
		
		if(i == user_size -1){
			assert(  '未在联系人列表中找到对应的用户')
			}
		}

		if(choice == 'c'){
			return re_contact.data[user_id].mid
		}

		//根据mid获取roomid
		params_list_double = ['mid=' + re_contact.data[user_id].mid]
		testcase_name_double = 'msg_querydouble'
		teststep_name_double = 'querydouble'
		log.info params_list_double
		setCookies(testcase_name_double,teststep_name_double ,u_name)
		setaptcha(u_name,params_list_double)
		
		def re_queryroom = getContentOut(testcase_name_double,teststep_name_double,params_list_double)

		if(choice == 'a'){
			return re_queryroom.data.rid
		}
		else{
			log.info 'send msg'
			params_list_send = ['rid=' + re_queryroom.data.rid,'msg=' + msg_str]
			setCookies('msg_send','send',u_name)
			setaptcha(u_name,params_list_send)
			def re_sendmsg = getContentOut('msg_send','send',params_list_send)
			return re_sendmsg
		}
}


//==================封装公共调用函数==============================

//==================================
//getContentOut 模拟请求
//输入参 testcase_name  testcase在testsuite中的名字
//输入参 teststep_name  主teststep在testcase中的名字
//输入参 request_params list的形式设置准备请求参数 eg： ['oid=1','type=1','message=233333']
//返回值为该请求获取的返回正文content
//==================================
def getContentOut(String testcase_name,String teststep_name,List request_params){
	def testproject = testRunner.testCase.testSuite.project
	def testcase = testproject.testSuites['common_testsuite'].testCases[testcase_name]

	for(i in request_params){
		testcase.testSteps['testdata'].setPropertyValue(i.split('=')[0],i.split('=')[1])
		log.info i.split('=')[0]
		log.info i.split('=')[1]
		}

	def contextMap = new StringToObjectMap(context)
	def runner = testcase.run(contextMap,false)
	//获取测试的请求
	def testcase_stepcount = testcase.getTestStepCount() 

	def response_content = runner.getResults()[testcase_stepcount-1].getResponseContent()
     //还原设置参数
	tearDownInput(testcase_name,request_params)

	//还原cookie设置
	setCookies(testcase_name, teststep_name,'teardown')

     //把测试结果json化后传出去
	def slurper = new JsonSlurper()
	def re = slurper.parseText(response_content)
	
	return re
}

//====================================
//tearDownInput 还原参数设置
//输入参 testcase_name  testcase在testsuite中的名字
//输入参 request_params list的形式设置准备请求参数 eg： ['oid=1','type=1','message=233333']
//返回值 无
//====================================
def tearDownInput(String testcase_name,List request_params){
	for(i in request_params){
		testRunner.testCase.testSuite.project.testSuites['common_testsuite'].testCases[testcase_name].testSteps['testdata'].setPropertyValue(i.split('=')[0],'')
		}
}

//====================================
//setCookies 设置cookies
//输入参 testcase_name  testcase在testsuite中的名字
//输入参 teststep_name  需要写入cookie的请求所在teststep名字
//输入参 userid 固定账号1 user001    账号2user002   高权限账号user_super001  还原操作 teardown
//返回值 无
//====================================
def setCookies(String testcase_name,String teststep_name,String userid){
	//按用户名读取预置的cookie值
	def testproject = testRunner.testCase.testSuite.project
	def cookies_str = testproject.testSuites['common_testsuite'].testCases['cookie'].testSteps['user_cookie'].getPropertyValue(userid)
	def reqheaders = new StringToStringMap()
	reqheaders.put('Cookie',cookies_str)
	testproject.testSuites['common_testsuite'].getTestCaseByName(testcase_name).getTestStepByName(teststep_name).testRequest.setRequestHeaders(reqheaders)	
}


//====================================
//getCaptcha 设置Captcha
//输入参 testcase_name  testcase在testsuite中的名字
//输入参 teststep_name  需要写入cookie的请求所在teststep名字
//输入参 userid 固定账号1 user001    账号2user002   高权限账号user_super001 
//返回值 无
//====================================
//====================================
def setaptcha(String userid,List prams_list){
	//按用户名读取预置的cookie值
	def testproject = testRunner.testCase.testSuite.project
	def cookies_str = testproject.testSuites['common_testsuite'].testCases['cookie'].testSteps['user_cookie'].getPropertyValue(userid)
	
	def values = cookies_str.split(';')
	
	for(i in (0..(values.size()-1))){
		if(values[i].split('=')[0] == '_dfcaptcha') {
			prams_list.add('captcha=' + values[i].split('=')[1])
			return prams_list
		}
	}
	
}
</script></con:config></con:testStep><con:testStep type="groovy" name="删除账号缓存" id="5a60065a-69f5-47b2-ab51-49ab7c15093c"><con:settings/><con:config><script>import com.eviware.soapui.support.types.StringToObjectMap
import groovy.json.JsonSlurper
import com.eviware.soapui.impl.wsdl.support.http.HttpClientSupport
import org.apache.http.impl.cookie.BasicClientCookie
import com.eviware.soapui.support.types.StringToStringMap
//配置参数
def params_list =  ['mid=17668003']
log.info("删除账号缓存")

log.info(params_list)
//选择执行的测试套件
def testcase_name = '/x/account/cache/del'
def teststep_name = '/x/account/cache/del'

def re = getContentOut(testcase_name,teststep_name,params_list)

//检验返回码
assert(re.code == 0)
log.info(re)

//==================================
//SendMsg_ByName 根据用户昵称发送消息或者获取聊天roomid
//输入参 username  用户的昵称如“格格”
//输入参 choice 选择项 若为a则返回rid，若为b则直接对用户发送私信, c 返回mid
//输入参 msg_str 私信内容
//u_name 使用的用户在cookies预设的name
//返回值 为rid
//==================================
def SendMsg_ByName(String username,String choice,String msg_str,String u_name){
	params_list_contact = ['page_size=20','page_no=1']
	testcase_name_contact = 'msg_querycontact'
	teststep_name_contact = 'querycontact'
	setCookies(testcase_name_contact,teststep_name_contact ,u_name)
	setaptcha(u_name,params_list_contact)
	
	def re_contact = getContentOut(testcase_name_contact,teststep_name_contact,params_list_contact)
	
	def user_size = re_contact.data.size
	def user_id = 0
	for (i in (0..(user_size - 1))){
		if (re_contact.data[i].uname == username){
			user_id = i
			break
			}
		
		if(i == user_size -1){
			assert(  '未在联系人列表中找到对应的用户')
			}
		}

		if(choice == 'c'){
			return re_contact.data[user_id].mid
		}

		//根据mid获取roomid
		params_list_double = ['mid=' + re_contact.data[user_id].mid]
		testcase_name_double = 'msg_querydouble'
		teststep_name_double = 'querydouble'
		log.info params_list_double
		setCookies(testcase_name_double,teststep_name_double ,u_name)
		setaptcha(u_name,params_list_double)
		
		def re_queryroom = getContentOut(testcase_name_double,teststep_name_double,params_list_double)

		if(choice == 'a'){
			return re_queryroom.data.rid
		}
		else{
			log.info 'send msg'
			params_list_send = ['rid=' + re_queryroom.data.rid,'msg=' + msg_str]
			setCookies('msg_send','send',u_name)
			setaptcha(u_name,params_list_send)
			def re_sendmsg = getContentOut('msg_send','send',params_list_send)
			return re_sendmsg
		}
}


//==================封装公共调用函数==============================

//==================================
//getContentOut 模拟请求
//输入参 testcase_name  testcase在testsuite中的名字
//输入参 teststep_name  主teststep在testcase中的名字
//输入参 request_params list的形式设置准备请求参数 eg： ['oid=1','type=1','message=233333']
//返回值为该请求获取的返回正文content
//==================================
def getContentOut(String testcase_name,String teststep_name,List request_params){
	def testproject = testRunner.testCase.testSuite.project
	def testcase = testproject.testSuites['common_testsuite'].testCases[testcase_name]

	for(i in request_params){
		testcase.testSteps['testdata'].setPropertyValue(i.split('=')[0],i.split('=')[1])
		log.info i.split('=')[0]
		log.info i.split('=')[1]
		}

	def contextMap = new StringToObjectMap(context)
	def runner = testcase.run(contextMap,false)
	//获取测试的请求
	def testcase_stepcount = testcase.getTestStepCount() 

	def response_content = runner.getResults()[testcase_stepcount-1].getResponseContent()
     //还原设置参数
	tearDownInput(testcase_name,request_params)

	//还原cookie设置
	setCookies(testcase_name, teststep_name,'teardown')

     //把测试结果json化后传出去
	def slurper = new JsonSlurper()
	def re = slurper.parseText(response_content)
	
	return re
}

//====================================
//tearDownInput 还原参数设置
//输入参 testcase_name  testcase在testsuite中的名字
//输入参 request_params list的形式设置准备请求参数 eg： ['oid=1','type=1','message=233333']
//返回值 无
//====================================
def tearDownInput(String testcase_name,List request_params){
	for(i in request_params){
		testRunner.testCase.testSuite.project.testSuites['common_testsuite'].testCases[testcase_name].testSteps['testdata'].setPropertyValue(i.split('=')[0],'')
		}
}

//====================================
//setCookies 设置cookies
//输入参 testcase_name  testcase在testsuite中的名字
//输入参 teststep_name  需要写入cookie的请求所在teststep名字
//输入参 userid 固定账号1 user001    账号2user002   高权限账号user_super001  还原操作 teardown
//返回值 无
//====================================
def setCookies(String testcase_name,String teststep_name,String userid){
	//按用户名读取预置的cookie值
	def testproject = testRunner.testCase.testSuite.project
	def cookies_str = testproject.testSuites['common_testsuite'].testCases['cookie'].testSteps['user_cookie'].getPropertyValue(userid)
	def reqheaders = new StringToStringMap()
	reqheaders.put('Cookie',cookies_str)
	testproject.testSuites['common_testsuite'].getTestCaseByName(testcase_name).getTestStepByName(teststep_name).testRequest.setRequestHeaders(reqheaders)	
}


//====================================
//getCaptcha 设置Captcha
//输入参 testcase_name  testcase在testsuite中的名字
//输入参 teststep_name  需要写入cookie的请求所在teststep名字
//输入参 userid 固定账号1 user001    账号2user002   高权限账号user_super001 
//返回值 无
//====================================
//====================================
def setaptcha(String userid,List prams_list){
	//按用户名读取预置的cookie值
	def testproject = testRunner.testCase.testSuite.project
	def cookies_str = testproject.testSuites['common_testsuite'].testCases['cookie'].testSteps['user_cookie'].getPropertyValue(userid)
	
	def values = cookies_str.split(';')
	
	for(i in (0..(values.size()-1))){
		if(values[i].split('=')[0] == '_dfcaptcha') {
			prams_list.add('captcha=' + values[i].split('=')[1])
			return prams_list
		}
	}
	
}
</script></con:config></con:testStep><con:testStep type="groovy" name="相关视频信息" id="40001adb-64f9-407f-a7bb-f5d3f2bfeb69"><con:settings/><con:config><script>import com.eviware.soapui.support.types.StringToObjectMap
import groovy.json.JsonSlurper
import com.eviware.soapui.impl.wsdl.support.http.HttpClientSupport
import org.apache.http.impl.cookie.BasicClientCookie
import com.eviware.soapui.support.types.StringToStringMap
//配置参数
def params_list =  ['aid=2880579']
log.info("相关视频信息")

log.info(params_list)
//选择执行的测试套件
def testcase_name = '/x/v2/archive/relation'
def teststep_name = '/x/v2/archive/relation'

def re = getContentOut(testcase_name,teststep_name,params_list)

//检验返回码
//assert(re.code == 0)
log.info(re)

//==================================
//SendMsg_ByName 根据用户昵称发送消息或者获取聊天roomid
//输入参 username  用户的昵称如“格格”
//输入参 choice 选择项 若为a则返回rid，若为b则直接对用户发送私信, c 返回mid
//输入参 msg_str 私信内容
//u_name 使用的用户在cookies预设的name
//返回值 为rid
//==================================
def SendMsg_ByName(String username,String choice,String msg_str,String u_name){
	params_list_contact = ['page_size=20','page_no=1']
	testcase_name_contact = 'msg_querycontact'
	teststep_name_contact = 'querycontact'
	setCookies(testcase_name_contact,teststep_name_contact ,u_name)
	setaptcha(u_name,params_list_contact)
	
	def re_contact = getContentOut(testcase_name_contact,teststep_name_contact,params_list_contact)
	
	def user_size = re_contact.data.size
	def user_id = 0
	for (i in (0..(user_size - 1))){
		if (re_contact.data[i].uname == username){
			user_id = i
			break
			}
		
		if(i == user_size -1){
			assert(  '未在联系人列表中找到对应的用户')
			}
		}

		if(choice == 'c'){
			return re_contact.data[user_id].mid
		}

		//根据mid获取roomid
		params_list_double = ['mid=' + re_contact.data[user_id].mid]
		testcase_name_double = 'msg_querydouble'
		teststep_name_double = 'querydouble'
		log.info params_list_double
		setCookies(testcase_name_double,teststep_name_double ,u_name)
		setaptcha(u_name,params_list_double)
		
		def re_queryroom = getContentOut(testcase_name_double,teststep_name_double,params_list_double)

		if(choice == 'a'){
			return re_queryroom.data.rid
		}
		else{
			log.info 'send msg'
			params_list_send = ['rid=' + re_queryroom.data.rid,'msg=' + msg_str]
			setCookies('msg_send','send',u_name)
			setaptcha(u_name,params_list_send)
			def re_sendmsg = getContentOut('msg_send','send',params_list_send)
			return re_sendmsg
		}
}


//==================封装公共调用函数==============================

//==================================
//getContentOut 模拟请求
//输入参 testcase_name  testcase在testsuite中的名字
//输入参 teststep_name  主teststep在testcase中的名字
//输入参 request_params list的形式设置准备请求参数 eg： ['oid=1','type=1','message=233333']
//返回值为该请求获取的返回正文content
//==================================
def getContentOut(String testcase_name,String teststep_name,List request_params){
	def testproject = testRunner.testCase.testSuite.project
	def testcase = testproject.testSuites['common_testsuite'].testCases[testcase_name]

	for(i in request_params){
		testcase.testSteps['testdata'].setPropertyValue(i.split('=')[0],i.split('=')[1])
		log.info i.split('=')[0]
		log.info i.split('=')[1]
		}

	def contextMap = new StringToObjectMap(context)
	def runner = testcase.run(contextMap,false)
	//获取测试的请求
	def testcase_stepcount = testcase.getTestStepCount() 

	def response_content = runner.getResults()[testcase_stepcount-1].getResponseContent()
	log.info response_content
	
     //还原设置参数
	tearDownInput(testcase_name,request_params)

	//还原cookie设置
	setCookies(testcase_name, teststep_name,'teardown')

     //把测试结果json化后传出去
	def slurper = new JsonSlurper()
	def re = slurper.parseText(response_content)
	
	return re
}

//====================================
//tearDownInput 还原参数设置
//输入参 testcase_name  testcase在testsuite中的名字
//输入参 request_params list的形式设置准备请求参数 eg： ['oid=1','type=1','message=233333']
//返回值 无
//====================================
def tearDownInput(String testcase_name,List request_params){
	for(i in request_params){
		testRunner.testCase.testSuite.project.testSuites['common_testsuite'].testCases[testcase_name].testSteps['testdata'].setPropertyValue(i.split('=')[0],'')
		}
}

//====================================
//setCookies 设置cookies
//输入参 testcase_name  testcase在testsuite中的名字
//输入参 teststep_name  需要写入cookie的请求所在teststep名字
//输入参 userid 固定账号1 user001    账号2user002   高权限账号user_super001  还原操作 teardown
//返回值 无
//====================================
def setCookies(String testcase_name,String teststep_name,String userid){
	//按用户名读取预置的cookie值
	def testproject = testRunner.testCase.testSuite.project
	def cookies_str = testproject.testSuites['common_testsuite'].testCases['cookie'].testSteps['user_cookie'].getPropertyValue(userid)
	def reqheaders = new StringToStringMap()
	reqheaders.put('Cookie',cookies_str)
	testproject.testSuites['common_testsuite'].getTestCaseByName(testcase_name).getTestStepByName(teststep_name).testRequest.setRequestHeaders(reqheaders)	
}


//====================================
//getCaptcha 设置Captcha
//输入参 testcase_name  testcase在testsuite中的名字
//输入参 teststep_name  需要写入cookie的请求所在teststep名字
//输入参 userid 固定账号1 user001    账号2user002   高权限账号user_super001 
//返回值 无
//====================================
//====================================
def setaptcha(String userid,List prams_list){
	//按用户名读取预置的cookie值
	def testproject = testRunner.testCase.testSuite.project
	def cookies_str = testproject.testSuites['common_testsuite'].testCases['cookie'].testSteps['user_cookie'].getPropertyValue(userid)
	
	def values = cookies_str.split(';')
	
	for(i in (0..(values.size()-1))){
		if(values[i].split('=')[0] == '_dfcaptcha') {
			prams_list.add('captcha=' + values[i].split('=')[1])
			return prams_list
		}
	}
	
}
</script></con:config></con:testStep><con:testStep type="groovy" name="获取历史记录" id="8118561d-a912-4070-a3ea-b4b91be5e27d"><con:settings/><con:config><script>import com.eviware.soapui.support.types.StringToObjectMap
import groovy.json.JsonSlurper
import com.eviware.soapui.impl.wsdl.support.http.HttpClientSupport
import org.apache.http.impl.cookie.BasicClientCookie
import com.eviware.soapui.support.types.StringToStringMap
//配置参数
def params_list =  ['pn=1','ps=10']
log.info '获取历史记录'
//问题记录1.修改ps的值可能会导致获取播放历史的时候返回504的问题，比如100,200
//			2.
//选择执行的测试套件
def testcase_name = 'history-get'
def teststep_name = 'history-get'
//设置用户Cookies
setCookies(testcase_name, teststep_name,'usernixp')
def re = getContentOut(testcase_name,teststep_name,params_list)

//检验返回码
//assert(re.code == 0)
log.info(re)

def getContentOut(String testcase_name,String teststep_name,List request_params){
	def testproject = testRunner.testCase.testSuite.project
	def testcase = testproject.testSuites['common_testsuite'].testCases[testcase_name]

	for(i in request_params){
		testcase.testSteps['testdata'].setPropertyValue(i.split('=')[0],i.split('=')[1])
		}

	def contextMap = new StringToObjectMap(context)
	def runner = testcase.run(contextMap,false)
	//获取测试的请求
	def testcase_stepcount = testcase.getTestStepCount() 

	def response_content = runner.getResults()[testcase_stepcount-1].getResponseContent()
     //还原设置参数
	tearDownInput(testcase_name,request_params)

	//还原cookie设置
	setCookies(testcase_name, teststep_name,'teardown')

     //把测试结果json化后传出去
	def slurper = new JsonSlurper()
	def re = slurper.parseText(response_content)
	
	return re
}

def tearDownInput(String testcase_name,List request_params){
	for(i in request_params){
		testRunner.testCase.testSuite.project.testSuites['common_testsuite'].testCases[testcase_name].testSteps['testdata'].setPropertyValue(i.split('=')[0],'')
		}
}

def setCookies(String testcase_name,String teststep_name,String userid){
	//按用户名读取预置的cookie值
	def testproject = testRunner.testCase.testSuite.project
	def cookies_str = testproject.testSuites['common_testsuite'].testCases['cookie'].testSteps['user_cookie'].getPropertyValue(userid)
	def reqheaders = new StringToStringMap()
	reqheaders.put('Cookie',cookies_str)
	testproject.testSuites['common_testsuite'].getTestCaseByName(testcase_name).getTestStepByName(teststep_name).testRequest.setRequestHeaders(reqheaders)	
}

def setaptcha(String userid,List prams_list){
	//按用户名读取预置的cookie值
	def testproject = testRunner.testCase.testSuite.project
	def cookies_str = testproject.testSuites['common_testsuite'].testCases['cookie'].testSteps['user_cookie'].getPropertyValue(userid)
	
	def values = cookies_str.split(';')
	
	for(i in (0..(values.size()-1))){
		if(values[i].split('=')[0] == '_dfcaptcha') {
			prams_list.add('captcha=' + values[i].split('=')[1])
			return prams_list
		}
	}
}
</script></con:config></con:testStep><con:testStep type="groovy" name="增加历史记录" id="5f89b8ef-16ee-4b2e-8f7c-e32211983b76"><con:settings/><con:config><script>import com.eviware.soapui.support.types.StringToObjectMap
import groovy.json.JsonSlurper
import com.eviware.soapui.impl.wsdl.support.http.HttpClientSupport
import org.apache.http.impl.cookie.BasicClientCookie
import com.eviware.soapui.support.types.StringToStringMap
//配置参数
def params_list =  ['aid=2880579']
log.info('增加历史记录')
//log参数，可校验是否正确
log.info(params_list)
//选择执行的测试套件
def testcase_name = 'history-add'
def teststep_name = 'history-add'
//设置用户Cookies
setCookies(testcase_name, teststep_name,'usernixp')
def re = getContentOut(testcase_name,teststep_name,params_list)

//检验返回码
assert(re.code == 0)
log.info re

//模拟请求
def getContentOut(String testcase_name,String teststep_name,List request_params){
	def testproject = testRunner.testCase.testSuite.project
	def testcase = testproject.testSuites['common_testsuite'].testCases[testcase_name]

	for(i in request_params){
		testcase.testSteps['testdata'].setPropertyValue(i.split('=')[0],i.split('=')[1])
		}

	def contextMap = new StringToObjectMap(context)
	def runner = testcase.run(contextMap,false)
	//获取测试的请求
	def testcase_stepcount = testcase.getTestStepCount() 

	def response_content = runner.getResults()[testcase_stepcount-1].getResponseContent()
     //还原设置参数
	tearDownInput(testcase_name,request_params)

	//还原cookie设置
	setCookies(testcase_name, teststep_name,'teardown')

     //把测试结果json化后传出去
	def slurper = new JsonSlurper()
	def re = slurper.parseText(response_content)
	
	return re
}

def tearDownInput(String testcase_name,List request_params){
	for(i in request_params){
		testRunner.testCase.testSuite.project.testSuites['common_testsuite'].testCases[testcase_name].testSteps['testdata'].setPropertyValue(i.split('=')[0],'')
		}
}

//请求头中添加cookie，针对pc端用户校验的情况
def setCookies(String testcase_name,String teststep_name,String userid){
	//按用户名读取预置的cookie值
	def testproject = testRunner.testCase.testSuite.project
	def cookies_str = testproject.testSuites['common_testsuite'].testCases['cookie'].testSteps['user_cookie'].getPropertyValue(userid)
	def reqheaders = new StringToStringMap()
	reqheaders.put('Cookie',cookies_str)
	testproject.testSuites['common_testsuite'].getTestCaseByName(testcase_name).getTestStepByName(teststep_name).testRequest.setRequestHeaders(reqheaders)	
}
//设置验证码
def setaptcha(String userid,List prams_list){
	//按用户名读取预置的cookie值
	def testproject = testRunner.testCase.testSuite.project
	def cookies_str = testproject.testSuites['common_testsuite'].testCases['cookie'].testSteps['user_cookie'].getPropertyValue(userid)
	
	def values = cookies_str.split(';')
	
	for(i in (0..(values.size()-1))){
		if(values[i].split('=')[0] == '_dfcaptcha') {
			prams_list.add('captcha=' + values[i].split('=')[1])
			return prams_list
		}
	}
	
}
</script></con:config></con:testStep><con:testStep type="groovy" name="删除单个历史记录" id="c4cfa5c4-fe5a-4857-a592-9b28b708c604"><con:settings/><con:config><script>import com.eviware.soapui.support.types.StringToObjectMap
import groovy.json.JsonSlurper
import com.eviware.soapui.impl.wsdl.support.http.HttpClientSupport
import org.apache.http.impl.cookie.BasicClientCookie
import com.eviware.soapui.support.types.StringToStringMap
//配置参数
def params_list =  ['aid=103']
log.info('删除某个历史记录')

log.info(params_list)
//选择执行的测试套件
def testcase_name = 'history-del'
def teststep_name = 'history-del'
//设置用户Cookies
setCookies(testcase_name, teststep_name,'usernixp')
def re = getContentOut(testcase_name,teststep_name,params_list)

//检验返回码
assert(re.code == 0)
log.info(re)


def getContentOut(String testcase_name,String teststep_name,List request_params){
	def testproject = testRunner.testCase.testSuite.project
	def testcase = testproject.testSuites['common_testsuite'].testCases[testcase_name]

	for(i in request_params){
		testcase.testSteps['testdata'].setPropertyValue(i.split('=')[0],i.split('=')[1])
		}

	def contextMap = new StringToObjectMap(context)
	def runner = testcase.run(contextMap,false)
	//获取测试的请求
	def testcase_stepcount = testcase.getTestStepCount() 

	def response_content = runner.getResults()[testcase_stepcount-1].getResponseContent()
     //还原设置参数
	tearDownInput(testcase_name,request_params)

	//还原cookie设置
	setCookies(testcase_name, teststep_name,'teardown')

     //把测试结果json化后传出去
	def slurper = new JsonSlurper()
	def re = slurper.parseText(response_content)
	
	return re
}

def tearDownInput(String testcase_name,List request_params){
	for(i in request_params){
		testRunner.testCase.testSuite.project.testSuites['common_testsuite'].testCases[testcase_name].testSteps['testdata'].setPropertyValue(i.split('=')[0],'')
		}
}


def setCookies(String testcase_name,String teststep_name,String userid){
	//按用户名读取预置的cookie值
	def testproject = testRunner.testCase.testSuite.project
	def cookies_str = testproject.testSuites['common_testsuite'].testCases['cookie'].testSteps['user_cookie'].getPropertyValue(userid)
	def reqheaders = new StringToStringMap()
	reqheaders.put('Cookie',cookies_str)
	testproject.testSuites['common_testsuite'].getTestCaseByName(testcase_name).getTestStepByName(teststep_name).testRequest.setRequestHeaders(reqheaders)	
}


def setaptcha(String userid,List prams_list){
	//按用户名读取预置的cookie值
	def testproject = testRunner.testCase.testSuite.project
	def cookies_str = testproject.testSuites['common_testsuite'].testCases['cookie'].testSteps['user_cookie'].getPropertyValue(userid)
	
	def values = cookies_str.split(';')
	
	for(i in (0..(values.size()-1))){
		if(values[i].split('=')[0] == '_dfcaptcha') {
			prams_list.add('captcha=' + values[i].split('=')[1])
			return prams_list
		}
	}
	
}
</script></con:config></con:testStep><con:testStep type="groovy" name="清除所有历史记录" id="b9b52ad6-9c61-418f-a2b3-eedc084b8483"><con:settings/><con:config><script>import com.eviware.soapui.support.types.StringToObjectMap
import groovy.json.JsonSlurper
import com.eviware.soapui.impl.wsdl.support.http.HttpClientSupport
import org.apache.http.impl.cookie.BasicClientCookie
import com.eviware.soapui.support.types.StringToStringMap
//配置参数
def params_list =  []
log.info('清除历史记录')

log.info(params_list)
//选择执行的测试套件
def testcase_name = 'history-clear'
def teststep_name = 'history-clear'
//设置用户Cookies
setCookies(testcase_name, teststep_name,'usernixp')
def re = getContentOut(testcase_name,teststep_name,params_list)

//检验返回码
assert(re.code == 0)
log.info(re)


def getContentOut(String testcase_name,String teststep_name,List request_params){
	def testproject = testRunner.testCase.testSuite.project
	def testcase = testproject.testSuites['common_testsuite'].testCases[testcase_name]

	for(i in request_params){
		testcase.testSteps['testdata'].setPropertyValue(i.split('=')[0],i.split('=')[1])
		}

	def contextMap = new StringToObjectMap(context)
	def runner = testcase.run(contextMap,false)
	//获取测试的请求
	def testcase_stepcount = testcase.getTestStepCount() 

	def response_content = runner.getResults()[testcase_stepcount-1].getResponseContent()
     //还原设置参数
	tearDownInput(testcase_name,request_params)

	//还原cookie设置
	setCookies(testcase_name, teststep_name,'teardown')

     //把测试结果json化后传出去
	def slurper = new JsonSlurper()
	def re = slurper.parseText(response_content)
	
	return re
}


def tearDownInput(String testcase_name,List request_params){
	for(i in request_params){
		testRunner.testCase.testSuite.project.testSuites['common_testsuite'].testCases[testcase_name].testSteps['testdata'].setPropertyValue(i.split('=')[0],'')
		}
}


def setCookies(String testcase_name,String teststep_name,String userid){
	//按用户名读取预置的cookie值
	def testproject = testRunner.testCase.testSuite.project
	def cookies_str = testproject.testSuites['common_testsuite'].testCases['cookie'].testSteps['user_cookie'].getPropertyValue(userid)
	def reqheaders = new StringToStringMap()
	reqheaders.put('Cookie',cookies_str)
	testproject.testSuites['common_testsuite'].getTestCaseByName(testcase_name).getTestStepByName(teststep_name).testRequest.setRequestHeaders(reqheaders)	
}


def setaptcha(String userid,List prams_list){
	//按用户名读取预置的cookie值
	def testproject = testRunner.testCase.testSuite.project
	def cookies_str = testproject.testSuites['common_testsuite'].testCases['cookie'].testSteps['user_cookie'].getPropertyValue(userid)
	
	def values = cookies_str.split(';')
	
	for(i in (0..(values.size()-1))){
		if(values[i].split('=')[0] == '_dfcaptcha') {
			prams_list.add('captcha=' + values[i].split('=')[1])
			return prams_list
		}
	}
	
}
</script></con:config></con:testStep><con:properties/><con:reportParameters/><con:breakPoints><con:testStepId>121ef1f5-0a56-4618-a955-ac42729beef2</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>733fb573-f4c7-4802-85a5-5013d0bc40dd</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d039e22a-73fc-42cf-9dc7-b5a669b82d76</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>b19c3bdd-7965-415d-b9b8-ef34dee8bbc3</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>15154d9b-1f7b-45f4-9157-9dbdeac5d7cb</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>5a60065a-69f5-47b2-ab51-49ab7c15093c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>9c82e430-846e-48f2-b7f3-016502e798a9</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>3f61486a-cbed-4206-b7b7-efaf22b5fc0a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c3d2d12b-5980-4f1f-8021-b846f1e24757</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>ede56ceb-ef8d-47c3-9307-0e33ae5eca65</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>8118561d-a912-4070-a3ea-b4b91be5e27d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>5f89b8ef-16ee-4b2e-8f7c-e32211983b76</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c4cfa5c4-fe5a-4857-a592-9b28b708c604</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>b9b52ad6-9c61-418f-a2b3-eedc084b8483</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>eeba8cd1-6a5b-487e-be9e-0b75657212b6</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>654d71d9-c466-42be-9438-0223b8d0ef8a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>f0cbabdb-2e3a-4a09-acd5-05f75a30a7d8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>643d156a-8a68-4d15-b966-571df35833bc</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>40001adb-64f9-407f-a7bb-f5d3f2bfeb69</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>ff12306a-aa60-4873-b361-0dc69cfe7cad</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>4c271b58-de55-47ee-b992-5b479a1f7f6f</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>6db8ae81-fd0f-4df2-8479-49a443d86c23</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>67a08bc6-ea48-42f4-a351-7dd59801a407</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>b848cc0e-2bae-4436-86d4-ea46e8d760f4</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:properties/><con:reportParameters/></con:testSuite><con:testSuite id="0195aad1-5aa3-4bdd-853b-b357b25f6875" name="testcase"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase id="407e13ca-621e-47bd-abb1-aa9e6ad4d192" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="testcase" searchProperties="true"><con:settings/><con:testStep type="groovy" name="testcase" id="b7825fea-9fae-43a2-987d-d3d61aaf49ba"><con:settings/><con:config><script>import com.eviware.soapui.impl.wsdl.testcase.WsdlTestRunContext
def testproject = testRunner.testCase.testSuite.project
//设置执行的套件的步骤
def testStep = testproject.testSuites['case'].testCases['case'].testSteps['get']
def testStep1 = testproject.testSuites['case'].testCases['case'].testSteps['add']
def testStep2 = testproject.testSuites['case'].testCases['case'].testSteps['del']
def testStep3 = testproject.testSuites['case'].testCases['case'].testSteps['clear']
testStep1.run(testRunner,context)
testStep.run(testRunner, context)</script></con:config></con:testStep><con:testStep type="groovy" name="业务逻辑" id="9454c1c6-5a76-4760-b614-453a94b97996"><con:settings/><con:config><script>import com.eviware.soapui.support.types.StringToObjectMap

def testproject = testRunner.testCase.testSuite.project
//如果要跑单个的testcase里的某一步可以使用：
def teststep = testproject.testSuites['common_testsuite'].testCases['cache/set'].testSteps['tssign']
 teststep.run(testRunner, context)
//或者在指定某个case直接运行：
//def testcase =  testproject.testSuites['case'].testCases['case']
//def contextMap = new StringToObjectMap(context)
//testcase.run(contextMap, false)</script></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:properties/><con:reportParameters/></con:testSuite><con:requirements/><con:properties/><con:wssContainer/><con:databaseConnectionContainer/><con:oAuth2ProfileContainer/><con:reporting><con:reportTemplates/><con:xmlTemplates/><con:parameters/></con:reporting><con:sensitiveInformation/></con:soapui-project>