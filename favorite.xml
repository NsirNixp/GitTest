<?xml version="1.0" encoding="UTF-8"?>
<con:soapui-project id="efaaa97e-59a5-4e93-8d6e-4d91645755f1" activeEnvironment="Default" name="favorite_service_easy" resourceRoot="" soapui-version="5.1.2" xmlns:con="http://eviware.com/soapui/config"><con:settings/><con:interface xsi:type="con:RestService" id="9b2426b0-0916-4869-9fbd-dcd011e8d7f5" wadlVersion="http://wadl.dev.java.net/2009/02" name="http://api.bilibili.com" type="rest" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart=""/><con:endpoints><con:endpoint>http://api.bilibili.com</con:endpoint></con:endpoints><con:resource name="" path="/x/v2/fav/folder" id="6606c1ed-58cd-46d8-b570-53b4318eea38"><con:settings/><con:parameters><con:parameter><con:name>appkey</con:name><con:value/><con:style>QUERY</con:style><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>sign</con:name><con:value/><con:style>QUERY</con:style><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>mid</con:name><con:value/><con:style>QUERY</con:style><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>ts</con:name><con:value/><con:style>QUERY</con:style><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>jsonp</con:name><con:value/><con:style>QUERY</con:style><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>vmid</con:name><con:value/><con:style>QUERY</con:style><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>callback</con:name><con:value/><con:style>QUERY</con:style><con:default/><con:description xsi:nil="true"/></con:parameter></con:parameters><con:method name="" id="4d52fa1f-4661-4381-ae7f-3251b115e42e" method="GET"><con:settings/><con:parameters/><con:representation type="RESPONSE"><con:mediaType>application/json;charset=utf-8</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:fol="http://api.bilibili.com/x/v2/favourite/folder">fol:Response</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/html; charset=utf-8</con:mediaType><con:status>404</con:status><con:params/><con:element>html</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/html</con:mediaType><con:status>404</con:status><con:params/><con:element>html</con:element></con:representation><con:request name="获取用户收藏夹" id="09713235-4800-442a-ab74-0dafabc71f1a" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://api.bilibili.com</con:endpoint><con:request/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder><con:entry>appkey</con:entry><con:entry>sign</con:entry><con:entry>mid</con:entry><con:entry>ts</con:entry><con:entry>jsonp</con:entry><con:entry>vmid</con:entry><con:entry>callback</con:entry></con:parameterOrder></con:request></con:method></con:resource><con:resource name="" path="/x/v2/fav/folder/add" id="4c1ba387-056b-4078-9c4d-a70fa2d528fd"><con:settings/><con:parameters><con:parameter><con:name>appkey</con:name><con:value/><con:style>QUERY</con:style><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>sign</con:name><con:value/><con:style>QUERY</con:style><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>mid</con:name><con:value/><con:style>QUERY</con:style><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>ts</con:name><con:value/><con:style>QUERY</con:style><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>jsonp</con:name><con:value/><con:style>QUERY</con:style><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>callback</con:name><con:value/><con:style>QUERY</con:style><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>name</con:name><con:value/><con:style>QUERY</con:style><con:default/><con:description xsi:nil="true"/></con:parameter></con:parameters><con:method name="Method 1" id="7c2be47a-314b-47ae-8337-b165c74c7d2f" method="POST"><con:settings/><con:parameters/><con:representation type="RESPONSE"><con:mediaType>application/json;charset=utf-8</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:add="http://api.bilibili.com/x/v2/favourite/folder/add">add:Response</con:element></con:representation><con:representation type="REQUEST"><con:mediaType>application/x-www-form-urlencoded</con:mediaType><con:params/></con:representation><con:request name="添加收藏夹" id="fe132691-7891-449f-857e-d508ba0de12a" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://api.bilibili.com</con:endpoint><con:request/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder><con:entry>appkey</con:entry><con:entry>sign</con:entry><con:entry>mid</con:entry><con:entry>ts</con:entry><con:entry>jsonp</con:entry><con:entry>callback</con:entry><con:entry>name</con:entry></con:parameterOrder></con:request></con:method></con:resource><con:resource name="" path="/x/v2/fav/folder/rename" id="f9a15396-3f3b-464e-b284-0612ce19808b"><con:settings/><con:parameters><con:parameter><con:name>appkey</con:name><con:value/><con:style>QUERY</con:style><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>sign</con:name><con:value/><con:style>QUERY</con:style><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>mid</con:name><con:value/><con:style>QUERY</con:style><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>ts</con:name><con:value/><con:style>QUERY</con:style><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>jsonp</con:name><con:value/><con:style>QUERY</con:style><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>callback</con:name><con:value/><con:style>QUERY</con:style><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>fid</con:name><con:value/><con:style>QUERY</con:style><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>name</con:name><con:value/><con:style>QUERY</con:style><con:default/><con:description xsi:nil="true"/></con:parameter></con:parameters><con:method name="Method 1" id="5e718c21-0860-498b-b5bc-aa89c4c9646e" method="POST"><con:settings/><con:parameters/><con:request name="收藏夹重命名" id="a37a1d7a-beaa-4afd-b648-d51dd0f43be3" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://api.bilibili.com</con:endpoint><con:request/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder><con:entry>appkey</con:entry><con:entry>sign</con:entry><con:entry>mid</con:entry><con:entry>ts</con:entry><con:entry>jsonp</con:entry><con:entry>callback</con:entry><con:entry>fid</con:entry><con:entry>name</con:entry></con:parameterOrder></con:request></con:method></con:resource></con:interface><con:testSuite id="40673c90-c41e-4b33-98ee-4789020bf7e3" name="common_testsuite"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase id="a7a514ec-6721-467f-bf1e-2796cc8addb1" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="cookie" searchProperties="true"><con:settings/><con:testStep type="properties" name="user_cookie" id="20835619-6672-4c8b-b19c-7a26e8d4f9b8"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>user001</con:name><con:value>DedeUserID=15663561;DedeUserID__ckMd5=215d9245b74d109f;SESSDATA=f7ae1726%2C1447228006%2C2ae7d08c;_dfcaptcha=f7d457380fc124c54c63b213da5274ef;sid=le4i1bqk;</con:value></con:property><con:property><con:name>user002</con:name><con:value/></con:property><con:property><con:name>user_super001</con:name><con:value>DedeUserID=5746800; DedeUserID__ckMd5=7ee132bc92fc7305; SESSDATA=c0dcae73%2C1445863602%2C60b6d178;</con:value></con:property><con:property><con:name>teardown</con:name><con:value/></con:property><con:property><con:name>user005</con:name><con:value>DedeUserID=17191256; DedeUserID__ckMd5=3584ad65e4e5417e; SESSDATA=dfee6279%2C1447147750%2Cadbe8899;_dfcaptcha=8d62da0cb8dce674cd0717e0489a184d;sid=an0mgthy;</con:value></con:property><con:property><con:name>user000</con:name><con:value>DedeUserID=4780461; DedeUserID__ckMd5=13d78097a9671f45; SESSDATA=bc1f02ec%2C1460440119%2C01a0da55;_dfcaptcha=fd193bf522249100552f1f3f17ae172a;sid=7zm9i1qf;</con:value></con:property><con:property><con:name>usernixp</con:name><con:value>DedeUserID=17668003;DedeUserID__ckMd5=8aa32229517ebaac;SESSDATA=7bf20cf0%2C1471671573%2Cd55fdd40;_dfcaptcha=06913782a097bf82cd6335877fbba34c;sid=aroj0p2g;</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="properties" name="access_key" id="bd539e02-c509-4d27-8d81-3c6e6de396fe"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>access000</con:name><con:value>access_key=d3ac48906b9ffafa4524a9cdee9e7455</con:value></con:property></con:properties></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase id="0a6bc013-e8b8-4824-acd0-40da81fa208c" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="/x/v2/favourite/folder" searchProperties="true"><con:settings/><con:testStep type="groovy" name="tssign" id="963d62b7-fea3-4174-b208-58400bf8edfa"><con:settings/><con:config><script>import java.util.*
import java.security.MessageDigest
import java.net.URLEncoder

//计算时间戳
Date date = new Date()
def st_string = date.getTime()
st_string = st_string.toString()
st_string = st_string.substring(0,10)


//===========================需要手工参与的地方=======================================
//1.设置data_list
//设置预读取的testdata里除sign以外的参数名字，用于计算md5
def data_list = ['appkey','mid','ts','jsonp','callback','vmid']
//测试专用的appkey
def appkey_str = '7d9f6f6fe2a898e8'
//测试专用appkey对应的appsecret
def appsecret_str = '4de2ccdbd9db69be0c2c6437bfe6eb69'
//====================================================================================

//修改list按字母排序
data_list = data_list.sort()
log.info data_list

testRunner.testCase.testSteps["testdata"].setPropertyValue('ts',st_string)
testRunner.testCase.testSteps["testdata"].setPropertyValue('appkey',appkey_str)
testRunner.testCase.testSteps["testdata"].setPropertyValue('jsonp','jsonp')
def n = 0
def sg_orgin_string = ''
def sg_md5_string = ''

while (n&lt;data_list.size()){
	def getLocalPropValue = ''
	if(data_list[n] == 'appkey'){
		sg_orgin_string = sg_orgin_string + data_list[n] + '=' + java.net.URLEncoder.encode(appkey_str,'UTF-8') + '&amp;' 
	}else{
		if( testRunner.testCase.testSteps["testdata"].getPropertyValue(data_list[n]) == ''){
			log.info('null')
		}else{
			getLocalPropValue = testRunner.testCase.testSteps["testdata"].getPropertyValue(data_list[n])
			sg_orgin_string = sg_orgin_string + data_list[n] + '=' + java.net.URLEncoder.encode(getLocalPropValue,'UTF-8') + '&amp;'
		}
	}
	n = n + 1
}

def orgin_len = sg_orgin_string.size()
sg_orgin_string = sg_orgin_string[0..(orgin_len-2)]

//还原空格设置
sg_orgin_string = sg_orgin_string.replace('^',' ')

sg_orgin_string =  sg_orgin_string + appsecret_str
sg_md5_string = getMD5(sg_orgin_string)

log.info sg_orgin_string
log.info sg_md5_string

testRunner.testCase.testSteps["testdata"].setPropertyValue('sign',sg_md5_string)


//get md5
//=============================
def getMD5(String source){
	MessageDigest md5 = MessageDigest.getInstance("MD5")
	md5.update(source.getBytes())
	byte[] digest = md5.digest()
	StringBuffer sb = new StringBuffer()
	digest.eachByte {
		 sb.append(String.format("%02x", it &amp; 0xff)) 
	}
	return sb.toString()
}
</script></con:config></con:testStep><con:testStep type="properties" name="testdata" id="1eb5ac5d-a0a0-4425-94be-3e2f761b6a69"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>appkey</con:name><con:value>7d9f6f6fe2a898e8</con:value></con:property><con:property><con:name>mid</con:name><con:value/></con:property><con:property><con:name>sign</con:name><con:value>c42e8e4d8115b9f1ea403795abc78b59</con:value></con:property><con:property><con:name>ts</con:name><con:value>1470910367</con:value></con:property><con:property><con:name>jsonp</con:name><con:value>jsonp</con:value></con:property><con:property><con:name>callback</con:name><con:value/></con:property><con:property><con:name>vmid</con:name><con:value/></con:property></con:properties></con:config></con:testStep><con:testStep type="transfer" name="Property Transfer" id="5dd1be3b-3b9d-4651-8539-2769210f5a38"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>appkey</con:name><con:sourceType>appkey</con:sourceType><con:sourceStep>testdata</con:sourceStep><con:targetType>appkey</con:targetType><con:targetStep>/x/v2/favourite/folder</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>sign</con:name><con:sourceType>sign</con:sourceType><con:sourceStep>testdata</con:sourceStep><con:targetType>sign</con:targetType><con:targetStep>/x/v2/favourite/folder</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>ts</con:name><con:sourceType>ts</con:sourceType><con:sourceStep>testdata</con:sourceStep><con:targetType>ts</con:targetType><con:targetStep>/x/v2/favourite/folder</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>mid</con:name><con:sourceType>mid</con:sourceType><con:sourceStep>testdata</con:sourceStep><con:targetType>mid</con:targetType><con:targetStep>/x/v2/favourite/folder</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>jsonp</con:name><con:sourceType>jsonp</con:sourceType><con:sourceStep>testdata</con:sourceStep><con:targetType>jsonp</con:targetType><con:targetStep>/x/v2/favourite/folder</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>callback</con:name><con:sourceType>callback</con:sourceType><con:sourceStep>testdata</con:sourceStep><con:targetType>callback</con:targetType><con:targetStep>/x/v2/favourite/folder</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>vmid</con:name><con:sourceType>vmid</con:sourceType><con:sourceStep>testdata</con:sourceStep><con:targetType>vmid</con:targetType><con:targetStep>/x/v2/favourite/folder</con:targetStep><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="/x/v2/favourite/folder" id="4fc2f18c-7dd1-44c6-9521-6a2ae7963061"><con:settings/><con:config service="http://api.bilibili.com" resourcePath="/x/v2/fav/folder" methodName="" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="/x/v2/favourite/folder" id="09713235-4800-442a-ab74-0dafabc71f1a" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Cookie" value="" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>http://api.bilibili.com</con:endpoint><con:request/><con:originalUri>http://api.bilibili.com/x/v2/favourite/folder</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="sign" value="c42e8e4d8115b9f1ea403795abc78b59"/>
  <con:entry key="ts" value="1470910367"/>
  <con:entry key="jsonp" value="jsonp"/>
  <con:entry key="appkey" value="7d9f6f6fe2a898e8"/>
  <con:entry key="mid" value="17668003"/>
</con:parameters><con:parameterOrder><con:entry>appkey</con:entry><con:entry>sign</con:entry><con:entry>mid</con:entry><con:entry>ts</con:entry><con:entry>jsonp</con:entry><con:entry>vmid</con:entry><con:entry>callback</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/><con:breakPoints><con:testStepId>1915cda0-6e39-450e-93ad-520140626577</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>80334f19-860a-4fb9-a09c-ff05e01a7ba5</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>0ba56c8e-1001-41a6-9ca6-975dbdbc0152</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>ce864572-412e-49ad-b57a-f79df9b78b7a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase id="328851b2-d3e3-46c1-9253-312f12bc7cbf" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="/x/v2/favourite/folder/add" searchProperties="true"><con:settings/><con:testStep type="groovy" name="tssign" id="5301a2a0-3453-4bfd-b039-37d3335a58f6"><con:settings/><con:config><script>import java.util.*
import java.security.MessageDigest
import java.net.URLEncoder

//计算时间戳
Date date = new Date()
def st_string = date.getTime()
st_string = st_string.toString()
st_string = st_string.substring(0,10)


//===========================需要手工参与的地方=======================================
//1.设置data_list
//设置预读取的testdata里除sign以外的参数名字，用于计算md5
def data_list = ['appkey','mid','ts','jsonp','callback','name']
//测试专用的appkey
def appkey_str = '7d9f6f6fe2a898e8'
//测试专用appkey对应的appsecret
def appsecret_str = '4de2ccdbd9db69be0c2c6437bfe6eb69'
//====================================================================================

//修改list按字母排序
data_list = data_list.sort()
log.info data_list

testRunner.testCase.testSteps["testdata"].setPropertyValue('ts',st_string)
testRunner.testCase.testSteps["testdata"].setPropertyValue('appkey',appkey_str)
testRunner.testCase.testSteps["testdata"].setPropertyValue('jsonp','jsonp')
def n = 0
def sg_orgin_string = ''
def sg_md5_string = ''

while (n&lt;data_list.size()){
	def getLocalPropValue = ''
	if(data_list[n] == 'appkey'){
		sg_orgin_string = sg_orgin_string + data_list[n] + '=' + java.net.URLEncoder.encode(appkey_str,'UTF-8') + '&amp;' 
	}else{
		if( testRunner.testCase.testSteps["testdata"].getPropertyValue(data_list[n]) == ''){
			log.info('null')
		}else{
			getLocalPropValue = testRunner.testCase.testSteps["testdata"].getPropertyValue(data_list[n])
			sg_orgin_string = sg_orgin_string + data_list[n] + '=' + java.net.URLEncoder.encode(getLocalPropValue,'UTF-8') + '&amp;'
		}
	}
	n = n + 1
}

def orgin_len = sg_orgin_string.size()
sg_orgin_string = sg_orgin_string[0..(orgin_len-2)]

//还原空格设置
sg_orgin_string = sg_orgin_string.replace('^',' ')

sg_orgin_string =  sg_orgin_string + appsecret_str
sg_md5_string = getMD5(sg_orgin_string)

log.info sg_orgin_string
log.info sg_md5_string

testRunner.testCase.testSteps["testdata"].setPropertyValue('sign',sg_md5_string)


//get md5
//=============================
def getMD5(String source){
	MessageDigest md5 = MessageDigest.getInstance("MD5")
	md5.update(source.getBytes())
	byte[] digest = md5.digest()
	StringBuffer sb = new StringBuffer()
	digest.eachByte {
		 sb.append(String.format("%02x", it &amp; 0xff)) 
	}
	return sb.toString()
}
</script></con:config></con:testStep><con:testStep type="properties" name="testdata" id="80af6269-9d68-4a50-8279-d72b01e0a25a"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>appkey</con:name><con:value>7d9f6f6fe2a898e8</con:value></con:property><con:property><con:name>mid</con:name><con:value/></con:property><con:property><con:name>sign</con:name><con:value>ad07cad9e6ed5c9e12584000cf992af6</con:value></con:property><con:property><con:name>ts</con:name><con:value>1469175824</con:value></con:property><con:property><con:name>jsonp</con:name><con:value>jsonp</con:value></con:property><con:property><con:name>callback</con:name><con:value/></con:property><con:property><con:name>name</con:name><con:value/></con:property></con:properties></con:config></con:testStep><con:testStep type="transfer" name="Property Transfer" id="b5067455-f244-4974-a5ba-15dc78ff0787"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>appkey</con:name><con:sourceType>appkey</con:sourceType><con:sourceStep>testdata</con:sourceStep><con:targetType>appkey</con:targetType><con:targetStep>/x/v2/favourite/folder/add</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>sign</con:name><con:sourceType>sign</con:sourceType><con:sourceStep>testdata</con:sourceStep><con:targetType>sign</con:targetType><con:targetStep>/x/v2/favourite/folder/add</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>ts</con:name><con:sourceType>ts</con:sourceType><con:sourceStep>testdata</con:sourceStep><con:targetType>ts</con:targetType><con:targetStep>/x/v2/favourite/folder/add</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>mid</con:name><con:sourceType>mid</con:sourceType><con:sourceStep>testdata</con:sourceStep><con:targetType>mid</con:targetType><con:targetStep>/x/v2/favourite/folder/add</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>jsonp</con:name><con:sourceType>jsonp</con:sourceType><con:sourceStep>testdata</con:sourceStep><con:targetType>jsonp</con:targetType><con:targetStep>/x/v2/favourite/folder/add</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>callback</con:name><con:sourceType>callback</con:sourceType><con:sourceStep>testdata</con:sourceStep><con:targetType>callback</con:targetType><con:targetStep>/x/v2/favourite/folder/add</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>name</con:name><con:sourceType>name</con:sourceType><con:sourceStep>testdata</con:sourceStep><con:targetType>name</con:targetType><con:targetStep>/x/v2/favourite/folder/add</con:targetStep><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="/x/v2/favourite/folder/add" id="ea87b7f7-cea6-4f99-aad7-8f3eaf4f3b2c"><con:settings/><con:config service="http://api.bilibili.com" resourcePath="/x/v2/fav/folder/add" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="/x/v2/favourite/folder/add" id="fe132691-7891-449f-857e-d508ba0de12a" mediaType="application/x-www-form-urlencoded" postQueryString="true"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Cookie" value="" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>http://api.bilibili.com</con:endpoint><con:request/><con:originalUri>http://api.bilibili.com/x/v2/favourite/folder/add</con:originalUri><con:credentials><con:username>动漫</con:username><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="sign" value="ad07cad9e6ed5c9e12584000cf992af6"/>
  <con:entry key="ts" value="1469175824"/>
  <con:entry key="jsonp" value="jsonp"/>
  <con:entry key="name" value="aaaa"/>
  <con:entry key="appkey" value="7d9f6f6fe2a898e8"/>
  <con:entry key="mid" value="17668003"/>
</con:parameters><con:parameterOrder><con:entry>appkey</con:entry><con:entry>sign</con:entry><con:entry>mid</con:entry><con:entry>ts</con:entry><con:entry>jsonp</con:entry><con:entry>callback</con:entry><con:entry>name</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/><con:breakPoints><con:testStepId>1915cda0-6e39-450e-93ad-520140626577</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>80334f19-860a-4fb9-a09c-ff05e01a7ba5</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>0ba56c8e-1001-41a6-9ca6-975dbdbc0152</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>ce864572-412e-49ad-b57a-f79df9b78b7a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase id="f878197a-ad29-4d68-85dd-7e375b571c81" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="/x/v2/favourite/folder/rename" searchProperties="true"><con:settings/><con:testStep type="groovy" name="tssign" id="149c4929-02a7-4200-9e7d-d2083cdef658"><con:settings/><con:config><script>import java.util.*
import java.security.MessageDigest
import java.net.URLEncoder

//计算时间戳
Date date = new Date()
def st_string = date.getTime()
st_string = st_string.toString()
st_string = st_string.substring(0,10)


//===========================需要手工参与的地方=======================================
//1.设置data_list
//设置预读取的testdata里除sign以外的参数名字，用于计算md5
def data_list = ['appkey','mid','ts','jsonp','callback','fid','name']
//测试专用的appkey
def appkey_str = '7d9f6f6fe2a898e8'
//测试专用appkey对应的appsecret
def appsecret_str = '4de2ccdbd9db69be0c2c6437bfe6eb69'
//====================================================================================

//修改list按字母排序
data_list = data_list.sort()
log.info data_list

testRunner.testCase.testSteps["testdata"].setPropertyValue('ts',st_string)
testRunner.testCase.testSteps["testdata"].setPropertyValue('appkey',appkey_str)
testRunner.testCase.testSteps["testdata"].setPropertyValue('jsonp','jsonp')
def n = 0
def sg_orgin_string = ''
def sg_md5_string = ''

while (n&lt;data_list.size()){
	def getLocalPropValue = ''
	if(data_list[n] == 'appkey'){
		sg_orgin_string = sg_orgin_string + data_list[n] + '=' + java.net.URLEncoder.encode(appkey_str,'UTF-8') + '&amp;' 
	}else{
		if( testRunner.testCase.testSteps["testdata"].getPropertyValue(data_list[n]) == ''){
			log.info('null')
		}else{
			getLocalPropValue = testRunner.testCase.testSteps["testdata"].getPropertyValue(data_list[n])
			sg_orgin_string = sg_orgin_string + data_list[n] + '=' + java.net.URLEncoder.encode(getLocalPropValue,'UTF-8') + '&amp;'
		}
	}
	n = n + 1
}

def orgin_len = sg_orgin_string.size()
sg_orgin_string = sg_orgin_string[0..(orgin_len-2)]

//还原空格设置
sg_orgin_string = sg_orgin_string.replace('^',' ')

sg_orgin_string =  sg_orgin_string + appsecret_str
sg_md5_string = getMD5(sg_orgin_string)

log.info sg_orgin_string
log.info sg_md5_string

testRunner.testCase.testSteps["testdata"].setPropertyValue('sign',sg_md5_string)


//get md5
//=============================
def getMD5(String source){
	MessageDigest md5 = MessageDigest.getInstance("MD5")
	md5.update(source.getBytes())
	byte[] digest = md5.digest()
	StringBuffer sb = new StringBuffer()
	digest.eachByte {
		 sb.append(String.format("%02x", it &amp; 0xff)) 
	}
	return sb.toString()
}
</script></con:config></con:testStep><con:testStep type="properties" name="testdata" id="942b7ae3-812d-4b04-9728-32329a2032ec"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>appkey</con:name><con:value>7d9f6f6fe2a898e8</con:value></con:property><con:property><con:name>mid</con:name><con:value/></con:property><con:property><con:name>sign</con:name><con:value>7163f1cbeb76513385187c7fecdb3976</con:value></con:property><con:property><con:name>ts</con:name><con:value>1470910333</con:value></con:property><con:property><con:name>jsonp</con:name><con:value>jsonp</con:value></con:property><con:property><con:name>callback</con:name><con:value/></con:property><con:property><con:name>name</con:name><con:value/></con:property><con:property><con:name>fid</con:name><con:value/></con:property></con:properties></con:config></con:testStep><con:testStep type="transfer" name="Property Transfer" id="1f3839db-3b42-4264-ac55-c69f16403459"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>appkey</con:name><con:sourceType>appkey</con:sourceType><con:sourceStep>testdata</con:sourceStep><con:targetType>appkey</con:targetType><con:targetStep>/x/v2/favourite/folder/rename</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>sign</con:name><con:sourceType>sign</con:sourceType><con:sourceStep>testdata</con:sourceStep><con:targetType>sign</con:targetType><con:targetStep>/x/v2/favourite/folder/rename</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>ts</con:name><con:sourceType>ts</con:sourceType><con:sourceStep>testdata</con:sourceStep><con:targetType>ts</con:targetType><con:targetStep>/x/v2/favourite/folder/rename</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>mid</con:name><con:sourceType>mid</con:sourceType><con:sourceStep>testdata</con:sourceStep><con:targetType>mid</con:targetType><con:targetStep>/x/v2/favourite/folder/rename</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>jsonp</con:name><con:sourceType>jsonp</con:sourceType><con:sourceStep>testdata</con:sourceStep><con:targetType>jsonp</con:targetType><con:targetStep>/x/v2/favourite/folder/rename</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>callback</con:name><con:sourceType>callback</con:sourceType><con:sourceStep>testdata</con:sourceStep><con:targetType>callback</con:targetType><con:targetStep>/x/v2/favourite/folder/rename</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>fid</con:name><con:sourceType>fid</con:sourceType><con:sourceStep>testdata</con:sourceStep><con:targetType>fid</con:targetType><con:targetStep>/x/v2/favourite/folder/rename</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>name</con:name><con:sourceType>name</con:sourceType><con:sourceStep>testdata</con:sourceStep><con:targetType>name</con:targetType><con:targetStep>/x/v2/favourite/folder/rename</con:targetStep><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="/x/v2/favourite/folder/rename" id="7daef578-9f50-4672-a437-0678184cfc9a"><con:settings/><con:config service="http://api.bilibili.com" resourcePath="/x/v2/fav/folder/rename" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="/x/v2/favourite/folder/rename" id="a37a1d7a-beaa-4afd-b648-d51dd0f43be3" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Cookie" value="" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>http://api.bilibili.com</con:endpoint><con:request/><con:originalUri>http://api.bilibili.com/x/v2/favourite/folder/rename</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="fid" value="591"/>
  <con:entry key="sign" value="7163f1cbeb76513385187c7fecdb3976"/>
  <con:entry key="ts" value="1470910333"/>
  <con:entry key="jsonp" value="jsonp"/>
  <con:entry key="name" value="laofuzi"/>
  <con:entry key="appkey" value="7d9f6f6fe2a898e8"/>
</con:parameters><con:parameterOrder><con:entry>appkey</con:entry><con:entry>sign</con:entry><con:entry>mid</con:entry><con:entry>ts</con:entry><con:entry>jsonp</con:entry><con:entry>callback</con:entry><con:entry>fid</con:entry><con:entry>name</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/><con:breakPoints><con:testStepId>1915cda0-6e39-450e-93ad-520140626577</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>80334f19-860a-4fb9-a09c-ff05e01a7ba5</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>0ba56c8e-1001-41a6-9ca6-975dbdbc0152</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>ce864572-412e-49ad-b57a-f79df9b78b7a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:properties/><con:reportParameters/></con:testSuite><con:testSuite id="3f7cf7b8-6a8b-4932-afdd-ce8a8f6ac6ed" name="case"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase id="d0af5055-0cca-4438-a5b5-d350cc050610" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TestCase 1" searchProperties="true"><con:settings/><con:testStep type="groovy" name="获取用户的收藏夹" id="bf4035bf-9cd2-4b7e-9369-1f37ed5883ec"><con:settings/><con:config><script>import com.eviware.soapui.support.types.StringToObjectMap
import groovy.json.JsonSlurper
import com.eviware.soapui.impl.wsdl.support.http.HttpClientSupport
import org.apache.http.impl.cookie.BasicClientCookie
import com.eviware.soapui.support.types.StringToStringMap
//配置参数
def params_list =  ['mid=17668003']

log.info("获取用户的收藏夹")

log.info(params_list)
//选择执行的测试套件

setCookies('/x/v2/favourite/folder', '/x/v2/favourite/folder', 'usernixp')
def testcase_name = '/x/v2/favourite/folder'
def teststep_name = '/x/v2/favourite/folder'

def re = getContentOut(testcase_name,teststep_name,params_list)

//检验返回码
//assert(re.code == 0)
log.info(re)

def getContentOut(String testcase_name,String teststep_name,List request_params){
	def testproject = testRunner.testCase.testSuite.project
	def testcase = testproject.testSuites['common_testsuite'].testCases[testcase_name]

	for(i in request_params){
		testcase.testSteps['testdata'].setPropertyValue(i.split('=')[0],i.split('=')[1])
		log.info i.split('=')[0]
		log.info i.split('=')[1]
		}

	def contextMap = new StringToObjectMap(context)
	def runner = testcase.run(contextMap,false)
	//获取测试的请求
	def testcase_stepcount = testcase.getTestStepCount() 

	def response_content = runner.getResults()[testcase_stepcount-1].getResponseContent()
	log.info response_content
     //还原设置参数
	tearDownInput(testcase_name,request_params)

	//还原cookie设置
	setCookies(testcase_name, teststep_name,'teardown')

     //把测试结果json化后传出去
	def slurper = new JsonSlurper()
	def re = slurper.parseText(response_content)
	
	return re
}


def tearDownInput(String testcase_name,List request_params){
	for(i in request_params){
		testRunner.testCase.testSuite.project.testSuites['common_testsuite'].testCases[testcase_name].testSteps['testdata'].setPropertyValue(i.split('=')[0],'')
		}
}


def setCookies(String testcase_name,String teststep_name,String userid){
	//按用户名读取预置的cookie值
	def testproject = testRunner.testCase.testSuite.project
	def cookies_str = testproject.testSuites['common_testsuite'].testCases['cookie'].testSteps['user_cookie'].getPropertyValue(userid)
	def reqheaders = new StringToStringMap()
	reqheaders.put('Cookie',cookies_str)
	testproject.testSuites['common_testsuite'].getTestCaseByName(testcase_name).getTestStepByName(teststep_name).testRequest.setRequestHeaders(reqheaders)	
}


def setaptcha(String userid,List prams_list){
	//按用户名读取预置的cookie值
	def testproject = testRunner.testCase.testSuite.project
	def cookies_str = testproject.testSuites['common_testsuite'].testCases['cookie'].testSteps['user_cookie'].getPropertyValue(userid)
	
	def values = cookies_str.split(';')
	
	for(i in (0..(values.size()-1))){
		if(values[i].split('=')[0] == '_dfcaptcha') {
			prams_list.add('captcha=' + values[i].split('=')[1])
			return prams_list
		}
	}
	
}
</script></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase id="35364259-377d-4ece-95c9-d211578a129a" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TestCase 2" searchProperties="true"><con:settings/><con:testStep type="groovy" name="添加的收藏夹" id="b79558bf-46cb-4a32-b6ad-700cef68aa42"><con:settings/><con:config><script>import com.eviware.soapui.support.types.StringToObjectMap
import groovy.json.JsonSlurper
import com.eviware.soapui.impl.wsdl.support.http.HttpClientSupport
import org.apache.http.impl.cookie.BasicClientCookie
import com.eviware.soapui.support.types.StringToStringMap
//配置参数
def params_list =  ['mid=17668003', 'name=sdsds']

log.info("添加的收藏夹")

log.info(params_list)
//选择执行的测试套件

setCookies('/x/v2/favourite/folder/add', '/x/v2/favourite/folder/add', 'usernixp')
def testcase_name = '/x/v2/favourite/folder/add'
def teststep_name = '/x/v2/favourite/folder/add'

def re = getContentOut(testcase_name,teststep_name,params_list)

//检验返回码
//assert(re.code == 0)
log.info(re)

def getContentOut(String testcase_name,String teststep_name,List request_params){
	def testproject = testRunner.testCase.testSuite.project
	def testcase = testproject.testSuites['common_testsuite'].testCases[testcase_name]

	for(i in request_params){
		testcase.testSteps['testdata'].setPropertyValue(i.split('=')[0],i.split('=')[1])
		log.info i.split('=')[0]
		log.info i.split('=')[1]
		}

	def contextMap = new StringToObjectMap(context)
	def runner = testcase.run(contextMap,false)
	//获取测试的请求
	def testcase_stepcount = testcase.getTestStepCount() 

	def response_content = runner.getResults()[testcase_stepcount-1].getResponseContent()
	log.info response_content
     //还原设置参数
	tearDownInput(testcase_name,request_params)

	//还原cookie设置
	setCookies(testcase_name, teststep_name,'teardown')

     //把测试结果json化后传出去
	def slurper = new JsonSlurper()
	def re = slurper.parseText(response_content)
	
	return re
}


def tearDownInput(String testcase_name,List request_params){
	for(i in request_params){
		testRunner.testCase.testSuite.project.testSuites['common_testsuite'].testCases[testcase_name].testSteps['testdata'].setPropertyValue(i.split('=')[0],'')
		}
}


def setCookies(String testcase_name,String teststep_name,String userid){
	//按用户名读取预置的cookie值
	def testproject = testRunner.testCase.testSuite.project
	def cookies_str = testproject.testSuites['common_testsuite'].testCases['cookie'].testSteps['user_cookie'].getPropertyValue(userid)
	def reqheaders = new StringToStringMap()
	reqheaders.put('Cookie',cookies_str)
	testproject.testSuites['common_testsuite'].getTestCaseByName(testcase_name).getTestStepByName(teststep_name).testRequest.setRequestHeaders(reqheaders)	
}


def setaptcha(String userid,List prams_list){
	//按用户名读取预置的cookie值
	def testproject = testRunner.testCase.testSuite.project
	def cookies_str = testproject.testSuites['common_testsuite'].testCases['cookie'].testSteps['user_cookie'].getPropertyValue(userid)
	
	def values = cookies_str.split(';')
	
	for(i in (0..(values.size()-1))){
		if(values[i].split('=')[0] == '_dfcaptcha') {
			prams_list.add('captcha=' + values[i].split('=')[1])
			return prams_list
		}
	}
	
}
</script></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase id="4d461483-68fb-4b76-b68c-dd80c2688f66" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TestCase 3" searchProperties="true"><con:settings/><con:testStep type="groovy" name="重命名的收藏夹" id="17346368-bf7b-45e7-b250-39888384ffa4"><con:settings/><con:config><script>import com.eviware.soapui.support.types.StringToObjectMap
import groovy.json.JsonSlurper
import com.eviware.soapui.impl.wsdl.support.http.HttpClientSupport
import org.apache.http.impl.cookie.BasicClientCookie
import com.eviware.soapui.support.types.StringToStringMap
//配置参数
def params_list =  ['fid=591', 'name=laofu']

log.info("重命名的收藏夹")

log.info(params_list)
//选择执行的测试套件

setCookies('/x/v2/favourite/folder/rename', '/x/v2/favourite/folder/rename', 'usernixp')
def testcase_name = '/x/v2/favourite/folder/rename'
def teststep_name = '/x/v2/favourite/folder/rename'

def re = getContentOut(testcase_name,teststep_name,params_list)

//检验返回码
//assert(re.code == 0)
log.info(re)

def getContentOut(String testcase_name,String teststep_name,List request_params){
	def testproject = testRunner.testCase.testSuite.project
	def testcase = testproject.testSuites['common_testsuite'].testCases[testcase_name]

	for(i in request_params){
		testcase.testSteps['testdata'].setPropertyValue(i.split('=')[0],i.split('=')[1])
		log.info i.split('=')[0]
		log.info i.split('=')[1]
		}

	def contextMap = new StringToObjectMap(context)
	def runner = testcase.run(contextMap,false)
	//获取测试的请求
	def testcase_stepcount = testcase.getTestStepCount() 

	def response_content = runner.getResults()[testcase_stepcount-1].getResponseContent()
	log.info response_content
     //还原设置参数
	tearDownInput(testcase_name,request_params)

	//还原cookie设置
	setCookies(testcase_name, teststep_name,'teardown')

     //把测试结果json化后传出去
	def slurper = new JsonSlurper()
	def re = slurper.parseText(response_content)
	
	return re
}


def tearDownInput(String testcase_name,List request_params){
	for(i in request_params){
		testRunner.testCase.testSuite.project.testSuites['common_testsuite'].testCases[testcase_name].testSteps['testdata'].setPropertyValue(i.split('=')[0],'')
		}
}


def setCookies(String testcase_name,String teststep_name,String userid){
	//按用户名读取预置的cookie值
	def testproject = testRunner.testCase.testSuite.project
	def cookies_str = testproject.testSuites['common_testsuite'].testCases['cookie'].testSteps['user_cookie'].getPropertyValue(userid)
	def reqheaders = new StringToStringMap()
	reqheaders.put('Cookie',cookies_str)
	testproject.testSuites['common_testsuite'].getTestCaseByName(testcase_name).getTestStepByName(teststep_name).testRequest.setRequestHeaders(reqheaders)	
}


def setaptcha(String userid,List prams_list){
	//按用户名读取预置的cookie值
	def testproject = testRunner.testCase.testSuite.project
	def cookies_str = testproject.testSuites['common_testsuite'].testCases['cookie'].testSteps['user_cookie'].getPropertyValue(userid)
	
	def values = cookies_str.split(';')
	
	for(i in (0..(values.size()-1))){
		if(values[i].split('=')[0] == '_dfcaptcha') {
			prams_list.add('captcha=' + values[i].split('=')[1])
			return prams_list
		}
	}
	
}
</script></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:properties/><con:reportParameters/></con:testSuite><con:requirements/><con:properties/><con:wssContainer/><con:databaseConnectionContainer/><con:oAuth2ProfileContainer/><con:reporting><con:reportTemplates/><con:xmlTemplates/><con:parameters/></con:reporting><con:sensitiveInformation/></con:soapui-project>